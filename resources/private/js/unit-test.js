if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}


var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.DEBUG = true;
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array.prototype.slice.call(arguments, 2);
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-3123";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_target_STAR_ = "default";
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function cljs$core$_STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function cljs$core$set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function cljs$core$pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function cljs$core$enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__12248__delegate = function(args) {
      return console.log.apply(console, function() {
        var G__12247 = args;
        return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__12247) : cljs.core.into_array.call(null, G__12247);
      }());
    };
    var G__12248 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__12249__i = 0, G__12249__a = new Array(arguments.length - 0);
        while (G__12249__i < G__12249__a.length) {
          G__12249__a[G__12249__i] = arguments[G__12249__i + 0];
          ++G__12249__i;
        }
        args = new cljs.core.IndexedSeq(G__12249__a, 0);
      }
      return G__12248__delegate.call(this, args);
    };
    G__12248.cljs$lang$maxFixedArity = 0;
    G__12248.cljs$lang$applyTo = function(arglist__12250) {
      var args = cljs.core.seq(arglist__12250);
      return G__12248__delegate(args);
    };
    G__12248.cljs$core$IFn$_invoke$arity$variadic = G__12248__delegate;
    return G__12248;
  }();
};
cljs.core.truth_ = function cljs$core$truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function cljs$core$identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function cljs$core$nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function cljs$core$array_QMARK_(x) {
  if (cljs.core._STAR_target_STAR_ === "nodejs") {
    return Array.isArray(x);
  } else {
    return x instanceof Array;
  }
};
cljs.core.number_QMARK_ = function cljs$core$number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function cljs$core$not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.some_QMARK_ = function cljs$core$some_QMARK_(x) {
  return!(x == null);
};
cljs.core.object_QMARK_ = function cljs$core$object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function cljs$core$string_QMARK_(x) {
  var G__12252 = x;
  return goog.isString(G__12252);
};
cljs.core.native_satisfies_QMARK_ = function cljs$core$native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[function() {
    var G__12254 = x__$1;
    return goog.typeOf(G__12254);
  }()]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function cljs$core$is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function cljs$core$type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function cljs$core$missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__4110__auto__ = ty;
    if (cljs.core.truth_(and__4110__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__4110__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : function() {
    var G__12256 = obj;
    return goog.typeOf(G__12256);
  }();
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function cljs$core$type__GT_str(ty) {
  var temp__4124__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var s = temp__4124__auto__;
    return s;
  } else {
    return[cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function cljs$core$load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.nodeGlobalRequire(file);
  }
};
if (typeof Symbol !== "undefined" && function() {
  var G__12258 = Symbol;
  return goog.typeOf(G__12258);
}() === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = function() {
  var cljs$core$make_array = null;
  var cljs$core$make_array__1 = function(size) {
    return new Array(size);
  };
  var cljs$core$make_array__2 = function(type, size) {
    return cljs$core$make_array.cljs$core$IFn$_invoke$arity$1(size);
  };
  cljs$core$make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return cljs$core$make_array__1.call(this, type);
      case 2:
        return cljs$core$make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$make_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$make_array__1;
  cljs$core$make_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$make_array__2;
  return cljs$core$make_array;
}();
cljs.core.aclone = function cljs$core$aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__5007__auto___12260 = len;
  var i_12261 = 0;
  while (true) {
    if (i_12261 < n__5007__auto___12260) {
      new_arr[i_12261] = arr[i_12261];
      var G__12262 = i_12261 + 1;
      i_12261 = G__12262;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function cljs$core$array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__12263 = i + 1;
      i = G__12263;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.aget = function() {
  var cljs$core$aget = null;
  var cljs$core$aget__2 = function(array, i) {
    return array[i];
  };
  var cljs$core$aget__3 = function() {
    var G__12272__delegate = function(array, i, idxs) {
      var G__12269 = cljs$core$aget;
      var G__12270 = cljs$core$aget.cljs$core$IFn$_invoke$arity$2(array, i);
      var G__12271 = idxs;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__12269, G__12270, G__12271) : cljs.core.apply.call(null, G__12269, G__12270, G__12271);
    };
    var G__12272 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        var G__12273__i = 0, G__12273__a = new Array(arguments.length - 2);
        while (G__12273__i < G__12273__a.length) {
          G__12273__a[G__12273__i] = arguments[G__12273__i + 2];
          ++G__12273__i;
        }
        idxs = new cljs.core.IndexedSeq(G__12273__a, 0);
      }
      return G__12272__delegate.call(this, array, i, idxs);
    };
    G__12272.cljs$lang$maxFixedArity = 2;
    G__12272.cljs$lang$applyTo = function(arglist__12274) {
      var array = cljs.core.first(arglist__12274);
      arglist__12274 = cljs.core.next(arglist__12274);
      var i = cljs.core.first(arglist__12274);
      var idxs = cljs.core.rest(arglist__12274);
      return G__12272__delegate(array, i, idxs);
    };
    G__12272.cljs$core$IFn$_invoke$arity$variadic = G__12272__delegate;
    return G__12272;
  }();
  cljs$core$aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$aget__2.call(this, array, i);
      default:
        var G__12275 = null;
        if (arguments.length > 2) {
          var G__12276__i = 0, G__12276__a = new Array(arguments.length - 2);
          while (G__12276__i < G__12276__a.length) {
            G__12276__a[G__12276__i] = arguments[G__12276__i + 2];
            ++G__12276__i;
          }
          G__12275 = new cljs.core.IndexedSeq(G__12276__a, 0);
        }
        return cljs$core$aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, G__12275);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$aget.cljs$lang$maxFixedArity = 2;
  cljs$core$aget.cljs$lang$applyTo = cljs$core$aget__3.cljs$lang$applyTo;
  cljs$core$aget.cljs$core$IFn$_invoke$arity$2 = cljs$core$aget__2;
  cljs$core$aget.cljs$core$IFn$_invoke$arity$variadic = cljs$core$aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$aget;
}();
cljs.core.aset = function() {
  var cljs$core$aset = null;
  var cljs$core$aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var cljs$core$aset__4 = function() {
    var G__12285__delegate = function(array, idx, idx2, idxv) {
      var G__12281 = cljs$core$aset;
      var G__12282 = array[idx];
      var G__12283 = idx2;
      var G__12284 = idxv;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__12281, G__12282, G__12283, G__12284) : cljs.core.apply.call(null, G__12281, G__12282, G__12283, G__12284);
    };
    var G__12285 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        var G__12286__i = 0, G__12286__a = new Array(arguments.length - 3);
        while (G__12286__i < G__12286__a.length) {
          G__12286__a[G__12286__i] = arguments[G__12286__i + 3];
          ++G__12286__i;
        }
        idxv = new cljs.core.IndexedSeq(G__12286__a, 0);
      }
      return G__12285__delegate.call(this, array, idx, idx2, idxv);
    };
    G__12285.cljs$lang$maxFixedArity = 3;
    G__12285.cljs$lang$applyTo = function(arglist__12287) {
      var array = cljs.core.first(arglist__12287);
      arglist__12287 = cljs.core.next(arglist__12287);
      var idx = cljs.core.first(arglist__12287);
      arglist__12287 = cljs.core.next(arglist__12287);
      var idx2 = cljs.core.first(arglist__12287);
      var idxv = cljs.core.rest(arglist__12287);
      return G__12285__delegate(array, idx, idx2, idxv);
    };
    G__12285.cljs$core$IFn$_invoke$arity$variadic = G__12285__delegate;
    return G__12285;
  }();
  cljs$core$aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return cljs$core$aset__3.call(this, array, idx, idx2);
      default:
        var G__12288 = null;
        if (arguments.length > 3) {
          var G__12289__i = 0, G__12289__a = new Array(arguments.length - 3);
          while (G__12289__i < G__12289__a.length) {
            G__12289__a[G__12289__i] = arguments[G__12289__i + 3];
            ++G__12289__i;
          }
          G__12288 = new cljs.core.IndexedSeq(G__12289__a, 0);
        }
        return cljs$core$aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, G__12288);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$aset.cljs$lang$maxFixedArity = 3;
  cljs$core$aset.cljs$lang$applyTo = cljs$core$aset__4.cljs$lang$applyTo;
  cljs$core$aset.cljs$core$IFn$_invoke$arity$3 = cljs$core$aset__3;
  cljs$core$aset.cljs$core$IFn$_invoke$arity$variadic = cljs$core$aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$aset;
}();
cljs.core.alength = function cljs$core$alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var cljs$core$into_array = null;
  var cljs$core$into_array__1 = function(aseq) {
    return cljs$core$into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
  };
  var cljs$core$into_array__2 = function(type, aseq) {
    var G__12295 = function(a, x) {
      a.push(x);
      return a;
    };
    var G__12296 = [];
    var G__12297 = aseq;
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__12295, G__12296, G__12297) : cljs.core.reduce.call(null, G__12295, G__12296, G__12297);
  };
  cljs$core$into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return cljs$core$into_array__1.call(this, type);
      case 2:
        return cljs$core$into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$into_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$into_array__1;
  cljs$core$into_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$into_array__2;
  return cljs$core$into_array;
}();
cljs.core.js_invoke = function() {
  var cljs$core$js_invoke__delegate = function(obj, s, args) {
    return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
  };
  var cljs$core$js_invoke = function(obj, s, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__12298__i = 0, G__12298__a = new Array(arguments.length - 2);
      while (G__12298__i < G__12298__a.length) {
        G__12298__a[G__12298__i] = arguments[G__12298__i + 2];
        ++G__12298__i;
      }
      args = new cljs.core.IndexedSeq(G__12298__a, 0);
    }
    return cljs$core$js_invoke__delegate.call(this, obj, s, args);
  };
  cljs$core$js_invoke.cljs$lang$maxFixedArity = 2;
  cljs$core$js_invoke.cljs$lang$applyTo = function(arglist__12299) {
    var obj = cljs.core.first(arglist__12299);
    arglist__12299 = cljs.core.next(arglist__12299);
    var s = cljs.core.first(arglist__12299);
    var args = cljs.core.rest(arglist__12299);
    return cljs$core$js_invoke__delegate(obj, s, args);
  };
  cljs$core$js_invoke.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js_invoke__delegate;
  return cljs$core$js_invoke;
}();
cljs.core.Fn = function() {
  var obj12301 = {};
  return obj12301;
}();
cljs.core.IFn = function() {
  var obj12303 = {};
  return obj12303;
}();
cljs.core._invoke = function() {
  var cljs$core$_invoke = null;
  var cljs$core$_invoke__1 = function(this$) {
    if (function() {
      var and__4110__auto__ = this$;
      if (and__4110__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__4110__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4758__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4122__auto__ = cljs.core._invoke[function() {
          var G__12349 = x__4758__auto__;
          return goog.typeOf(G__12349);
        }()];
        if (or__4122__auto__) {
          return or__4122__auto__;
        } else {
          var or__4122__auto____$1 = cljs.core._invoke["_"];
          if (or__4122__auto____$1) {
            return or__4122__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var cljs$core$_invoke__2 = function(this$, a) {
    if (function() {
      var and__4110__auto__ = this$;
      if (and__4110__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__4110__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4758__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4122__auto__ = cljs.core._invoke[function() {
          var G__12351 = x__4758__auto__;
          return goog.typeOf(G__12351);
        }()];
        if (or__4122__auto__) {
          return or__4122__auto__;
        } else {
          var or__4122__auto____$1 = cljs.core._invoke["_"];
          if (or__4122__auto____$1) {
            return or__4122__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var cljs$core$_invoke__3 = function(this$, a, b) {
    if (function() {
      var and__4110__auto__ = this$;
      if (and__4110__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__4110__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4758__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4122__auto__ = cljs.core._invoke[function() {
          var G__12353 = x__4758__auto__;
          return goog.typeOf(G__12353);
        }()];
        if (or__4122__auto__) {
          return or__4122__auto__;
        } else {
          var or__4122__auto____$1 = cljs.core._invoke["_"];
          if (or__4122__auto____$1) {
            return or__4122__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var cljs$core$_invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__4110__auto__ = this$;
      if (and__4110__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__4110__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4758__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4122__auto__ = cljs.core._invoke[function() {
          var G__12355 = x__4758__auto__;
          return goog.typeOf(G__12355);
        }()];
        if (or__4122__auto__) {
          return or__4122__auto__;
        } else {
          var or__4122__auto____$1 = cljs.core._invoke["_"];
          if (or__4122__auto____$1) {
            return or__4122__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var cljs$core$_invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__4110__auto__ = this$;
      if (and__4110__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__4110__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4758__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4122__auto__ = cljs.core._invoke[function() {
          var G__12357 = x__4758__auto__;
          return goog.typeOf(G__12357);
        }()];
        if (or__4122__auto__) {
          return or__4122__auto__;
        } else {
          var or__4122__auto____$1 = cljs.core._invoke["_"];
          if (or__4122__auto____$1) {
            return or__4122__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var cljs$core$_invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__4110__auto__ = this$;
      if (and__4110__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__4110__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4758__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4122__auto__ = cljs.core._invoke[function() {
          var G__12359 = x__4758__auto__;
          return goog.typeOf(G__12359);
        }()];
        if (or__4122__auto__) {
          return or__4122__auto__;
        } else {
          var or__4122__auto____$1 = cljs.core._invoke["_"];
          if (or__4122__auto____$1) {
            return or__4122__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var cljs$core$_invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__4110__auto__ = this$;
      if (and__4110__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__4110__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4758__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4122__auto__ = cljs.core._invoke[function() {
          var G__12361 = x__4758__auto__;
          return goog.typeOf(G__12361);
        }()];
        if (or__4122__auto__) {
          return or__4122__auto__;
        } else {
          var or__4122__auto____$1 = cljs.core._invoke["_"];
          if (or__4122__auto____$1) {
            return or__4122__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var cljs$core$_invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__4110__auto__ = this$;
      if (and__4110__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__4110__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4758__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4122__auto__ = cljs.core._invoke[function() {
          var G__12363 = x__4758__auto__;
          return goog.typeOf(G__12363);
        }()];
        if (or__4122__auto__) {
          return or__4122__auto__;
        } else {
          var or__4122__auto____$1 = cljs.core._invoke["_"];
          if (or__4122__auto____$1) {
            return or__4122__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var cljs$core$_invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__4110__auto__ = this$;
      if (and__4110__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__4110__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4758__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4122__auto__ = cljs.core._invoke[function() {
          var G__12365 = x__4758__auto__;
          return goog.typeOf(G__12365);
        }()];
        if (or__4122__auto__) {
          return or__4122__auto__;
        } else {
          var or__4122__auto____$1 = cljs.core._invoke["_"];
          if (or__4122__auto____$1) {
            return or__4122__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var cljs$core$_invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__4110__auto__ = this$;
      if (and__4110__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__4110__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4758__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4122__auto__ = cljs.core._invoke[function() {
          var G__12367 = x__4758__auto__;
          return goog.typeOf(G__12367);
        }()];
        if (or__4122__auto__) {
          return or__4122__auto__;
        } else {
          var or__4122__auto____$1 = cljs.core._invoke["_"];
          if (or__4122__auto____$1) {
            return or__4122__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var cljs$core$_invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__4110__auto__ = this$;
      if (and__4110__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__4110__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4758__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4122__auto__ = cljs.core._invoke[function() {
          var G__12369 = x__4758__auto__;
          return goog.typeOf(G__12369);
        }()];
        if (or__4122__auto__) {
          return or__4122__auto__;
        } else {
          var or__4122__auto____$1 = cljs.core._invoke["_"];
          if (or__4122__auto____$1) {
            return or__4122__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var cljs$core$_invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__4110__auto__ = this$;
      if (and__4110__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__4110__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4758__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4122__auto__ = cljs.core._invoke[function() {
          var G__12371 = x__4758__auto__;
          return goog.typeOf(G__12371);
        }()];
        if (or__4122__auto__) {
          return or__4122__auto__;
        } else {
          var or__4122__auto____$1 = cljs.core._invoke["_"];
          if (or__4122__auto____$1) {
            return or__4122__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var cljs$core$_invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__4110__auto__ = this$;
      if (and__4110__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__4110__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4758__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4122__auto__ = cljs.core._invoke[function() {
          var G__12373 = x__4758__auto__;
          return goog.typeOf(G__12373);
        }()];
        if (or__4122__auto__) {
          return or__4122__auto__;
        } else {
          var or__4122__auto____$1 = cljs.core._invoke["_"];
          if (or__4122__auto____$1) {
            return or__4122__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var cljs$core$_invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__4110__auto__ = this$;
      if (and__4110__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__4110__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4758__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4122__auto__ = cljs.core._invoke[function() {
          var G__12375 = x__4758__auto__;
          return goog.typeOf(G__12375);
        }()];
        if (or__4122__auto__) {
          return or__4122__auto__;
        } else {
          var or__4122__auto____$1 = cljs.core._invoke["_"];
          if (or__4122__auto____$1) {
            return or__4122__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var cljs$core$_invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__4110__auto__ = this$;
      if (and__4110__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__4110__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4758__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4122__auto__ = cljs.core._invoke[function() {
          var G__12377 = x__4758__auto__;
          return goog.typeOf(G__12377);
        }()];
        if (or__4122__auto__) {
          return or__4122__auto__;
        } else {
          var or__4122__auto____$1 = cljs.core._invoke["_"];
          if (or__4122__auto____$1) {
            return or__4122__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var cljs$core$_invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__4110__auto__ = this$;
      if (and__4110__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__4110__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4758__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4122__auto__ = cljs.core._invoke[function() {
          var G__12379 = x__4758__auto__;
          return goog.typeOf(G__12379);
        }()];
        if (or__4122__auto__) {
          return or__4122__auto__;
        } else {
          var or__4122__auto____$1 = cljs.core._invoke["_"];
          if (or__4122__auto____$1) {
            return or__4122__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var cljs$core$_invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__4110__auto__ = this$;
      if (and__4110__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__4110__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4758__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4122__auto__ = cljs.core._invoke[function() {
          var G__12381 = x__4758__auto__;
          return goog.typeOf(G__12381);
        }()];
        if (or__4122__auto__) {
          return or__4122__auto__;
        } else {
          var or__4122__auto____$1 = cljs.core._invoke["_"];
          if (or__4122__auto____$1) {
            return or__4122__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var cljs$core$_invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__4110__auto__ = this$;
      if (and__4110__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__4110__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4758__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4122__auto__ = cljs.core._invoke[function() {
          var G__12383 = x__4758__auto__;
          return goog.typeOf(G__12383);
        }()];
        if (or__4122__auto__) {
          return or__4122__auto__;
        } else {
          var or__4122__auto____$1 = cljs.core._invoke["_"];
          if (or__4122__auto____$1) {
            return or__4122__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var cljs$core$_invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    if (function() {
      var and__4110__auto__ = this$;
      if (and__4110__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__4110__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var x__4758__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4122__auto__ = cljs.core._invoke[function() {
          var G__12385 = x__4758__auto__;
          return goog.typeOf(G__12385);
        }()];
        if (or__4122__auto__) {
          return or__4122__auto__;
        } else {
          var or__4122__auto____$1 = cljs.core._invoke["_"];
          if (or__4122__auto____$1) {
            return or__4122__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    }
  };
  var cljs$core$_invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    if (function() {
      var and__4110__auto__ = this$;
      if (and__4110__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__4110__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var x__4758__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4122__auto__ = cljs.core._invoke[function() {
          var G__12387 = x__4758__auto__;
          return goog.typeOf(G__12387);
        }()];
        if (or__4122__auto__) {
          return or__4122__auto__;
        } else {
          var or__4122__auto____$1 = cljs.core._invoke["_"];
          if (or__4122__auto____$1) {
            return or__4122__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    }
  };
  var cljs$core$_invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    if (function() {
      var and__4110__auto__ = this$;
      if (and__4110__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__4110__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var x__4758__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4122__auto__ = cljs.core._invoke[function() {
          var G__12389 = x__4758__auto__;
          return goog.typeOf(G__12389);
        }()];
        if (or__4122__auto__) {
          return or__4122__auto__;
        } else {
          var or__4122__auto____$1 = cljs.core._invoke["_"];
          if (or__4122__auto____$1) {
            return or__4122__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    }
  };
  var cljs$core$_invoke__22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    if (function() {
      var and__4110__auto__ = this$;
      if (and__4110__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$22;
      } else {
        return and__4110__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var x__4758__auto__ = this$ == null ? null : this$;
      return function() {
        var or__4122__auto__ = cljs.core._invoke[function() {
          var G__12391 = x__4758__auto__;
          return goog.typeOf(G__12391);
        }()];
        if (or__4122__auto__) {
          return or__4122__auto__;
        } else {
          var or__4122__auto____$1 = cljs.core._invoke["_"];
          if (or__4122__auto____$1) {
            return or__4122__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
  };
  cljs$core$_invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return cljs$core$_invoke__1.call(this, this$);
      case 2:
        return cljs$core$_invoke__2.call(this, this$, a);
      case 3:
        return cljs$core$_invoke__3.call(this, this$, a, b);
      case 4:
        return cljs$core$_invoke__4.call(this, this$, a, b, c);
      case 5:
        return cljs$core$_invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return cljs$core$_invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return cljs$core$_invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return cljs$core$_invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return cljs$core$_invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return cljs$core$_invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return cljs$core$_invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return cljs$core$_invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return cljs$core$_invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return cljs$core$_invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return cljs$core$_invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return cljs$core$_invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return cljs$core$_invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return cljs$core$_invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return cljs$core$_invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return cljs$core$_invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return cljs$core$_invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return cljs$core$_invoke__22.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$1 = cljs$core$_invoke__1;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$2 = cljs$core$_invoke__2;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$3 = cljs$core$_invoke__3;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$4 = cljs$core$_invoke__4;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$5 = cljs$core$_invoke__5;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$6 = cljs$core$_invoke__6;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$7 = cljs$core$_invoke__7;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$8 = cljs$core$_invoke__8;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$9 = cljs$core$_invoke__9;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$10 = cljs$core$_invoke__10;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$11 = cljs$core$_invoke__11;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$12 = cljs$core$_invoke__12;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$13 = cljs$core$_invoke__13;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$14 = cljs$core$_invoke__14;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$15 = cljs$core$_invoke__15;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$16 = cljs$core$_invoke__16;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$17 = cljs$core$_invoke__17;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$18 = cljs$core$_invoke__18;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$19 = cljs$core$_invoke__19;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$20 = cljs$core$_invoke__20;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$21 = cljs$core$_invoke__21;
  cljs$core$_invoke.cljs$core$IFn$_invoke$arity$22 = cljs$core$_invoke__22;
  return cljs$core$_invoke;
}();
cljs.core.ICloneable = function() {
  var obj12393 = {};
  return obj12393;
}();
cljs.core._clone = function cljs$core$_clone(value) {
  if (function() {
    var and__4110__auto__ = value;
    if (and__4110__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4758__auto__ = value == null ? null : value;
    return function() {
      var or__4122__auto__ = cljs.core._clone[function() {
        var G__12397 = x__4758__auto__;
        return goog.typeOf(G__12397);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._clone["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj12399 = {};
  return obj12399;
}();
cljs.core._count = function cljs$core$_count(coll) {
  if (function() {
    var and__4110__auto__ = coll;
    if (and__4110__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4758__auto__ = coll == null ? null : coll;
    return function() {
      var or__4122__auto__ = cljs.core._count[function() {
        var G__12403 = x__4758__auto__;
        return goog.typeOf(G__12403);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._count["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj12405 = {};
  return obj12405;
}();
cljs.core._empty = function cljs$core$_empty(coll) {
  if (function() {
    var and__4110__auto__ = coll;
    if (and__4110__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4758__auto__ = coll == null ? null : coll;
    return function() {
      var or__4122__auto__ = cljs.core._empty[function() {
        var G__12409 = x__4758__auto__;
        return goog.typeOf(G__12409);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._empty["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj12411 = {};
  return obj12411;
}();
cljs.core._conj = function cljs$core$_conj(coll, o) {
  if (function() {
    var and__4110__auto__ = coll;
    if (and__4110__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4758__auto__ = coll == null ? null : coll;
    return function() {
      var or__4122__auto__ = cljs.core._conj[function() {
        var G__12415 = x__4758__auto__;
        return goog.typeOf(G__12415);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._conj["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj12417 = {};
  return obj12417;
}();
cljs.core._nth = function() {
  var cljs$core$_nth = null;
  var cljs$core$_nth__2 = function(coll, n) {
    if (function() {
      var and__4110__auto__ = coll;
      if (and__4110__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__4110__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4758__auto__ = coll == null ? null : coll;
      return function() {
        var or__4122__auto__ = cljs.core._nth[function() {
          var G__12423 = x__4758__auto__;
          return goog.typeOf(G__12423);
        }()];
        if (or__4122__auto__) {
          return or__4122__auto__;
        } else {
          var or__4122__auto____$1 = cljs.core._nth["_"];
          if (or__4122__auto____$1) {
            return or__4122__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var cljs$core$_nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__4110__auto__ = coll;
      if (and__4110__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__4110__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4758__auto__ = coll == null ? null : coll;
      return function() {
        var or__4122__auto__ = cljs.core._nth[function() {
          var G__12425 = x__4758__auto__;
          return goog.typeOf(G__12425);
        }()];
        if (or__4122__auto__) {
          return or__4122__auto__;
        } else {
          var or__4122__auto____$1 = cljs.core._nth["_"];
          if (or__4122__auto____$1) {
            return or__4122__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  cljs$core$_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return cljs$core$_nth__2.call(this, coll, n);
      case 3:
        return cljs$core$_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$_nth__2;
  cljs$core$_nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$_nth__3;
  return cljs$core$_nth;
}();
cljs.core.ASeq = function() {
  var obj12427 = {};
  return obj12427;
}();
cljs.core.ISeq = function() {
  var obj12429 = {};
  return obj12429;
}();
cljs.core._first = function cljs$core$_first(coll) {
  if (function() {
    var and__4110__auto__ = coll;
    if (and__4110__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4758__auto__ = coll == null ? null : coll;
    return function() {
      var or__4122__auto__ = cljs.core._first[function() {
        var G__12433 = x__4758__auto__;
        return goog.typeOf(G__12433);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._first["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function cljs$core$_rest(coll) {
  if (function() {
    var and__4110__auto__ = coll;
    if (and__4110__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4758__auto__ = coll == null ? null : coll;
    return function() {
      var or__4122__auto__ = cljs.core._rest[function() {
        var G__12437 = x__4758__auto__;
        return goog.typeOf(G__12437);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._rest["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj12439 = {};
  return obj12439;
}();
cljs.core._next = function cljs$core$_next(coll) {
  if (function() {
    var and__4110__auto__ = coll;
    if (and__4110__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4758__auto__ = coll == null ? null : coll;
    return function() {
      var or__4122__auto__ = cljs.core._next[function() {
        var G__12443 = x__4758__auto__;
        return goog.typeOf(G__12443);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._next["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj12445 = {};
  return obj12445;
}();
cljs.core._lookup = function() {
  var cljs$core$_lookup = null;
  var cljs$core$_lookup__2 = function(o, k) {
    if (function() {
      var and__4110__auto__ = o;
      if (and__4110__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__4110__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4758__auto__ = o == null ? null : o;
      return function() {
        var or__4122__auto__ = cljs.core._lookup[function() {
          var G__12451 = x__4758__auto__;
          return goog.typeOf(G__12451);
        }()];
        if (or__4122__auto__) {
          return or__4122__auto__;
        } else {
          var or__4122__auto____$1 = cljs.core._lookup["_"];
          if (or__4122__auto____$1) {
            return or__4122__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var cljs$core$_lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__4110__auto__ = o;
      if (and__4110__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__4110__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4758__auto__ = o == null ? null : o;
      return function() {
        var or__4122__auto__ = cljs.core._lookup[function() {
          var G__12453 = x__4758__auto__;
          return goog.typeOf(G__12453);
        }()];
        if (or__4122__auto__) {
          return or__4122__auto__;
        } else {
          var or__4122__auto____$1 = cljs.core._lookup["_"];
          if (or__4122__auto____$1) {
            return or__4122__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  cljs$core$_lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return cljs$core$_lookup__2.call(this, o, k);
      case 3:
        return cljs$core$_lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_lookup.cljs$core$IFn$_invoke$arity$2 = cljs$core$_lookup__2;
  cljs$core$_lookup.cljs$core$IFn$_invoke$arity$3 = cljs$core$_lookup__3;
  return cljs$core$_lookup;
}();
cljs.core.IAssociative = function() {
  var obj12455 = {};
  return obj12455;
}();
cljs.core._contains_key_QMARK_ = function cljs$core$_contains_key_QMARK_(coll, k) {
  if (function() {
    var and__4110__auto__ = coll;
    if (and__4110__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4758__auto__ = coll == null ? null : coll;
    return function() {
      var or__4122__auto__ = cljs.core._contains_key_QMARK_[function() {
        var G__12459 = x__4758__auto__;
        return goog.typeOf(G__12459);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function cljs$core$_assoc(coll, k, v) {
  if (function() {
    var and__4110__auto__ = coll;
    if (and__4110__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4758__auto__ = coll == null ? null : coll;
    return function() {
      var or__4122__auto__ = cljs.core._assoc[function() {
        var G__12463 = x__4758__auto__;
        return goog.typeOf(G__12463);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._assoc["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj12465 = {};
  return obj12465;
}();
cljs.core._dissoc = function cljs$core$_dissoc(coll, k) {
  if (function() {
    var and__4110__auto__ = coll;
    if (and__4110__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4758__auto__ = coll == null ? null : coll;
    return function() {
      var or__4122__auto__ = cljs.core._dissoc[function() {
        var G__12469 = x__4758__auto__;
        return goog.typeOf(G__12469);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._dissoc["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj12471 = {};
  return obj12471;
}();
cljs.core._key = function cljs$core$_key(coll) {
  if (function() {
    var and__4110__auto__ = coll;
    if (and__4110__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4758__auto__ = coll == null ? null : coll;
    return function() {
      var or__4122__auto__ = cljs.core._key[function() {
        var G__12475 = x__4758__auto__;
        return goog.typeOf(G__12475);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._key["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function cljs$core$_val(coll) {
  if (function() {
    var and__4110__auto__ = coll;
    if (and__4110__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4758__auto__ = coll == null ? null : coll;
    return function() {
      var or__4122__auto__ = cljs.core._val[function() {
        var G__12479 = x__4758__auto__;
        return goog.typeOf(G__12479);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._val["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj12481 = {};
  return obj12481;
}();
cljs.core._disjoin = function cljs$core$_disjoin(coll, v) {
  if (function() {
    var and__4110__auto__ = coll;
    if (and__4110__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4758__auto__ = coll == null ? null : coll;
    return function() {
      var or__4122__auto__ = cljs.core._disjoin[function() {
        var G__12485 = x__4758__auto__;
        return goog.typeOf(G__12485);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._disjoin["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj12487 = {};
  return obj12487;
}();
cljs.core._peek = function cljs$core$_peek(coll) {
  if (function() {
    var and__4110__auto__ = coll;
    if (and__4110__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4758__auto__ = coll == null ? null : coll;
    return function() {
      var or__4122__auto__ = cljs.core._peek[function() {
        var G__12491 = x__4758__auto__;
        return goog.typeOf(G__12491);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._peek["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function cljs$core$_pop(coll) {
  if (function() {
    var and__4110__auto__ = coll;
    if (and__4110__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4758__auto__ = coll == null ? null : coll;
    return function() {
      var or__4122__auto__ = cljs.core._pop[function() {
        var G__12495 = x__4758__auto__;
        return goog.typeOf(G__12495);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._pop["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj12497 = {};
  return obj12497;
}();
cljs.core._assoc_n = function cljs$core$_assoc_n(coll, n, val) {
  if (function() {
    var and__4110__auto__ = coll;
    if (and__4110__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4758__auto__ = coll == null ? null : coll;
    return function() {
      var or__4122__auto__ = cljs.core._assoc_n[function() {
        var G__12501 = x__4758__auto__;
        return goog.typeOf(G__12501);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._assoc_n["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj12503 = {};
  return obj12503;
}();
cljs.core._deref = function cljs$core$_deref(o) {
  if (function() {
    var and__4110__auto__ = o;
    if (and__4110__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4758__auto__ = o == null ? null : o;
    return function() {
      var or__4122__auto__ = cljs.core._deref[function() {
        var G__12507 = x__4758__auto__;
        return goog.typeOf(G__12507);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._deref["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj12509 = {};
  return obj12509;
}();
cljs.core._deref_with_timeout = function cljs$core$_deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__4110__auto__ = o;
    if (and__4110__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4758__auto__ = o == null ? null : o;
    return function() {
      var or__4122__auto__ = cljs.core._deref_with_timeout[function() {
        var G__12513 = x__4758__auto__;
        return goog.typeOf(G__12513);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj12515 = {};
  return obj12515;
}();
cljs.core._meta = function cljs$core$_meta(o) {
  if (function() {
    var and__4110__auto__ = o;
    if (and__4110__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4758__auto__ = o == null ? null : o;
    return function() {
      var or__4122__auto__ = cljs.core._meta[function() {
        var G__12519 = x__4758__auto__;
        return goog.typeOf(G__12519);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._meta["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj12521 = {};
  return obj12521;
}();
cljs.core._with_meta = function cljs$core$_with_meta(o, meta) {
  if (function() {
    var and__4110__auto__ = o;
    if (and__4110__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4758__auto__ = o == null ? null : o;
    return function() {
      var or__4122__auto__ = cljs.core._with_meta[function() {
        var G__12525 = x__4758__auto__;
        return goog.typeOf(G__12525);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._with_meta["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj12527 = {};
  return obj12527;
}();
cljs.core._reduce = function() {
  var cljs$core$_reduce = null;
  var cljs$core$_reduce__2 = function(coll, f) {
    if (function() {
      var and__4110__auto__ = coll;
      if (and__4110__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__4110__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4758__auto__ = coll == null ? null : coll;
      return function() {
        var or__4122__auto__ = cljs.core._reduce[function() {
          var G__12533 = x__4758__auto__;
          return goog.typeOf(G__12533);
        }()];
        if (or__4122__auto__) {
          return or__4122__auto__;
        } else {
          var or__4122__auto____$1 = cljs.core._reduce["_"];
          if (or__4122__auto____$1) {
            return or__4122__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var cljs$core$_reduce__3 = function(coll, f, start) {
    if (function() {
      var and__4110__auto__ = coll;
      if (and__4110__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__4110__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4758__auto__ = coll == null ? null : coll;
      return function() {
        var or__4122__auto__ = cljs.core._reduce[function() {
          var G__12535 = x__4758__auto__;
          return goog.typeOf(G__12535);
        }()];
        if (or__4122__auto__) {
          return or__4122__auto__;
        } else {
          var or__4122__auto____$1 = cljs.core._reduce["_"];
          if (or__4122__auto____$1) {
            return or__4122__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  cljs$core$_reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return cljs$core$_reduce__2.call(this, coll, f);
      case 3:
        return cljs$core$_reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$_reduce__2;
  cljs$core$_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$_reduce__3;
  return cljs$core$_reduce;
}();
cljs.core.IKVReduce = function() {
  var obj12537 = {};
  return obj12537;
}();
cljs.core._kv_reduce = function cljs$core$_kv_reduce(coll, f, init) {
  if (function() {
    var and__4110__auto__ = coll;
    if (and__4110__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4758__auto__ = coll == null ? null : coll;
    return function() {
      var or__4122__auto__ = cljs.core._kv_reduce[function() {
        var G__12541 = x__4758__auto__;
        return goog.typeOf(G__12541);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj12543 = {};
  return obj12543;
}();
cljs.core._equiv = function cljs$core$_equiv(o, other) {
  if (function() {
    var and__4110__auto__ = o;
    if (and__4110__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4758__auto__ = o == null ? null : o;
    return function() {
      var or__4122__auto__ = cljs.core._equiv[function() {
        var G__12547 = x__4758__auto__;
        return goog.typeOf(G__12547);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._equiv["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj12549 = {};
  return obj12549;
}();
cljs.core._hash = function cljs$core$_hash(o) {
  if (function() {
    var and__4110__auto__ = o;
    if (and__4110__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4758__auto__ = o == null ? null : o;
    return function() {
      var or__4122__auto__ = cljs.core._hash[function() {
        var G__12553 = x__4758__auto__;
        return goog.typeOf(G__12553);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._hash["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj12555 = {};
  return obj12555;
}();
cljs.core._seq = function cljs$core$_seq(o) {
  if (function() {
    var and__4110__auto__ = o;
    if (and__4110__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4758__auto__ = o == null ? null : o;
    return function() {
      var or__4122__auto__ = cljs.core._seq[function() {
        var G__12559 = x__4758__auto__;
        return goog.typeOf(G__12559);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._seq["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj12561 = {};
  return obj12561;
}();
cljs.core.IList = function() {
  var obj12563 = {};
  return obj12563;
}();
cljs.core.IRecord = function() {
  var obj12565 = {};
  return obj12565;
}();
cljs.core.IReversible = function() {
  var obj12567 = {};
  return obj12567;
}();
cljs.core._rseq = function cljs$core$_rseq(coll) {
  if (function() {
    var and__4110__auto__ = coll;
    if (and__4110__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4758__auto__ = coll == null ? null : coll;
    return function() {
      var or__4122__auto__ = cljs.core._rseq[function() {
        var G__12571 = x__4758__auto__;
        return goog.typeOf(G__12571);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._rseq["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj12573 = {};
  return obj12573;
}();
cljs.core._sorted_seq = function cljs$core$_sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__4110__auto__ = coll;
    if (and__4110__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4758__auto__ = coll == null ? null : coll;
    return function() {
      var or__4122__auto__ = cljs.core._sorted_seq[function() {
        var G__12577 = x__4758__auto__;
        return goog.typeOf(G__12577);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function cljs$core$_sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__4110__auto__ = coll;
    if (and__4110__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4758__auto__ = coll == null ? null : coll;
    return function() {
      var or__4122__auto__ = cljs.core._sorted_seq_from[function() {
        var G__12581 = x__4758__auto__;
        return goog.typeOf(G__12581);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function cljs$core$_entry_key(coll, entry) {
  if (function() {
    var and__4110__auto__ = coll;
    if (and__4110__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4758__auto__ = coll == null ? null : coll;
    return function() {
      var or__4122__auto__ = cljs.core._entry_key[function() {
        var G__12585 = x__4758__auto__;
        return goog.typeOf(G__12585);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._entry_key["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function cljs$core$_comparator(coll) {
  if (function() {
    var and__4110__auto__ = coll;
    if (and__4110__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4758__auto__ = coll == null ? null : coll;
    return function() {
      var or__4122__auto__ = cljs.core._comparator[function() {
        var G__12589 = x__4758__auto__;
        return goog.typeOf(G__12589);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._comparator["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj12591 = {};
  return obj12591;
}();
cljs.core._write = function cljs$core$_write(writer, s) {
  if (function() {
    var and__4110__auto__ = writer;
    if (and__4110__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4758__auto__ = writer == null ? null : writer;
    return function() {
      var or__4122__auto__ = cljs.core._write[function() {
        var G__12595 = x__4758__auto__;
        return goog.typeOf(G__12595);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._write["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function cljs$core$_flush(writer) {
  if (function() {
    var and__4110__auto__ = writer;
    if (and__4110__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4758__auto__ = writer == null ? null : writer;
    return function() {
      var or__4122__auto__ = cljs.core._flush[function() {
        var G__12599 = x__4758__auto__;
        return goog.typeOf(G__12599);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._flush["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj12601 = {};
  return obj12601;
}();
cljs.core._pr_writer = function cljs$core$_pr_writer(o, writer, opts) {
  if (function() {
    var and__4110__auto__ = o;
    if (and__4110__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4758__auto__ = o == null ? null : o;
    return function() {
      var or__4122__auto__ = cljs.core._pr_writer[function() {
        var G__12605 = x__4758__auto__;
        return goog.typeOf(G__12605);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._pr_writer["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj12607 = {};
  return obj12607;
}();
cljs.core._realized_QMARK_ = function cljs$core$_realized_QMARK_(d) {
  if (function() {
    var and__4110__auto__ = d;
    if (and__4110__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4758__auto__ = d == null ? null : d;
    return function() {
      var or__4122__auto__ = cljs.core._realized_QMARK_[function() {
        var G__12611 = x__4758__auto__;
        return goog.typeOf(G__12611);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj12613 = {};
  return obj12613;
}();
cljs.core._notify_watches = function cljs$core$_notify_watches(this$, oldval, newval) {
  if (function() {
    var and__4110__auto__ = this$;
    if (and__4110__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4758__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4122__auto__ = cljs.core._notify_watches[function() {
        var G__12617 = x__4758__auto__;
        return goog.typeOf(G__12617);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._notify_watches["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function cljs$core$_add_watch(this$, key, f) {
  if (function() {
    var and__4110__auto__ = this$;
    if (and__4110__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4758__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4122__auto__ = cljs.core._add_watch[function() {
        var G__12621 = x__4758__auto__;
        return goog.typeOf(G__12621);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._add_watch["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function cljs$core$_remove_watch(this$, key) {
  if (function() {
    var and__4110__auto__ = this$;
    if (and__4110__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4758__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4122__auto__ = cljs.core._remove_watch[function() {
        var G__12625 = x__4758__auto__;
        return goog.typeOf(G__12625);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._remove_watch["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj12627 = {};
  return obj12627;
}();
cljs.core._as_transient = function cljs$core$_as_transient(coll) {
  if (function() {
    var and__4110__auto__ = coll;
    if (and__4110__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4758__auto__ = coll == null ? null : coll;
    return function() {
      var or__4122__auto__ = cljs.core._as_transient[function() {
        var G__12631 = x__4758__auto__;
        return goog.typeOf(G__12631);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._as_transient["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj12633 = {};
  return obj12633;
}();
cljs.core._conj_BANG_ = function cljs$core$_conj_BANG_(tcoll, val) {
  if (function() {
    var and__4110__auto__ = tcoll;
    if (and__4110__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4758__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4122__auto__ = cljs.core._conj_BANG_[function() {
        var G__12637 = x__4758__auto__;
        return goog.typeOf(G__12637);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function cljs$core$_persistent_BANG_(tcoll) {
  if (function() {
    var and__4110__auto__ = tcoll;
    if (and__4110__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4758__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4122__auto__ = cljs.core._persistent_BANG_[function() {
        var G__12641 = x__4758__auto__;
        return goog.typeOf(G__12641);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj12643 = {};
  return obj12643;
}();
cljs.core._assoc_BANG_ = function cljs$core$_assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__4110__auto__ = tcoll;
    if (and__4110__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4758__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4122__auto__ = cljs.core._assoc_BANG_[function() {
        var G__12647 = x__4758__auto__;
        return goog.typeOf(G__12647);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj12649 = {};
  return obj12649;
}();
cljs.core._dissoc_BANG_ = function cljs$core$_dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__4110__auto__ = tcoll;
    if (and__4110__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4758__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4122__auto__ = cljs.core._dissoc_BANG_[function() {
        var G__12653 = x__4758__auto__;
        return goog.typeOf(G__12653);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj12655 = {};
  return obj12655;
}();
cljs.core._assoc_n_BANG_ = function cljs$core$_assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__4110__auto__ = tcoll;
    if (and__4110__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4758__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4122__auto__ = cljs.core._assoc_n_BANG_[function() {
        var G__12659 = x__4758__auto__;
        return goog.typeOf(G__12659);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function cljs$core$_pop_BANG_(tcoll) {
  if (function() {
    var and__4110__auto__ = tcoll;
    if (and__4110__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4758__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4122__auto__ = cljs.core._pop_BANG_[function() {
        var G__12663 = x__4758__auto__;
        return goog.typeOf(G__12663);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj12665 = {};
  return obj12665;
}();
cljs.core._disjoin_BANG_ = function cljs$core$_disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__4110__auto__ = tcoll;
    if (and__4110__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4758__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4122__auto__ = cljs.core._disjoin_BANG_[function() {
        var G__12669 = x__4758__auto__;
        return goog.typeOf(G__12669);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj12671 = {};
  return obj12671;
}();
cljs.core._compare = function cljs$core$_compare(x, y) {
  if (function() {
    var and__4110__auto__ = x;
    if (and__4110__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4758__auto__ = x == null ? null : x;
    return function() {
      var or__4122__auto__ = cljs.core._compare[function() {
        var G__12675 = x__4758__auto__;
        return goog.typeOf(G__12675);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._compare["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj12677 = {};
  return obj12677;
}();
cljs.core._drop_first = function cljs$core$_drop_first(coll) {
  if (function() {
    var and__4110__auto__ = coll;
    if (and__4110__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4758__auto__ = coll == null ? null : coll;
    return function() {
      var or__4122__auto__ = cljs.core._drop_first[function() {
        var G__12681 = x__4758__auto__;
        return goog.typeOf(G__12681);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._drop_first["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj12683 = {};
  return obj12683;
}();
cljs.core._chunked_first = function cljs$core$_chunked_first(coll) {
  if (function() {
    var and__4110__auto__ = coll;
    if (and__4110__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4758__auto__ = coll == null ? null : coll;
    return function() {
      var or__4122__auto__ = cljs.core._chunked_first[function() {
        var G__12687 = x__4758__auto__;
        return goog.typeOf(G__12687);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._chunked_first["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function cljs$core$_chunked_rest(coll) {
  if (function() {
    var and__4110__auto__ = coll;
    if (and__4110__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4758__auto__ = coll == null ? null : coll;
    return function() {
      var or__4122__auto__ = cljs.core._chunked_rest[function() {
        var G__12691 = x__4758__auto__;
        return goog.typeOf(G__12691);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj12693 = {};
  return obj12693;
}();
cljs.core._chunked_next = function cljs$core$_chunked_next(coll) {
  if (function() {
    var and__4110__auto__ = coll;
    if (and__4110__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4758__auto__ = coll == null ? null : coll;
    return function() {
      var or__4122__auto__ = cljs.core._chunked_next[function() {
        var G__12697 = x__4758__auto__;
        return goog.typeOf(G__12697);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._chunked_next["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj12699 = {};
  return obj12699;
}();
cljs.core._name = function cljs$core$_name(x) {
  if (function() {
    var and__4110__auto__ = x;
    if (and__4110__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4758__auto__ = x == null ? null : x;
    return function() {
      var or__4122__auto__ = cljs.core._name[function() {
        var G__12703 = x__4758__auto__;
        return goog.typeOf(G__12703);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._name["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function cljs$core$_namespace(x) {
  if (function() {
    var and__4110__auto__ = x;
    if (and__4110__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4758__auto__ = x == null ? null : x;
    return function() {
      var or__4122__auto__ = cljs.core._namespace[function() {
        var G__12707 = x__4758__auto__;
        return goog.typeOf(G__12707);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._namespace["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.IAtom = function() {
  var obj12709 = {};
  return obj12709;
}();
cljs.core.IReset = function() {
  var obj12711 = {};
  return obj12711;
}();
cljs.core._reset_BANG_ = function cljs$core$_reset_BANG_(o, new_value) {
  if (function() {
    var and__4110__auto__ = o;
    if (and__4110__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4758__auto__ = o == null ? null : o;
    return function() {
      var or__4122__auto__ = cljs.core._reset_BANG_[function() {
        var G__12715 = x__4758__auto__;
        return goog.typeOf(G__12715);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj12717 = {};
  return obj12717;
}();
cljs.core._swap_BANG_ = function() {
  var cljs$core$_swap_BANG_ = null;
  var cljs$core$_swap_BANG___2 = function(o, f) {
    if (function() {
      var and__4110__auto__ = o;
      if (and__4110__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__4110__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__4758__auto__ = o == null ? null : o;
      return function() {
        var or__4122__auto__ = cljs.core._swap_BANG_[function() {
          var G__12727 = x__4758__auto__;
          return goog.typeOf(G__12727);
        }()];
        if (or__4122__auto__) {
          return or__4122__auto__;
        } else {
          var or__4122__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__4122__auto____$1) {
            return or__4122__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var cljs$core$_swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__4110__auto__ = o;
      if (and__4110__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__4110__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__4758__auto__ = o == null ? null : o;
      return function() {
        var or__4122__auto__ = cljs.core._swap_BANG_[function() {
          var G__12729 = x__4758__auto__;
          return goog.typeOf(G__12729);
        }()];
        if (or__4122__auto__) {
          return or__4122__auto__;
        } else {
          var or__4122__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__4122__auto____$1) {
            return or__4122__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var cljs$core$_swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__4110__auto__ = o;
      if (and__4110__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__4110__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__4758__auto__ = o == null ? null : o;
      return function() {
        var or__4122__auto__ = cljs.core._swap_BANG_[function() {
          var G__12731 = x__4758__auto__;
          return goog.typeOf(G__12731);
        }()];
        if (or__4122__auto__) {
          return or__4122__auto__;
        } else {
          var or__4122__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__4122__auto____$1) {
            return or__4122__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var cljs$core$_swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__4110__auto__ = o;
      if (and__4110__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__4110__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__4758__auto__ = o == null ? null : o;
      return function() {
        var or__4122__auto__ = cljs.core._swap_BANG_[function() {
          var G__12733 = x__4758__auto__;
          return goog.typeOf(G__12733);
        }()];
        if (or__4122__auto__) {
          return or__4122__auto__;
        } else {
          var or__4122__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__4122__auto____$1) {
            return or__4122__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  cljs$core$_swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return cljs$core$_swap_BANG___2.call(this, o, f);
      case 3:
        return cljs$core$_swap_BANG___3.call(this, o, f, a);
      case 4:
        return cljs$core$_swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return cljs$core$_swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_swap_BANG___2;
  cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$_swap_BANG___3;
  cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = cljs$core$_swap_BANG___4;
  cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = cljs$core$_swap_BANG___5;
  return cljs$core$_swap_BANG_;
}();
cljs.core.IVolatile = function() {
  var obj12735 = {};
  return obj12735;
}();
cljs.core._vreset_BANG_ = function cljs$core$_vreset_BANG_(o, new_value) {
  if (function() {
    var and__4110__auto__ = o;
    if (and__4110__auto__) {
      return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__4758__auto__ = o == null ? null : o;
    return function() {
      var or__4122__auto__ = cljs.core._vreset_BANG_[function() {
        var G__12739 = x__4758__auto__;
        return goog.typeOf(G__12739);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._vreset_BANG_["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.IIterable = function() {
  var obj12741 = {};
  return obj12741;
}();
cljs.core._iterator = function cljs$core$_iterator(coll) {
  if (function() {
    var and__4110__auto__ = coll;
    if (and__4110__auto__) {
      return coll.cljs$core$IIterable$_iterator$arity$1;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__4758__auto__ = coll == null ? null : coll;
    return function() {
      var or__4122__auto__ = cljs.core._iterator[function() {
        var G__12745 = x__4758__auto__;
        return goog.typeOf(G__12745);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._iterator["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IIterable.-iterator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function cljs$core$__GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function cljs$core$pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return[cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function cljs$core$int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(function() {
  var G__12748 = 4294967295;
  var G__12749 = 5;
  return Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__12748, G__12749) : Math.imul.call(null, G__12748, G__12749);
}() === 0)) {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var G__12752 = a;
    var G__12753 = b;
    return Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__12752, G__12753) : Math.imul.call(null, G__12752, G__12753);
  };
} else {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353 | 0;
cljs.core.m3_C2 = 461845907 | 0;
cljs.core.m3_mix_K1 = function cljs$core$m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1 | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function cljs$core$m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left((h1 | 0) ^ (k1 | 0), 13), 5) + (3864292196 | 0) | 0;
};
cljs.core.m3_fmix = function cljs$core$m3_fmix(h1, len) {
  var h1__$1 = h1 | 0;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507 | 0);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909 | 0);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function cljs$core$m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function cljs$core$m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__12754 = i + 2;
        var G__12755 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__12754;
        h1 = G__12755;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = function() {
  var obj12757 = {};
  return obj12757;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function cljs$core$hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__12758 = i + 1;
          var G__12759 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__12758;
          hash = G__12759;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function cljs$core$add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function cljs$core$hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj12763 = {};
      return obj12763;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache(k);
  }
};
cljs.core.hash = function cljs$core$hash(o) {
  if (function() {
    var G__12766 = o;
    if (G__12766) {
      var bit__4789__auto__ = G__12766.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4789__auto__ || G__12766.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      return function() {
        var G__12767 = o;
        return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__12767) : Math.floor.call(null, G__12767);
      }() % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function cljs$core$hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function cljs$core$instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function cljs$core$symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function cljs$core$hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function cljs$core$compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4110__auto__ = cljs.core.not(a.ns);
      if (and__4110__auto__) {
        return b.ns;
      } else {
        return and__4110__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__12774 = a.ns;
            var G__12775 = b.ns;
            return goog.array.defaultCompare(G__12774, G__12775);
          }();
          if (0 === nsc) {
            var G__12776 = a.name;
            var G__12777 = b.name;
            return goog.array.defaultCompare(G__12776, G__12777);
          } else {
            return nsc;
          }
        }
      } else {
        var G__12778 = a.name;
        var G__12779 = b.name;
        return goog.array.defaultCompare(G__12778, G__12779);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4538__auto__ = self__._hash;
  if (!(h__4538__auto__ == null)) {
    return h__4538__auto__;
  } else {
    var h__4538__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__4538__auto____$1;
    return h__4538__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__12781 = null;
  var G__12781__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
  };
  var G__12781__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
  };
  G__12781 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12781__2.call(this, self__, coll);
      case 3:
        return G__12781__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12781.cljs$core$IFn$_invoke$arity$2 = G__12781__2;
  G__12781.cljs$core$IFn$_invoke$arity$3 = G__12781__3;
  return G__12781;
}();
cljs.core.Symbol.prototype.apply = function(self__, args12780) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args12780)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function cljs$core$__GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var cljs$core$symbol = null;
  var cljs$core$symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return cljs$core$symbol.cljs$core$IFn$_invoke$arity$2(null, name);
    }
  };
  var cljs$core$symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  cljs$core$symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return cljs$core$symbol__1.call(this, ns);
      case 2:
        return cljs$core$symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$symbol.cljs$core$IFn$_invoke$arity$1 = cljs$core$symbol__1;
  cljs$core$symbol.cljs$core$IFn$_invoke$arity$2 = cljs$core$symbol__2;
  return cljs$core$symbol;
}();
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 163841;
};
cljs.core.Var.prototype.call = function() {
  var G__12829 = null;
  var G__12829__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null);
  };
  var G__12829__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a);
  };
  var G__12829__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b);
  };
  var G__12829__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c);
  };
  var G__12829__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d);
  };
  var G__12829__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e);
  };
  var G__12829__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f);
  };
  var G__12829__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g);
  };
  var G__12829__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h);
  };
  var G__12829__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__12829__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__12829__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__12829__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__12829__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__12829__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__12829__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__12829__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__12829__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__12829__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__12829__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__12829__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__12829__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12785 = function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }();
    var G__12786 = a;
    var G__12787 = b;
    var G__12788 = c;
    var G__12789 = d;
    var G__12790 = e;
    var G__12791 = f;
    var G__12792 = g;
    var G__12793 = h;
    var G__12794 = i;
    var G__12795 = j;
    var G__12796 = k;
    var G__12797 = l;
    var G__12798 = m;
    var G__12799 = n;
    var G__12800 = o;
    var G__12801 = p;
    var G__12802 = q;
    var G__12803 = r;
    var G__12804 = s;
    var G__12805 = t;
    var G__12806 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__12785, G__12786, G__12787, G__12788, G__12789, G__12790, G__12791, G__12792, G__12793, G__12794, G__12795, G__12796, G__12797, G__12798, G__12799, G__12800, G__12801, G__12802, G__12803, G__12804, G__12805, G__12806) : cljs.core.apply.call(null, G__12785, G__12786, G__12787, G__12788, G__12789, G__12790, G__12791, G__12792, G__12793, G__12794, G__12795, G__12796, G__12797, G__12798, G__12799, 
    G__12800, G__12801, G__12802, G__12803, G__12804, G__12805, G__12806);
  };
  G__12829 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__12829__1.call(this, self__);
      case 2:
        return G__12829__2.call(this, self__, a);
      case 3:
        return G__12829__3.call(this, self__, a, b);
      case 4:
        return G__12829__4.call(this, self__, a, b, c);
      case 5:
        return G__12829__5.call(this, self__, a, b, c, d);
      case 6:
        return G__12829__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__12829__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__12829__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__12829__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__12829__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__12829__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__12829__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__12829__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__12829__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__12829__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__12829__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__12829__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__12829__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__12829__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__12829__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__12829__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__12829__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12829.cljs$core$IFn$_invoke$arity$1 = G__12829__1;
  G__12829.cljs$core$IFn$_invoke$arity$2 = G__12829__2;
  G__12829.cljs$core$IFn$_invoke$arity$3 = G__12829__3;
  G__12829.cljs$core$IFn$_invoke$arity$4 = G__12829__4;
  G__12829.cljs$core$IFn$_invoke$arity$5 = G__12829__5;
  G__12829.cljs$core$IFn$_invoke$arity$6 = G__12829__6;
  G__12829.cljs$core$IFn$_invoke$arity$7 = G__12829__7;
  G__12829.cljs$core$IFn$_invoke$arity$8 = G__12829__8;
  G__12829.cljs$core$IFn$_invoke$arity$9 = G__12829__9;
  G__12829.cljs$core$IFn$_invoke$arity$10 = G__12829__10;
  G__12829.cljs$core$IFn$_invoke$arity$11 = G__12829__11;
  G__12829.cljs$core$IFn$_invoke$arity$12 = G__12829__12;
  G__12829.cljs$core$IFn$_invoke$arity$13 = G__12829__13;
  G__12829.cljs$core$IFn$_invoke$arity$14 = G__12829__14;
  G__12829.cljs$core$IFn$_invoke$arity$15 = G__12829__15;
  G__12829.cljs$core$IFn$_invoke$arity$16 = G__12829__16;
  G__12829.cljs$core$IFn$_invoke$arity$17 = G__12829__17;
  G__12829.cljs$core$IFn$_invoke$arity$18 = G__12829__18;
  G__12829.cljs$core$IFn$_invoke$arity$19 = G__12829__19;
  G__12829.cljs$core$IFn$_invoke$arity$20 = G__12829__20;
  G__12829.cljs$core$IFn$_invoke$arity$21 = G__12829__21;
  G__12829.cljs$core$IFn$_invoke$arity$22 = G__12829__22;
  return G__12829;
}();
cljs.core.Var.prototype.apply = function(self__, args12784) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args12784)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__12807 = function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }();
  var G__12808 = a;
  var G__12809 = b;
  var G__12810 = c;
  var G__12811 = d;
  var G__12812 = e;
  var G__12813 = f;
  var G__12814 = g;
  var G__12815 = h;
  var G__12816 = i;
  var G__12817 = j;
  var G__12818 = k;
  var G__12819 = l;
  var G__12820 = m;
  var G__12821 = n;
  var G__12822 = o;
  var G__12823 = p;
  var G__12824 = q;
  var G__12825 = r;
  var G__12826 = s;
  var G__12827 = t;
  var G__12828 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__12807, G__12808, G__12809, G__12810, G__12811, G__12812, G__12813, G__12814, G__12815, G__12816, G__12817, G__12818, G__12819, G__12820, G__12821, G__12822, G__12823, G__12824, G__12825, G__12826, G__12827, G__12828) : cljs.core.apply.call(null, G__12807, G__12808, G__12809, G__12810, G__12811, G__12812, G__12813, G__12814, G__12815, G__12816, G__12817, G__12818, G__12819, G__12820, G__12821, 
  G__12822, G__12823, G__12824, G__12825, G__12826, G__12827, G__12828);
};
cljs.core.Var.prototype.cljs$core$Fn$ = true;
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function cljs$core$__GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.iterable_QMARK_ = function cljs$core$iterable_QMARK_(x) {
  var G__12831 = x;
  if (G__12831) {
    var bit__4796__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__4122__auto__ = bit__4796__auto__;
      if (cljs.core.truth_(or__4122__auto__)) {
        return or__4122__auto__;
      } else {
        return G__12831.cljs$core$IIterable$;
      }
    }())) {
      return true;
    } else {
      if (!G__12831.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__12831);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__12831);
  }
};
cljs.core.clone = function cljs$core$clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cljs$core$cloneable_QMARK_(value) {
  var G__12833 = value;
  if (G__12833) {
    var bit__4796__auto__ = G__12833.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4796__auto__ || G__12833.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__12833.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__12833);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__12833);
  }
};
cljs.core.seq = function cljs$core$seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__12835 = coll;
      if (G__12835) {
        var bit__4789__auto__ = G__12835.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4789__auto__ || G__12835.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function cljs$core$first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__12837 = coll;
      if (G__12837) {
        var bit__4789__auto__ = G__12837.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4789__auto__ || G__12837.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function cljs$core$rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__12839 = coll;
      if (G__12839) {
        var bit__4789__auto__ = G__12839.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4789__auto__ || G__12839.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function cljs$core$next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__12841 = coll;
      if (G__12841) {
        var bit__4789__auto__ = G__12841.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4789__auto__ || G__12841.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var cljs$core$_EQ_ = null;
  var cljs$core$_EQ___1 = function(x) {
    return true;
  };
  var cljs$core$_EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv(x, y);
    }
  };
  var cljs$core$_EQ___3 = function() {
    var G__12846__delegate = function(x, y, more) {
      while (true) {
        if (cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
          if (cljs.core.next(more)) {
            var G__12847 = y;
            var G__12848 = cljs.core.first(more);
            var G__12849 = cljs.core.next(more);
            x = G__12847;
            y = G__12848;
            more = G__12849;
            continue;
          } else {
            return cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__12846 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12850__i = 0, G__12850__a = new Array(arguments.length - 2);
        while (G__12850__i < G__12850__a.length) {
          G__12850__a[G__12850__i] = arguments[G__12850__i + 2];
          ++G__12850__i;
        }
        more = new cljs.core.IndexedSeq(G__12850__a, 0);
      }
      return G__12846__delegate.call(this, x, y, more);
    };
    G__12846.cljs$lang$maxFixedArity = 2;
    G__12846.cljs$lang$applyTo = function(arglist__12851) {
      var x = cljs.core.first(arglist__12851);
      arglist__12851 = cljs.core.next(arglist__12851);
      var y = cljs.core.first(arglist__12851);
      var more = cljs.core.rest(arglist__12851);
      return G__12846__delegate(x, y, more);
    };
    G__12846.cljs$core$IFn$_invoke$arity$variadic = G__12846__delegate;
    return G__12846;
  }();
  cljs$core$_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$_EQ___1.call(this, x);
      case 2:
        return cljs$core$_EQ___2.call(this, x, y);
      default:
        var G__12852 = null;
        if (arguments.length > 2) {
          var G__12853__i = 0, G__12853__a = new Array(arguments.length - 2);
          while (G__12853__i < G__12853__a.length) {
            G__12853__a[G__12853__i] = arguments[G__12853__i + 2];
            ++G__12853__i;
          }
          G__12852 = new cljs.core.IndexedSeq(G__12853__a, 0);
        }
        return cljs$core$_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12852);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_EQ_.cljs$lang$maxFixedArity = 2;
  cljs$core$_EQ_.cljs$lang$applyTo = cljs$core$_EQ___3.cljs$lang$applyTo;
  cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_EQ___1;
  cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_EQ___2;
  cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$_EQ_;
}();
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":x};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function cljs$core$__GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function cljs$core$es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = function() {
      var G__12854 = self__.iter;
      return cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__12854) : cljs.core.es6_iterator_seq.call(null, G__12854);
    }();
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function cljs$core$__GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function cljs$core$es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function cljs$core$mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function cljs$core$hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__12855 = n + 1;
      var G__12856 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__12857 = cljs.core.next(coll__$1);
      n = G__12855;
      hash_code = G__12856;
      coll__$1 = G__12857;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function cljs$core$hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__12858 = n + 1;
      var G__12859 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__12860 = cljs.core.next(coll__$1);
      n = G__12858;
      hash_code = G__12859;
      coll__$1 = G__12860;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IComparable$ = true;
Date.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  var G__12861 = this$__$1.valueOf();
  var G__12862 = other.valueOf();
  return goog.array.defaultCompare(G__12861, G__12862);
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.valueOf() === other.valueOf();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  var G__12863 = o;
  return goog.getUid(G__12863);
};
cljs.core.inc = function cljs$core$inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function cljs$core$__GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function cljs$core$reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function cljs$core$reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function cljs$core$ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function cljs$core$unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    var G__12865 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12865) : cljs.core.deref.call(null, G__12865);
  } else {
    return x;
  }
};
cljs.core.deref = function cljs$core$deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function() {
  var cljs$core$ci_reduce = null;
  var cljs$core$ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count(cicoll);
    if (cnt === 0) {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    } else {
      var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = function() {
            var G__12872 = val;
            var G__12873 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12872, G__12873) : f.call(null, G__12872, G__12873);
          }();
          if (cljs.core.reduced_QMARK_(nval)) {
            return cljs.core.deref(nval);
          } else {
            var G__12878 = nval;
            var G__12879 = n + 1;
            val = G__12878;
            n = G__12879;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var cljs$core$ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count(cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__12874 = val__$1;
          var G__12875 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12874, G__12875) : f.call(null, G__12874, G__12875);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__12880 = nval;
          var G__12881 = n + 1;
          val__$1 = G__12880;
          n = G__12881;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var cljs$core$ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count(cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__12876 = val__$1;
          var G__12877 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12876, G__12877) : f.call(null, G__12876, G__12877);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__12882 = nval;
          var G__12883 = n + 1;
          val__$1 = G__12882;
          n = G__12883;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  cljs$core$ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return cljs$core$ci_reduce__2.call(this, cicoll, f);
      case 3:
        return cljs$core$ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return cljs$core$ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$ci_reduce__2;
  cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$ci_reduce__3;
  cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$ci_reduce__4;
  return cljs$core$ci_reduce;
}();
cljs.core.array_reduce = function() {
  var cljs$core$array_reduce = null;
  var cljs$core$array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = function() {
            var G__12890 = val;
            var G__12891 = arr[n];
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12890, G__12891) : f.call(null, G__12890, G__12891);
          }();
          if (cljs.core.reduced_QMARK_(nval)) {
            return cljs.core.deref(nval);
          } else {
            var G__12896 = nval;
            var G__12897 = n + 1;
            val = G__12896;
            n = G__12897;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var cljs$core$array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__12892 = val__$1;
          var G__12893 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12892, G__12893) : f.call(null, G__12892, G__12893);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__12898 = nval;
          var G__12899 = n + 1;
          val__$1 = G__12898;
          n = G__12899;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var cljs$core$array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__12894 = val__$1;
          var G__12895 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12894, G__12895) : f.call(null, G__12894, G__12895);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__12900 = nval;
          var G__12901 = n + 1;
          val__$1 = G__12900;
          n = G__12901;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  cljs$core$array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return cljs$core$array_reduce__2.call(this, arr, f);
      case 3:
        return cljs$core$array_reduce__3.call(this, arr, f, val);
      case 4:
        return cljs$core$array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_reduce__2;
  cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$array_reduce__3;
  cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$array_reduce__4;
  return cljs$core$array_reduce;
}();
cljs.core.counted_QMARK_ = function cljs$core$counted_QMARK_(x) {
  var G__12903 = x;
  if (G__12903) {
    var bit__4796__auto__ = G__12903.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4796__auto__ || G__12903.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__12903.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__12903);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__12903);
  }
};
cljs.core.indexed_QMARK_ = function cljs$core$indexed_QMARK_(x) {
  var G__12905 = x;
  if (G__12905) {
    var bit__4796__auto__ = G__12905.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4796__auto__ || G__12905.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__12905.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__12905);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__12905);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function cljs$core$__GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__12906 = coll__$1;
  var G__12907 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__12906, G__12907) : cljs.core.equiv_sequential.call(null, G__12906, G__12907);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__12908 = o;
  var G__12909 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__12908, G__12909) : cljs.core.cons.call(null, G__12908, G__12909);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function cljs$core$__GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5098__auto__ = this;
  return cljs.core.es6_iterator(this__5098__auto__);
};
cljs.core.prim_seq = function() {
  var cljs$core$prim_seq = null;
  var cljs$core$prim_seq__1 = function(prim) {
    return cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
  };
  var cljs$core$prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  cljs$core$prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return cljs$core$prim_seq__1.call(this, prim);
      case 2:
        return cljs$core$prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$prim_seq__1;
  cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$2 = cljs$core$prim_seq__2;
  return cljs$core$prim_seq;
}();
cljs.core.array_seq = function() {
  var cljs$core$array_seq = null;
  var cljs$core$array_seq__1 = function(array) {
    return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
  };
  var cljs$core$array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
  };
  cljs$core$array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return cljs$core$array_seq__1.call(this, array);
      case 2:
        return cljs$core$array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$array_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$array_seq__1;
  cljs$core$array_seq.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_seq__2;
  return cljs$core$array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__12912 = coll__$1;
  var G__12913 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__12912, G__12913) : cljs.core.equiv_sequential.call(null, G__12912, G__12913);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__12914 = cljs.core.List.EMPTY;
  var G__12915 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__12914, G__12915) : cljs.core.with_meta.call(null, G__12914, G__12915);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  var G__12916 = f;
  var G__12917 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__12916, G__12917) : cljs.core.seq_reduce.call(null, G__12916, G__12917);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  var G__12918 = f;
  var G__12919 = start;
  var G__12920 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__12918, G__12919, G__12920) : cljs.core.seq_reduce.call(null, G__12918, G__12919, G__12920);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__12921 = o;
  var G__12922 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__12921, G__12922) : cljs.core.cons.call(null, G__12921, G__12922);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function cljs$core$__GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5098__auto__ = this;
  return cljs.core.es6_iterator(this__5098__auto__);
};
cljs.core.second = function cljs$core$second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function cljs$core$ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function cljs$core$nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function cljs$core$fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function cljs$core$nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function cljs$core$last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__12923 = sn;
      s = G__12923;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var cljs$core$conj = null;
  var cljs$core$conj__0 = function() {
    return cljs.core.PersistentVector.EMPTY;
  };
  var cljs$core$conj__1 = function(coll) {
    return coll;
  };
  var cljs$core$conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj(coll, x);
    } else {
      return cljs.core._conj(cljs.core.List.EMPTY, x);
    }
  };
  var cljs$core$conj__3 = function() {
    var G__12928__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__12929 = cljs$core$conj.cljs$core$IFn$_invoke$arity$2(coll, x);
          var G__12930 = cljs.core.first(xs);
          var G__12931 = cljs.core.next(xs);
          coll = G__12929;
          x = G__12930;
          xs = G__12931;
          continue;
        } else {
          return cljs$core$conj.cljs$core$IFn$_invoke$arity$2(coll, x);
        }
        break;
      }
    };
    var G__12928 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        var G__12932__i = 0, G__12932__a = new Array(arguments.length - 2);
        while (G__12932__i < G__12932__a.length) {
          G__12932__a[G__12932__i] = arguments[G__12932__i + 2];
          ++G__12932__i;
        }
        xs = new cljs.core.IndexedSeq(G__12932__a, 0);
      }
      return G__12928__delegate.call(this, coll, x, xs);
    };
    G__12928.cljs$lang$maxFixedArity = 2;
    G__12928.cljs$lang$applyTo = function(arglist__12933) {
      var coll = cljs.core.first(arglist__12933);
      arglist__12933 = cljs.core.next(arglist__12933);
      var x = cljs.core.first(arglist__12933);
      var xs = cljs.core.rest(arglist__12933);
      return G__12928__delegate(coll, x, xs);
    };
    G__12928.cljs$core$IFn$_invoke$arity$variadic = G__12928__delegate;
    return G__12928;
  }();
  cljs$core$conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 0:
        return cljs$core$conj__0.call(this);
      case 1:
        return cljs$core$conj__1.call(this, coll);
      case 2:
        return cljs$core$conj__2.call(this, coll, x);
      default:
        var G__12934 = null;
        if (arguments.length > 2) {
          var G__12935__i = 0, G__12935__a = new Array(arguments.length - 2);
          while (G__12935__i < G__12935__a.length) {
            G__12935__a[G__12935__i] = arguments[G__12935__i + 2];
            ++G__12935__i;
          }
          G__12934 = new cljs.core.IndexedSeq(G__12935__a, 0);
        }
        return cljs$core$conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, G__12934);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$conj.cljs$lang$maxFixedArity = 2;
  cljs$core$conj.cljs$lang$applyTo = cljs$core$conj__3.cljs$lang$applyTo;
  cljs$core$conj.cljs$core$IFn$_invoke$arity$0 = cljs$core$conj__0;
  cljs$core$conj.cljs$core$IFn$_invoke$arity$1 = cljs$core$conj__1;
  cljs$core$conj.cljs$core$IFn$_invoke$arity$2 = cljs$core$conj__2;
  cljs$core$conj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$conj;
}();
cljs.core.empty = function cljs$core$empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function cljs$core$accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__12936 = cljs.core.next(s);
      var G__12937 = acc + 1;
      s = G__12936;
      acc = G__12937;
      continue;
    }
    break;
  }
};
cljs.core.count = function cljs$core$count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__12939 = coll;
      if (G__12939) {
        var bit__4789__auto__ = G__12939.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4789__auto__ || G__12939.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, coll)) {
            return cljs.core._count(coll);
          } else {
            return cljs.core.accumulating_seq_count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var cljs$core$linear_traversal_nth = null;
  var cljs$core$linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq(coll)) {
            return cljs.core.first(coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_(coll)) {
            return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
          } else {
            if (cljs.core.seq(coll)) {
              var G__12940 = cljs.core.next(coll);
              var G__12941 = n - 1;
              coll = G__12940;
              n = G__12941;
              continue;
            } else {
              throw new Error("Index out of bounds");
            }
          }
        }
      }
      break;
    }
  };
  var cljs$core$linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq(coll)) {
            return cljs.core.first(coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_(coll)) {
            return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
          } else {
            if (cljs.core.seq(coll)) {
              var G__12942 = cljs.core.next(coll);
              var G__12943 = n - 1;
              var G__12944 = not_found;
              coll = G__12942;
              n = G__12943;
              not_found = G__12944;
              continue;
            } else {
              return not_found;
            }
          }
        }
      }
      break;
    }
  };
  cljs$core$linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return cljs$core$linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return cljs$core$linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$linear_traversal_nth__2;
  cljs$core$linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$linear_traversal_nth__3;
  return cljs$core$linear_traversal_nth;
}();
cljs.core.nth = function() {
  var cljs$core$nth = null;
  var cljs$core$nth__2 = function(coll, n) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number");
    } else {
      if (coll == null) {
        return coll;
      } else {
        if (function() {
          var G__12949 = coll;
          if (G__12949) {
            var bit__4789__auto__ = G__12949.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4789__auto__ || G__12949.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
        } else {
          if (cljs.core.array_QMARK_(coll)) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return null;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                if (function() {
                  var G__12950 = coll;
                  if (G__12950) {
                    var bit__4796__auto__ = G__12950.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4796__auto__ || G__12950.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__12950.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__12950);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__12950);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  var cljs$core$nth__3 = function(coll, n, not_found) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number.");
    } else {
      if (coll == null) {
        return not_found;
      } else {
        if (function() {
          var G__12951 = coll;
          if (G__12951) {
            var bit__4789__auto__ = G__12951.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4789__auto__ || G__12951.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
        } else {
          if (cljs.core.array_QMARK_(coll)) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return not_found;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                if (function() {
                  var G__12952 = coll;
                  if (G__12952) {
                    var bit__4796__auto__ = G__12952.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4796__auto__ || G__12952.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__12952.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__12952);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__12952);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  cljs$core$nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return cljs$core$nth__2.call(this, coll, n);
      case 3:
        return cljs$core$nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$nth__2;
  cljs$core$nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$nth__3;
  return cljs$core$nth;
}();
cljs.core.nthrest = function cljs$core$nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__12953 = n__$1 - 1;
      var G__12954 = cljs.core.rest(xs);
      n__$1 = G__12953;
      xs = G__12954;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function() {
  var cljs$core$get = null;
  var cljs$core$get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__12957 = o;
        if (G__12957) {
          var bit__4789__auto__ = G__12957.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4789__auto__ || G__12957.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return o.cljs$core$ILookup$_lookup$arity$2(null, k);
      } else {
        if (cljs.core.array_QMARK_(o)) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
              return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var cljs$core$get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__12958 = o;
        if (G__12958) {
          var bit__4789__auto__ = G__12958.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4789__auto__ || G__12958.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
      } else {
        if (cljs.core.array_QMARK_(o)) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
              return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
            } else {
              return not_found;
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  cljs$core$get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return cljs$core$get__2.call(this, o, k);
      case 3:
        return cljs$core$get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$get.cljs$core$IFn$_invoke$arity$2 = cljs$core$get__2;
  cljs$core$get.cljs$core$IFn$_invoke$arity$3 = cljs$core$get__3;
  return cljs$core$get;
}();
cljs.core.assoc = function() {
  var cljs$core$assoc = null;
  var cljs$core$assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc(coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays([k], [v]);
    }
  };
  var cljs$core$assoc__4 = function() {
    var G__12962__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = cljs$core$assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__12963 = ret;
          var G__12964 = cljs.core.first(kvs);
          var G__12965 = cljs.core.second(kvs);
          var G__12966 = cljs.core.nnext(kvs);
          coll = G__12963;
          k = G__12964;
          v = G__12965;
          kvs = G__12966;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__12962 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        var G__12967__i = 0, G__12967__a = new Array(arguments.length - 3);
        while (G__12967__i < G__12967__a.length) {
          G__12967__a[G__12967__i] = arguments[G__12967__i + 3];
          ++G__12967__i;
        }
        kvs = new cljs.core.IndexedSeq(G__12967__a, 0);
      }
      return G__12962__delegate.call(this, coll, k, v, kvs);
    };
    G__12962.cljs$lang$maxFixedArity = 3;
    G__12962.cljs$lang$applyTo = function(arglist__12968) {
      var coll = cljs.core.first(arglist__12968);
      arglist__12968 = cljs.core.next(arglist__12968);
      var k = cljs.core.first(arglist__12968);
      arglist__12968 = cljs.core.next(arglist__12968);
      var v = cljs.core.first(arglist__12968);
      var kvs = cljs.core.rest(arglist__12968);
      return G__12962__delegate(coll, k, v, kvs);
    };
    G__12962.cljs$core$IFn$_invoke$arity$variadic = G__12962__delegate;
    return G__12962;
  }();
  cljs$core$assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return cljs$core$assoc__3.call(this, coll, k, v);
      default:
        var G__12969 = null;
        if (arguments.length > 3) {
          var G__12970__i = 0, G__12970__a = new Array(arguments.length - 3);
          while (G__12970__i < G__12970__a.length) {
            G__12970__a[G__12970__i] = arguments[G__12970__i + 3];
            ++G__12970__i;
          }
          G__12969 = new cljs.core.IndexedSeq(G__12970__a, 0);
        }
        return cljs$core$assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, G__12969);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$assoc.cljs$lang$maxFixedArity = 3;
  cljs$core$assoc.cljs$lang$applyTo = cljs$core$assoc__4.cljs$lang$applyTo;
  cljs$core$assoc.cljs$core$IFn$_invoke$arity$3 = cljs$core$assoc__3;
  cljs$core$assoc.cljs$core$IFn$_invoke$arity$variadic = cljs$core$assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$assoc;
}();
cljs.core.dissoc = function() {
  var cljs$core$dissoc = null;
  var cljs$core$dissoc__1 = function(coll) {
    return coll;
  };
  var cljs$core$dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc(coll, k);
    }
  };
  var cljs$core$dissoc__3 = function() {
    var G__12973__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = cljs$core$dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
          if (cljs.core.truth_(ks)) {
            var G__12974 = ret;
            var G__12975 = cljs.core.first(ks);
            var G__12976 = cljs.core.next(ks);
            coll = G__12974;
            k = G__12975;
            ks = G__12976;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__12973 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__12977__i = 0, G__12977__a = new Array(arguments.length - 2);
        while (G__12977__i < G__12977__a.length) {
          G__12977__a[G__12977__i] = arguments[G__12977__i + 2];
          ++G__12977__i;
        }
        ks = new cljs.core.IndexedSeq(G__12977__a, 0);
      }
      return G__12973__delegate.call(this, coll, k, ks);
    };
    G__12973.cljs$lang$maxFixedArity = 2;
    G__12973.cljs$lang$applyTo = function(arglist__12978) {
      var coll = cljs.core.first(arglist__12978);
      arglist__12978 = cljs.core.next(arglist__12978);
      var k = cljs.core.first(arglist__12978);
      var ks = cljs.core.rest(arglist__12978);
      return G__12973__delegate(coll, k, ks);
    };
    G__12973.cljs$core$IFn$_invoke$arity$variadic = G__12973__delegate;
    return G__12973;
  }();
  cljs$core$dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$dissoc__1.call(this, coll);
      case 2:
        return cljs$core$dissoc__2.call(this, coll, k);
      default:
        var G__12979 = null;
        if (arguments.length > 2) {
          var G__12980__i = 0, G__12980__a = new Array(arguments.length - 2);
          while (G__12980__i < G__12980__a.length) {
            G__12980__a[G__12980__i] = arguments[G__12980__i + 2];
            ++G__12980__i;
          }
          G__12979 = new cljs.core.IndexedSeq(G__12980__a, 0);
        }
        return cljs$core$dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, G__12979);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$dissoc.cljs$lang$maxFixedArity = 2;
  cljs$core$dissoc.cljs$lang$applyTo = cljs$core$dissoc__3.cljs$lang$applyTo;
  cljs$core$dissoc.cljs$core$IFn$_invoke$arity$1 = cljs$core$dissoc__1;
  cljs$core$dissoc.cljs$core$IFn$_invoke$arity$2 = cljs$core$dissoc__2;
  cljs$core$dissoc.cljs$core$IFn$_invoke$arity$variadic = cljs$core$dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$dissoc;
}();
cljs.core.fn_QMARK_ = function cljs$core$fn_QMARK_(f) {
  var or__4122__auto__ = function() {
    var G__12985 = f;
    return goog.isFunction(G__12985);
  }();
  if (cljs.core.truth_(or__4122__auto__)) {
    return or__4122__auto__;
  } else {
    var G__12986 = f;
    if (G__12986) {
      var bit__4796__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__4122__auto____$1 = bit__4796__auto__;
        if (cljs.core.truth_(or__4122__auto____$1)) {
          return or__4122__auto____$1;
        } else {
          return G__12986.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__12986.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__12986);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__12986);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
};
cljs.core.MetaFn.prototype.call = function() {
  var G__13452 = null;
  var G__13452__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__13452__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12988 = a;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__12988) : self__.afn.call(null, G__12988);
  };
  var G__13452__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12989 = a;
    var G__12990 = b;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__12989, G__12990) : self__.afn.call(null, G__12989, G__12990);
  };
  var G__13452__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12991 = a;
    var G__12992 = b;
    var G__12993 = c;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__12991, G__12992, G__12993) : self__.afn.call(null, G__12991, G__12992, G__12993);
  };
  var G__13452__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12994 = a;
    var G__12995 = b;
    var G__12996 = c;
    var G__12997 = d;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__12994, G__12995, G__12996, G__12997) : self__.afn.call(null, G__12994, G__12995, G__12996, G__12997);
  };
  var G__13452__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__12998 = a;
    var G__12999 = b;
    var G__13000 = c;
    var G__13001 = d;
    var G__13002 = e;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__12998, G__12999, G__13000, G__13001, G__13002) : self__.afn.call(null, G__12998, G__12999, G__13000, G__13001, G__13002);
  };
  var G__13452__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__13003 = a;
    var G__13004 = b;
    var G__13005 = c;
    var G__13006 = d;
    var G__13007 = e;
    var G__13008 = f;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__13003, G__13004, G__13005, G__13006, G__13007, G__13008) : self__.afn.call(null, G__13003, G__13004, G__13005, G__13006, G__13007, G__13008);
  };
  var G__13452__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__13009 = a;
    var G__13010 = b;
    var G__13011 = c;
    var G__13012 = d;
    var G__13013 = e;
    var G__13014 = f;
    var G__13015 = g;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__13009, G__13010, G__13011, G__13012, G__13013, G__13014, G__13015) : self__.afn.call(null, G__13009, G__13010, G__13011, G__13012, G__13013, G__13014, G__13015);
  };
  var G__13452__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__13016 = a;
    var G__13017 = b;
    var G__13018 = c;
    var G__13019 = d;
    var G__13020 = e;
    var G__13021 = f;
    var G__13022 = g;
    var G__13023 = h;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__13016, G__13017, G__13018, G__13019, G__13020, G__13021, G__13022, G__13023) : self__.afn.call(null, G__13016, G__13017, G__13018, G__13019, G__13020, G__13021, G__13022, G__13023);
  };
  var G__13452__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__13024 = a;
    var G__13025 = b;
    var G__13026 = c;
    var G__13027 = d;
    var G__13028 = e;
    var G__13029 = f;
    var G__13030 = g;
    var G__13031 = h;
    var G__13032 = i;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__13024, G__13025, G__13026, G__13027, G__13028, G__13029, G__13030, G__13031, G__13032) : self__.afn.call(null, G__13024, G__13025, G__13026, G__13027, G__13028, G__13029, G__13030, G__13031, G__13032);
  };
  var G__13452__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__13033 = a;
    var G__13034 = b;
    var G__13035 = c;
    var G__13036 = d;
    var G__13037 = e;
    var G__13038 = f;
    var G__13039 = g;
    var G__13040 = h;
    var G__13041 = i;
    var G__13042 = j;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__13033, G__13034, G__13035, G__13036, G__13037, G__13038, G__13039, G__13040, G__13041, G__13042) : self__.afn.call(null, G__13033, G__13034, G__13035, G__13036, G__13037, G__13038, G__13039, G__13040, G__13041, G__13042);
  };
  var G__13452__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__13043 = a;
    var G__13044 = b;
    var G__13045 = c;
    var G__13046 = d;
    var G__13047 = e;
    var G__13048 = f;
    var G__13049 = g;
    var G__13050 = h;
    var G__13051 = i;
    var G__13052 = j;
    var G__13053 = k;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__13043, G__13044, G__13045, G__13046, G__13047, G__13048, G__13049, G__13050, G__13051, G__13052, G__13053) : self__.afn.call(null, G__13043, G__13044, G__13045, G__13046, G__13047, G__13048, G__13049, G__13050, G__13051, G__13052, G__13053);
  };
  var G__13452__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__13054 = a;
    var G__13055 = b;
    var G__13056 = c;
    var G__13057 = d;
    var G__13058 = e;
    var G__13059 = f;
    var G__13060 = g;
    var G__13061 = h;
    var G__13062 = i;
    var G__13063 = j;
    var G__13064 = k;
    var G__13065 = l;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__13054, G__13055, G__13056, G__13057, G__13058, G__13059, G__13060, G__13061, G__13062, G__13063, G__13064, G__13065) : self__.afn.call(null, G__13054, G__13055, G__13056, G__13057, G__13058, G__13059, G__13060, G__13061, G__13062, G__13063, G__13064, G__13065);
  };
  var G__13452__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__13066 = a;
    var G__13067 = b;
    var G__13068 = c;
    var G__13069 = d;
    var G__13070 = e;
    var G__13071 = f;
    var G__13072 = g;
    var G__13073 = h;
    var G__13074 = i;
    var G__13075 = j;
    var G__13076 = k;
    var G__13077 = l;
    var G__13078 = m;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__13066, G__13067, G__13068, G__13069, G__13070, G__13071, G__13072, G__13073, G__13074, G__13075, G__13076, G__13077, G__13078) : self__.afn.call(null, G__13066, G__13067, G__13068, G__13069, G__13070, G__13071, G__13072, G__13073, G__13074, G__13075, G__13076, G__13077, G__13078);
  };
  var G__13452__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__13079 = a;
    var G__13080 = b;
    var G__13081 = c;
    var G__13082 = d;
    var G__13083 = e;
    var G__13084 = f;
    var G__13085 = g;
    var G__13086 = h;
    var G__13087 = i;
    var G__13088 = j;
    var G__13089 = k;
    var G__13090 = l;
    var G__13091 = m;
    var G__13092 = n;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__13079, G__13080, G__13081, G__13082, G__13083, G__13084, G__13085, G__13086, G__13087, G__13088, G__13089, G__13090, G__13091, G__13092) : self__.afn.call(null, G__13079, G__13080, G__13081, G__13082, G__13083, G__13084, G__13085, G__13086, G__13087, G__13088, G__13089, G__13090, G__13091, G__13092);
  };
  var G__13452__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__13093 = a;
    var G__13094 = b;
    var G__13095 = c;
    var G__13096 = d;
    var G__13097 = e;
    var G__13098 = f;
    var G__13099 = g;
    var G__13100 = h;
    var G__13101 = i;
    var G__13102 = j;
    var G__13103 = k;
    var G__13104 = l;
    var G__13105 = m;
    var G__13106 = n;
    var G__13107 = o;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__13093, G__13094, G__13095, G__13096, G__13097, G__13098, G__13099, G__13100, G__13101, G__13102, G__13103, G__13104, G__13105, G__13106, G__13107) : self__.afn.call(null, G__13093, G__13094, G__13095, G__13096, G__13097, G__13098, G__13099, G__13100, G__13101, G__13102, G__13103, G__13104, G__13105, G__13106, G__13107);
  };
  var G__13452__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__13108 = a;
    var G__13109 = b;
    var G__13110 = c;
    var G__13111 = d;
    var G__13112 = e;
    var G__13113 = f;
    var G__13114 = g;
    var G__13115 = h;
    var G__13116 = i;
    var G__13117 = j;
    var G__13118 = k;
    var G__13119 = l;
    var G__13120 = m;
    var G__13121 = n;
    var G__13122 = o;
    var G__13123 = p;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__13108, G__13109, G__13110, G__13111, G__13112, G__13113, G__13114, G__13115, G__13116, G__13117, G__13118, G__13119, G__13120, G__13121, G__13122, G__13123) : self__.afn.call(null, G__13108, G__13109, G__13110, G__13111, G__13112, G__13113, G__13114, G__13115, G__13116, G__13117, G__13118, G__13119, G__13120, G__13121, G__13122, G__13123);
  };
  var G__13452__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__13124 = a;
    var G__13125 = b;
    var G__13126 = c;
    var G__13127 = d;
    var G__13128 = e;
    var G__13129 = f;
    var G__13130 = g;
    var G__13131 = h;
    var G__13132 = i;
    var G__13133 = j;
    var G__13134 = k;
    var G__13135 = l;
    var G__13136 = m;
    var G__13137 = n;
    var G__13138 = o;
    var G__13139 = p;
    var G__13140 = q;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__13124, G__13125, G__13126, G__13127, G__13128, G__13129, G__13130, G__13131, G__13132, G__13133, G__13134, G__13135, G__13136, G__13137, G__13138, G__13139, G__13140) : self__.afn.call(null, G__13124, G__13125, G__13126, G__13127, G__13128, G__13129, G__13130, G__13131, G__13132, G__13133, G__13134, G__13135, G__13136, G__13137, G__13138, G__13139, G__13140);
  };
  var G__13452__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__13141 = a;
    var G__13142 = b;
    var G__13143 = c;
    var G__13144 = d;
    var G__13145 = e;
    var G__13146 = f;
    var G__13147 = g;
    var G__13148 = h;
    var G__13149 = i;
    var G__13150 = j;
    var G__13151 = k;
    var G__13152 = l;
    var G__13153 = m;
    var G__13154 = n;
    var G__13155 = o;
    var G__13156 = p;
    var G__13157 = q;
    var G__13158 = r;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__13141, G__13142, G__13143, G__13144, G__13145, G__13146, G__13147, G__13148, G__13149, G__13150, G__13151, G__13152, G__13153, G__13154, G__13155, G__13156, G__13157, G__13158) : self__.afn.call(null, G__13141, G__13142, G__13143, G__13144, G__13145, G__13146, G__13147, G__13148, G__13149, G__13150, G__13151, G__13152, G__13153, G__13154, G__13155, G__13156, G__13157, G__13158);
  };
  var G__13452__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__13159 = a;
    var G__13160 = b;
    var G__13161 = c;
    var G__13162 = d;
    var G__13163 = e;
    var G__13164 = f;
    var G__13165 = g;
    var G__13166 = h;
    var G__13167 = i;
    var G__13168 = j;
    var G__13169 = k;
    var G__13170 = l;
    var G__13171 = m;
    var G__13172 = n;
    var G__13173 = o;
    var G__13174 = p;
    var G__13175 = q;
    var G__13176 = r;
    var G__13177 = s;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__13159, G__13160, G__13161, G__13162, G__13163, G__13164, G__13165, G__13166, G__13167, G__13168, G__13169, G__13170, G__13171, G__13172, G__13173, G__13174, G__13175, G__13176, G__13177) : self__.afn.call(null, G__13159, G__13160, G__13161, G__13162, G__13163, G__13164, G__13165, G__13166, G__13167, G__13168, G__13169, G__13170, G__13171, G__13172, G__13173, G__13174, G__13175, G__13176, G__13177);
  };
  var G__13452__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__13178 = a;
    var G__13179 = b;
    var G__13180 = c;
    var G__13181 = d;
    var G__13182 = e;
    var G__13183 = f;
    var G__13184 = g;
    var G__13185 = h;
    var G__13186 = i;
    var G__13187 = j;
    var G__13188 = k;
    var G__13189 = l;
    var G__13190 = m;
    var G__13191 = n;
    var G__13192 = o;
    var G__13193 = p;
    var G__13194 = q;
    var G__13195 = r;
    var G__13196 = s;
    var G__13197 = t;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__13178, G__13179, G__13180, G__13181, G__13182, G__13183, G__13184, G__13185, G__13186, G__13187, G__13188, G__13189, G__13190, G__13191, G__13192, G__13193, G__13194, G__13195, G__13196, G__13197) : self__.afn.call(null, G__13178, G__13179, G__13180, G__13181, G__13182, G__13183, G__13184, G__13185, G__13186, G__13187, G__13188, G__13189, G__13190, G__13191, G__13192, G__13193, G__13194, G__13195, 
    G__13196, G__13197);
  };
  var G__13452__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__13198 = self__.afn;
    var G__13199 = a;
    var G__13200 = b;
    var G__13201 = c;
    var G__13202 = d;
    var G__13203 = e;
    var G__13204 = f;
    var G__13205 = g;
    var G__13206 = h;
    var G__13207 = i;
    var G__13208 = j;
    var G__13209 = k;
    var G__13210 = l;
    var G__13211 = m;
    var G__13212 = n;
    var G__13213 = o;
    var G__13214 = p;
    var G__13215 = q;
    var G__13216 = r;
    var G__13217 = s;
    var G__13218 = t;
    var G__13219 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__13198, G__13199, G__13200, G__13201, G__13202, G__13203, G__13204, G__13205, G__13206, G__13207, G__13208, G__13209, G__13210, G__13211, G__13212, G__13213, G__13214, G__13215, G__13216, G__13217, G__13218, G__13219) : cljs.core.apply.call(null, G__13198, G__13199, G__13200, G__13201, G__13202, G__13203, G__13204, G__13205, G__13206, G__13207, G__13208, G__13209, G__13210, G__13211, G__13212, 
    G__13213, G__13214, G__13215, G__13216, G__13217, G__13218, G__13219);
  };
  G__13452 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__13452__1.call(this, self__);
      case 2:
        return G__13452__2.call(this, self__, a);
      case 3:
        return G__13452__3.call(this, self__, a, b);
      case 4:
        return G__13452__4.call(this, self__, a, b, c);
      case 5:
        return G__13452__5.call(this, self__, a, b, c, d);
      case 6:
        return G__13452__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__13452__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__13452__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__13452__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__13452__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__13452__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__13452__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__13452__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__13452__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__13452__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__13452__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__13452__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__13452__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__13452__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__13452__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__13452__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__13452__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13452.cljs$core$IFn$_invoke$arity$1 = G__13452__1;
  G__13452.cljs$core$IFn$_invoke$arity$2 = G__13452__2;
  G__13452.cljs$core$IFn$_invoke$arity$3 = G__13452__3;
  G__13452.cljs$core$IFn$_invoke$arity$4 = G__13452__4;
  G__13452.cljs$core$IFn$_invoke$arity$5 = G__13452__5;
  G__13452.cljs$core$IFn$_invoke$arity$6 = G__13452__6;
  G__13452.cljs$core$IFn$_invoke$arity$7 = G__13452__7;
  G__13452.cljs$core$IFn$_invoke$arity$8 = G__13452__8;
  G__13452.cljs$core$IFn$_invoke$arity$9 = G__13452__9;
  G__13452.cljs$core$IFn$_invoke$arity$10 = G__13452__10;
  G__13452.cljs$core$IFn$_invoke$arity$11 = G__13452__11;
  G__13452.cljs$core$IFn$_invoke$arity$12 = G__13452__12;
  G__13452.cljs$core$IFn$_invoke$arity$13 = G__13452__13;
  G__13452.cljs$core$IFn$_invoke$arity$14 = G__13452__14;
  G__13452.cljs$core$IFn$_invoke$arity$15 = G__13452__15;
  G__13452.cljs$core$IFn$_invoke$arity$16 = G__13452__16;
  G__13452.cljs$core$IFn$_invoke$arity$17 = G__13452__17;
  G__13452.cljs$core$IFn$_invoke$arity$18 = G__13452__18;
  G__13452.cljs$core$IFn$_invoke$arity$19 = G__13452__19;
  G__13452.cljs$core$IFn$_invoke$arity$20 = G__13452__20;
  G__13452.cljs$core$IFn$_invoke$arity$21 = G__13452__21;
  G__13452.cljs$core$IFn$_invoke$arity$22 = G__13452__22;
  return G__13452;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args12987) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args12987)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  var G__13220 = a;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__13220) : self__.afn.call(null, G__13220);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  var G__13221 = a;
  var G__13222 = b;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__13221, G__13222) : self__.afn.call(null, G__13221, G__13222);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  var G__13223 = a;
  var G__13224 = b;
  var G__13225 = c;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__13223, G__13224, G__13225) : self__.afn.call(null, G__13223, G__13224, G__13225);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  var G__13226 = a;
  var G__13227 = b;
  var G__13228 = c;
  var G__13229 = d;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__13226, G__13227, G__13228, G__13229) : self__.afn.call(null, G__13226, G__13227, G__13228, G__13229);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  var G__13230 = a;
  var G__13231 = b;
  var G__13232 = c;
  var G__13233 = d;
  var G__13234 = e;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__13230, G__13231, G__13232, G__13233, G__13234) : self__.afn.call(null, G__13230, G__13231, G__13232, G__13233, G__13234);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  var G__13235 = a;
  var G__13236 = b;
  var G__13237 = c;
  var G__13238 = d;
  var G__13239 = e;
  var G__13240 = f;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__13235, G__13236, G__13237, G__13238, G__13239, G__13240) : self__.afn.call(null, G__13235, G__13236, G__13237, G__13238, G__13239, G__13240);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  var G__13241 = a;
  var G__13242 = b;
  var G__13243 = c;
  var G__13244 = d;
  var G__13245 = e;
  var G__13246 = f;
  var G__13247 = g;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__13241, G__13242, G__13243, G__13244, G__13245, G__13246, G__13247) : self__.afn.call(null, G__13241, G__13242, G__13243, G__13244, G__13245, G__13246, G__13247);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  var G__13248 = a;
  var G__13249 = b;
  var G__13250 = c;
  var G__13251 = d;
  var G__13252 = e;
  var G__13253 = f;
  var G__13254 = g;
  var G__13255 = h;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__13248, G__13249, G__13250, G__13251, G__13252, G__13253, G__13254, G__13255) : self__.afn.call(null, G__13248, G__13249, G__13250, G__13251, G__13252, G__13253, G__13254, G__13255);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  var G__13256 = a;
  var G__13257 = b;
  var G__13258 = c;
  var G__13259 = d;
  var G__13260 = e;
  var G__13261 = f;
  var G__13262 = g;
  var G__13263 = h;
  var G__13264 = i;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__13256, G__13257, G__13258, G__13259, G__13260, G__13261, G__13262, G__13263, G__13264) : self__.afn.call(null, G__13256, G__13257, G__13258, G__13259, G__13260, G__13261, G__13262, G__13263, G__13264);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  var G__13265 = a;
  var G__13266 = b;
  var G__13267 = c;
  var G__13268 = d;
  var G__13269 = e;
  var G__13270 = f;
  var G__13271 = g;
  var G__13272 = h;
  var G__13273 = i;
  var G__13274 = j;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__13265, G__13266, G__13267, G__13268, G__13269, G__13270, G__13271, G__13272, G__13273, G__13274) : self__.afn.call(null, G__13265, G__13266, G__13267, G__13268, G__13269, G__13270, G__13271, G__13272, G__13273, G__13274);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  var G__13275 = a;
  var G__13276 = b;
  var G__13277 = c;
  var G__13278 = d;
  var G__13279 = e;
  var G__13280 = f;
  var G__13281 = g;
  var G__13282 = h;
  var G__13283 = i;
  var G__13284 = j;
  var G__13285 = k;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__13275, G__13276, G__13277, G__13278, G__13279, G__13280, G__13281, G__13282, G__13283, G__13284, G__13285) : self__.afn.call(null, G__13275, G__13276, G__13277, G__13278, G__13279, G__13280, G__13281, G__13282, G__13283, G__13284, G__13285);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  var G__13286 = a;
  var G__13287 = b;
  var G__13288 = c;
  var G__13289 = d;
  var G__13290 = e;
  var G__13291 = f;
  var G__13292 = g;
  var G__13293 = h;
  var G__13294 = i;
  var G__13295 = j;
  var G__13296 = k;
  var G__13297 = l;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__13286, G__13287, G__13288, G__13289, G__13290, G__13291, G__13292, G__13293, G__13294, G__13295, G__13296, G__13297) : self__.afn.call(null, G__13286, G__13287, G__13288, G__13289, G__13290, G__13291, G__13292, G__13293, G__13294, G__13295, G__13296, G__13297);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  var G__13298 = a;
  var G__13299 = b;
  var G__13300 = c;
  var G__13301 = d;
  var G__13302 = e;
  var G__13303 = f;
  var G__13304 = g;
  var G__13305 = h;
  var G__13306 = i;
  var G__13307 = j;
  var G__13308 = k;
  var G__13309 = l;
  var G__13310 = m;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__13298, G__13299, G__13300, G__13301, G__13302, G__13303, G__13304, G__13305, G__13306, G__13307, G__13308, G__13309, G__13310) : self__.afn.call(null, G__13298, G__13299, G__13300, G__13301, G__13302, G__13303, G__13304, G__13305, G__13306, G__13307, G__13308, G__13309, G__13310);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  var G__13311 = a;
  var G__13312 = b;
  var G__13313 = c;
  var G__13314 = d;
  var G__13315 = e;
  var G__13316 = f;
  var G__13317 = g;
  var G__13318 = h;
  var G__13319 = i;
  var G__13320 = j;
  var G__13321 = k;
  var G__13322 = l;
  var G__13323 = m;
  var G__13324 = n;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__13311, G__13312, G__13313, G__13314, G__13315, G__13316, G__13317, G__13318, G__13319, G__13320, G__13321, G__13322, G__13323, G__13324) : self__.afn.call(null, G__13311, G__13312, G__13313, G__13314, G__13315, G__13316, G__13317, G__13318, G__13319, G__13320, G__13321, G__13322, G__13323, G__13324);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  var G__13325 = a;
  var G__13326 = b;
  var G__13327 = c;
  var G__13328 = d;
  var G__13329 = e;
  var G__13330 = f;
  var G__13331 = g;
  var G__13332 = h;
  var G__13333 = i;
  var G__13334 = j;
  var G__13335 = k;
  var G__13336 = l;
  var G__13337 = m;
  var G__13338 = n;
  var G__13339 = o;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__13325, G__13326, G__13327, G__13328, G__13329, G__13330, G__13331, G__13332, G__13333, G__13334, G__13335, G__13336, G__13337, G__13338, G__13339) : self__.afn.call(null, G__13325, G__13326, G__13327, G__13328, G__13329, G__13330, G__13331, G__13332, G__13333, G__13334, G__13335, G__13336, G__13337, G__13338, G__13339);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  var G__13340 = a;
  var G__13341 = b;
  var G__13342 = c;
  var G__13343 = d;
  var G__13344 = e;
  var G__13345 = f;
  var G__13346 = g;
  var G__13347 = h;
  var G__13348 = i;
  var G__13349 = j;
  var G__13350 = k;
  var G__13351 = l;
  var G__13352 = m;
  var G__13353 = n;
  var G__13354 = o;
  var G__13355 = p;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__13340, G__13341, G__13342, G__13343, G__13344, G__13345, G__13346, G__13347, G__13348, G__13349, G__13350, G__13351, G__13352, G__13353, G__13354, G__13355) : self__.afn.call(null, G__13340, G__13341, G__13342, G__13343, G__13344, G__13345, G__13346, G__13347, G__13348, G__13349, G__13350, G__13351, G__13352, G__13353, G__13354, G__13355);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  var G__13356 = a;
  var G__13357 = b;
  var G__13358 = c;
  var G__13359 = d;
  var G__13360 = e;
  var G__13361 = f;
  var G__13362 = g;
  var G__13363 = h;
  var G__13364 = i;
  var G__13365 = j;
  var G__13366 = k;
  var G__13367 = l;
  var G__13368 = m;
  var G__13369 = n;
  var G__13370 = o;
  var G__13371 = p;
  var G__13372 = q;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__13356, G__13357, G__13358, G__13359, G__13360, G__13361, G__13362, G__13363, G__13364, G__13365, G__13366, G__13367, G__13368, G__13369, G__13370, G__13371, G__13372) : self__.afn.call(null, G__13356, G__13357, G__13358, G__13359, G__13360, G__13361, G__13362, G__13363, G__13364, G__13365, G__13366, G__13367, G__13368, G__13369, G__13370, G__13371, G__13372);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  var G__13373 = a;
  var G__13374 = b;
  var G__13375 = c;
  var G__13376 = d;
  var G__13377 = e;
  var G__13378 = f;
  var G__13379 = g;
  var G__13380 = h;
  var G__13381 = i;
  var G__13382 = j;
  var G__13383 = k;
  var G__13384 = l;
  var G__13385 = m;
  var G__13386 = n;
  var G__13387 = o;
  var G__13388 = p;
  var G__13389 = q;
  var G__13390 = r;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__13373, G__13374, G__13375, G__13376, G__13377, G__13378, G__13379, G__13380, G__13381, G__13382, G__13383, G__13384, G__13385, G__13386, G__13387, G__13388, G__13389, G__13390) : self__.afn.call(null, G__13373, G__13374, G__13375, G__13376, G__13377, G__13378, G__13379, G__13380, G__13381, G__13382, G__13383, G__13384, G__13385, G__13386, G__13387, G__13388, G__13389, G__13390);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  var G__13391 = a;
  var G__13392 = b;
  var G__13393 = c;
  var G__13394 = d;
  var G__13395 = e;
  var G__13396 = f;
  var G__13397 = g;
  var G__13398 = h;
  var G__13399 = i;
  var G__13400 = j;
  var G__13401 = k;
  var G__13402 = l;
  var G__13403 = m;
  var G__13404 = n;
  var G__13405 = o;
  var G__13406 = p;
  var G__13407 = q;
  var G__13408 = r;
  var G__13409 = s;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__13391, G__13392, G__13393, G__13394, G__13395, G__13396, G__13397, G__13398, G__13399, G__13400, G__13401, G__13402, G__13403, G__13404, G__13405, G__13406, G__13407, G__13408, G__13409) : self__.afn.call(null, G__13391, G__13392, G__13393, G__13394, G__13395, G__13396, G__13397, G__13398, G__13399, G__13400, G__13401, G__13402, G__13403, G__13404, G__13405, G__13406, G__13407, G__13408, G__13409);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  var G__13410 = a;
  var G__13411 = b;
  var G__13412 = c;
  var G__13413 = d;
  var G__13414 = e;
  var G__13415 = f;
  var G__13416 = g;
  var G__13417 = h;
  var G__13418 = i;
  var G__13419 = j;
  var G__13420 = k;
  var G__13421 = l;
  var G__13422 = m;
  var G__13423 = n;
  var G__13424 = o;
  var G__13425 = p;
  var G__13426 = q;
  var G__13427 = r;
  var G__13428 = s;
  var G__13429 = t;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__13410, G__13411, G__13412, G__13413, G__13414, G__13415, G__13416, G__13417, G__13418, G__13419, G__13420, G__13421, G__13422, G__13423, G__13424, G__13425, G__13426, G__13427, G__13428, G__13429) : self__.afn.call(null, G__13410, G__13411, G__13412, G__13413, G__13414, G__13415, G__13416, G__13417, G__13418, G__13419, G__13420, G__13421, G__13422, G__13423, G__13424, G__13425, G__13426, G__13427, G__13428, 
  G__13429);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__13430 = self__.afn;
  var G__13431 = a;
  var G__13432 = b;
  var G__13433 = c;
  var G__13434 = d;
  var G__13435 = e;
  var G__13436 = f;
  var G__13437 = g;
  var G__13438 = h;
  var G__13439 = i;
  var G__13440 = j;
  var G__13441 = k;
  var G__13442 = l;
  var G__13443 = m;
  var G__13444 = n;
  var G__13445 = o;
  var G__13446 = p;
  var G__13447 = q;
  var G__13448 = r;
  var G__13449 = s;
  var G__13450 = t;
  var G__13451 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__13430, G__13431, G__13432, G__13433, G__13434, G__13435, G__13436, G__13437, G__13438, G__13439, G__13440, G__13441, G__13442, G__13443, G__13444, G__13445, G__13446, G__13447, G__13448, G__13449, G__13450, G__13451) : cljs.core.apply.call(null, G__13430, G__13431, G__13432, G__13433, G__13434, G__13435, G__13436, G__13437, G__13438, G__13439, G__13440, G__13441, G__13442, G__13443, G__13444, 
  G__13445, G__13446, G__13447, G__13448, G__13449, G__13450, G__13451);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function cljs$core$__GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function cljs$core$with_meta(o, meta) {
  if (cljs.core.fn_QMARK_(o) && !function() {
    var G__13456 = o;
    if (G__13456) {
      var bit__4796__auto__ = G__13456.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4796__auto__ || G__13456.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__13456.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__13456);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__13456);
    }
  }()) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function cljs$core$meta(o) {
  if (function() {
    var and__4110__auto__ = !(o == null);
    if (and__4110__auto__) {
      var G__13460 = o;
      if (G__13460) {
        var bit__4796__auto__ = G__13460.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4796__auto__ || G__13460.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__13460.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__13460);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__13460);
      }
    } else {
      return and__4110__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function cljs$core$peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function cljs$core$pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function() {
  var cljs$core$disj = null;
  var cljs$core$disj__1 = function(coll) {
    return coll;
  };
  var cljs$core$disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin(coll, k);
    }
  };
  var cljs$core$disj__3 = function() {
    var G__13463__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = cljs$core$disj.cljs$core$IFn$_invoke$arity$2(coll, k);
          if (cljs.core.truth_(ks)) {
            var G__13464 = ret;
            var G__13465 = cljs.core.first(ks);
            var G__13466 = cljs.core.next(ks);
            coll = G__13464;
            k = G__13465;
            ks = G__13466;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__13463 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__13467__i = 0, G__13467__a = new Array(arguments.length - 2);
        while (G__13467__i < G__13467__a.length) {
          G__13467__a[G__13467__i] = arguments[G__13467__i + 2];
          ++G__13467__i;
        }
        ks = new cljs.core.IndexedSeq(G__13467__a, 0);
      }
      return G__13463__delegate.call(this, coll, k, ks);
    };
    G__13463.cljs$lang$maxFixedArity = 2;
    G__13463.cljs$lang$applyTo = function(arglist__13468) {
      var coll = cljs.core.first(arglist__13468);
      arglist__13468 = cljs.core.next(arglist__13468);
      var k = cljs.core.first(arglist__13468);
      var ks = cljs.core.rest(arglist__13468);
      return G__13463__delegate(coll, k, ks);
    };
    G__13463.cljs$core$IFn$_invoke$arity$variadic = G__13463__delegate;
    return G__13463;
  }();
  cljs$core$disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$disj__1.call(this, coll);
      case 2:
        return cljs$core$disj__2.call(this, coll, k);
      default:
        var G__13469 = null;
        if (arguments.length > 2) {
          var G__13470__i = 0, G__13470__a = new Array(arguments.length - 2);
          while (G__13470__i < G__13470__a.length) {
            G__13470__a[G__13470__i] = arguments[G__13470__i + 2];
            ++G__13470__i;
          }
          G__13469 = new cljs.core.IndexedSeq(G__13470__a, 0);
        }
        return cljs$core$disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, G__13469);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$disj.cljs$lang$maxFixedArity = 2;
  cljs$core$disj.cljs$lang$applyTo = cljs$core$disj__3.cljs$lang$applyTo;
  cljs$core$disj.cljs$core$IFn$_invoke$arity$1 = cljs$core$disj__1;
  cljs$core$disj.cljs$core$IFn$_invoke$arity$2 = cljs$core$disj__2;
  cljs$core$disj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$disj;
}();
cljs.core.empty_QMARK_ = function cljs$core$empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function cljs$core$coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__13472 = x;
    if (G__13472) {
      var bit__4796__auto__ = G__13472.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4796__auto__ || G__13472.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__13472.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__13472);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__13472);
    }
  }
};
cljs.core.set_QMARK_ = function cljs$core$set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__13474 = x;
    if (G__13474) {
      var bit__4796__auto__ = G__13474.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4796__auto__ || G__13474.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__13474.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__13474);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__13474);
    }
  }
};
cljs.core.associative_QMARK_ = function cljs$core$associative_QMARK_(x) {
  var G__13476 = x;
  if (G__13476) {
    var bit__4796__auto__ = G__13476.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4796__auto__ || G__13476.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__13476.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__13476);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__13476);
  }
};
cljs.core.sequential_QMARK_ = function cljs$core$sequential_QMARK_(x) {
  var G__13478 = x;
  if (G__13478) {
    var bit__4796__auto__ = G__13478.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4796__auto__ || G__13478.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__13478.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__13478);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__13478);
  }
};
cljs.core.sorted_QMARK_ = function cljs$core$sorted_QMARK_(x) {
  var G__13480 = x;
  if (G__13480) {
    var bit__4796__auto__ = G__13480.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4796__auto__ || G__13480.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__13480.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__13480);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__13480);
  }
};
cljs.core.reduceable_QMARK_ = function cljs$core$reduceable_QMARK_(x) {
  var G__13482 = x;
  if (G__13482) {
    var bit__4796__auto__ = G__13482.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4796__auto__ || G__13482.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__13482.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__13482);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__13482);
  }
};
cljs.core.map_QMARK_ = function cljs$core$map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__13484 = x;
    if (G__13484) {
      var bit__4796__auto__ = G__13484.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4796__auto__ || G__13484.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__13484.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__13484);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__13484);
    }
  }
};
cljs.core.vector_QMARK_ = function cljs$core$vector_QMARK_(x) {
  var G__13486 = x;
  if (G__13486) {
    var bit__4796__auto__ = G__13486.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4796__auto__ || G__13486.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__13486.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__13486);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__13486);
  }
};
cljs.core.chunked_seq_QMARK_ = function cljs$core$chunked_seq_QMARK_(x) {
  var G__13488 = x;
  if (G__13488) {
    var bit__4789__auto__ = G__13488.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4789__auto__ || G__13488.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var cljs$core$js_obj = null;
  var cljs$core$js_obj__0 = function() {
    var obj13494 = {};
    return obj13494;
  };
  var cljs$core$js_obj__1 = function() {
    var G__13497__delegate = function(keyvals) {
      var G__13495 = goog.object.create;
      var G__13496 = keyvals;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__13495, G__13496) : cljs.core.apply.call(null, G__13495, G__13496);
    };
    var G__13497 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        var G__13498__i = 0, G__13498__a = new Array(arguments.length - 0);
        while (G__13498__i < G__13498__a.length) {
          G__13498__a[G__13498__i] = arguments[G__13498__i + 0];
          ++G__13498__i;
        }
        keyvals = new cljs.core.IndexedSeq(G__13498__a, 0);
      }
      return G__13497__delegate.call(this, keyvals);
    };
    G__13497.cljs$lang$maxFixedArity = 0;
    G__13497.cljs$lang$applyTo = function(arglist__13499) {
      var keyvals = cljs.core.seq(arglist__13499);
      return G__13497__delegate(keyvals);
    };
    G__13497.cljs$core$IFn$_invoke$arity$variadic = G__13497__delegate;
    return G__13497;
  }();
  cljs$core$js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return cljs$core$js_obj__0.call(this);
      default:
        var G__13500 = null;
        if (arguments.length > 0) {
          var G__13501__i = 0, G__13501__a = new Array(arguments.length - 0);
          while (G__13501__i < G__13501__a.length) {
            G__13501__a[G__13501__i] = arguments[G__13501__i + 0];
            ++G__13501__i;
          }
          G__13500 = new cljs.core.IndexedSeq(G__13501__a, 0);
        }
        return cljs$core$js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__13500);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$js_obj.cljs$lang$maxFixedArity = 0;
  cljs$core$js_obj.cljs$lang$applyTo = cljs$core$js_obj__1.cljs$lang$applyTo;
  cljs$core$js_obj.cljs$core$IFn$_invoke$arity$0 = cljs$core$js_obj__0;
  cljs$core$js_obj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$js_obj;
}();
cljs.core.js_keys = function cljs$core$js_keys(obj) {
  var keys = [];
  var G__13504_13506 = obj;
  var G__13505_13507 = function(G__13504_13506, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__13504_13506, keys);
  goog.object.forEach(G__13504_13506, G__13505_13507);
  return keys;
};
cljs.core.js_delete = function cljs$core$js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function cljs$core$array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__13508 = i__$1 + 1;
      var G__13509 = j__$1 + 1;
      var G__13510 = len__$1 - 1;
      i__$1 = G__13508;
      j__$1 = G__13509;
      len__$1 = G__13510;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function cljs$core$array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__13511 = i__$1 - 1;
      var G__13512 = j__$1 - 1;
      var G__13513 = len__$1 - 1;
      i__$1 = G__13511;
      j__$1 = G__13512;
      len__$1 = G__13513;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj13515 = {};
  return obj13515;
}();
cljs.core.false_QMARK_ = function cljs$core$false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function cljs$core$true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function cljs$core$undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function cljs$core$seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__13517 = s;
    if (G__13517) {
      var bit__4796__auto__ = G__13517.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4796__auto__ || G__13517.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__13517.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__13517);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__13517);
    }
  }
};
cljs.core.seqable_QMARK_ = function cljs$core$seqable_QMARK_(s) {
  var G__13519 = s;
  if (G__13519) {
    var bit__4796__auto__ = G__13519.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4796__auto__ || G__13519.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__13519.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__13519);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__13519);
  }
};
cljs.core.boolean$ = function cljs$core$boolean(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function cljs$core$ifn_QMARK_(f) {
  var or__4122__auto__ = cljs.core.fn_QMARK_(f);
  if (or__4122__auto__) {
    return or__4122__auto__;
  } else {
    var G__13523 = f;
    if (G__13523) {
      var bit__4796__auto__ = G__13523.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4796__auto__ || G__13523.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__13523.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__13523);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__13523);
    }
  }
};
cljs.core.integer_QMARK_ = function cljs$core$integer_QMARK_(n) {
  return typeof n === "number" && cljs.core.not(function() {
    var G__13536 = n;
    return isNaN(G__13536);
  }()) && !(n === Infinity) && function() {
    var G__13537 = n;
    return parseFloat(G__13537);
  }() === function() {
    var G__13538 = n;
    var G__13539 = 10;
    return parseInt(G__13538, G__13539);
  }();
};
cljs.core.contains_QMARK_ = function cljs$core$contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function cljs$core$find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var cljs$core$distinct_QMARK_ = null;
  var cljs$core$distinct_QMARK___1 = function(x) {
    return true;
  };
  var cljs$core$distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
  };
  var cljs$core$distinct_QMARK___3 = function() {
    var G__13540__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first(xs);
          var etc = cljs.core.next(xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_(s, x__$1)) {
              return false;
            } else {
              var G__13541 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
              var G__13542 = etc;
              s = G__13541;
              xs = G__13542;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__13540 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__13543__i = 0, G__13543__a = new Array(arguments.length - 2);
        while (G__13543__i < G__13543__a.length) {
          G__13543__a[G__13543__i] = arguments[G__13543__i + 2];
          ++G__13543__i;
        }
        more = new cljs.core.IndexedSeq(G__13543__a, 0);
      }
      return G__13540__delegate.call(this, x, y, more);
    };
    G__13540.cljs$lang$maxFixedArity = 2;
    G__13540.cljs$lang$applyTo = function(arglist__13544) {
      var x = cljs.core.first(arglist__13544);
      arglist__13544 = cljs.core.next(arglist__13544);
      var y = cljs.core.first(arglist__13544);
      var more = cljs.core.rest(arglist__13544);
      return G__13540__delegate(x, y, more);
    };
    G__13540.cljs$core$IFn$_invoke$arity$variadic = G__13540__delegate;
    return G__13540;
  }();
  cljs$core$distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$distinct_QMARK___1.call(this, x);
      case 2:
        return cljs$core$distinct_QMARK___2.call(this, x, y);
      default:
        var G__13545 = null;
        if (arguments.length > 2) {
          var G__13546__i = 0, G__13546__a = new Array(arguments.length - 2);
          while (G__13546__i < G__13546__a.length) {
            G__13546__a[G__13546__i] = arguments[G__13546__i + 2];
            ++G__13546__i;
          }
          G__13545 = new cljs.core.IndexedSeq(G__13546__a, 0);
        }
        return cljs$core$distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__13545);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  cljs$core$distinct_QMARK_.cljs$lang$applyTo = cljs$core$distinct_QMARK___3.cljs$lang$applyTo;
  cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = cljs$core$distinct_QMARK___1;
  cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = cljs$core$distinct_QMARK___2;
  cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$distinct_QMARK_;
}();
cljs.core.compare = function cljs$core$compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type(x) === cljs.core.type(y)) {
          if (function() {
            var G__13550 = x;
            if (G__13550) {
              var bit__4789__auto__ = G__13550.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4789__auto__ || G__13550.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return x.cljs$core$IComparable$_compare$arity$2(null, y);
          } else {
            var G__13551 = x;
            var G__13552 = y;
            return goog.array.defaultCompare(G__13551, G__13552);
          }
        } else {
          throw new Error("compare on non-nil objects of different types");
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var cljs$core$compare_indexed = null;
  var cljs$core$compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count(xs);
    var yl = cljs.core.count(ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        return cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  };
  var cljs$core$compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
      if (d === 0 && n + 1 < len) {
        var G__13557 = xs;
        var G__13558 = ys;
        var G__13559 = len;
        var G__13560 = n + 1;
        xs = G__13557;
        ys = G__13558;
        len = G__13559;
        n = G__13560;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  cljs$core$compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return cljs$core$compare_indexed__2.call(this, xs, ys);
      case 4:
        return cljs$core$compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$compare_indexed__2;
  cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$4 = cljs$core$compare_indexed__4;
  return cljs$core$compare_indexed;
}();
cljs.core.fn__GT_comparator = function cljs$core$fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = function() {
        var G__13565 = x;
        var G__13566 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13565, G__13566) : f.call(null, G__13565, G__13566);
      }();
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(function() {
            var G__13567 = y;
            var G__13568 = x;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13567, G__13568) : f.call(null, G__13567, G__13568);
          }())) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var cljs$core$sort = null;
  var cljs$core$sort__1 = function(coll) {
    return cljs$core$sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
  };
  var cljs$core$sort__2 = function(comp, coll) {
    if (cljs.core.seq(coll)) {
      var a = function() {
        var G__13574 = coll;
        return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__13574) : cljs.core.to_array.call(null, G__13574);
      }();
      var G__13575_13577 = a;
      var G__13576_13578 = cljs.core.fn__GT_comparator(comp);
      goog.array.stableSort(G__13575_13577, G__13576_13578);
      return cljs.core.seq(a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  cljs$core$sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$sort__1.call(this, comp);
      case 2:
        return cljs$core$sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$sort.cljs$core$IFn$_invoke$arity$1 = cljs$core$sort__1;
  cljs$core$sort.cljs$core$IFn$_invoke$arity$2 = cljs$core$sort__2;
  return cljs$core$sort;
}();
cljs.core.sort_by = function() {
  var cljs$core$sort_by = null;
  var cljs$core$sort_by__2 = function(keyfn, coll) {
    return cljs$core$sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
  };
  var cljs$core$sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
      return cljs.core.fn__GT_comparator(comp).call(null, function() {
        var G__13584 = x;
        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__13584) : keyfn.call(null, G__13584);
      }(), function() {
        var G__13585 = y;
        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__13585) : keyfn.call(null, G__13585);
      }());
    }, coll);
  };
  cljs$core$sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return cljs$core$sort_by__2.call(this, keyfn, comp);
      case 3:
        return cljs$core$sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$sort_by.cljs$core$IFn$_invoke$arity$2 = cljs$core$sort_by__2;
  cljs$core$sort_by.cljs$core$IFn$_invoke$arity$3 = cljs$core$sort_by__3;
  return cljs$core$sort_by;
}();
cljs.core.seq_reduce = function() {
  var cljs$core$seq_reduce = null;
  var cljs$core$seq_reduce__2 = function(f, coll) {
    var temp__4124__auto__ = cljs.core.seq(coll);
    if (temp__4124__auto__) {
      var s = temp__4124__auto__;
      var G__13591 = f;
      var G__13592 = cljs.core.first(s);
      var G__13593 = cljs.core.next(s);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__13591, G__13592, G__13593) : cljs.core.reduce.call(null, G__13591, G__13592, G__13593);
    } else {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }
  };
  var cljs$core$seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq(coll);
    while (true) {
      if (coll__$1) {
        var nval = function() {
          var G__13594 = val__$1;
          var G__13595 = cljs.core.first(coll__$1);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13594, G__13595) : f.call(null, G__13594, G__13595);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__13596 = nval;
          var G__13597 = cljs.core.next(coll__$1);
          val__$1 = G__13596;
          coll__$1 = G__13597;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  cljs$core$seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return cljs$core$seq_reduce__2.call(this, f, val);
      case 3:
        return cljs$core$seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$seq_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$seq_reduce__2;
  cljs$core$seq_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$seq_reduce__3;
  return cljs$core$seq_reduce;
}();
cljs.core.shuffle = function cljs$core$shuffle(coll) {
  var a = function() {
    var G__13601 = coll;
    return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__13601) : cljs.core.to_array.call(null, G__13601);
  }();
  var G__13602_13604 = a;
  goog.array.shuffle(G__13602_13604);
  var G__13603 = a;
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__13603) : cljs.core.vec.call(null, G__13603);
};
cljs.core.reduce = function() {
  var cljs$core$reduce = null;
  var cljs$core$reduce__2 = function(f, coll) {
    if (function() {
      var G__13607 = coll;
      if (G__13607) {
        var bit__4789__auto__ = G__13607.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4789__auto__ || G__13607.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
            return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
          }
        }
      }
    }
  };
  var cljs$core$reduce__3 = function(f, val, coll) {
    if (function() {
      var G__13608 = coll;
      if (G__13608) {
        var bit__4789__auto__ = G__13608.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4789__auto__ || G__13608.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
            return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
          }
        }
      }
    }
  };
  cljs$core$reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return cljs$core$reduce__2.call(this, f, val);
      case 3:
        return cljs$core$reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$reduce__2;
  cljs$core$reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$reduce__3;
  return cljs$core$reduce;
}();
cljs.core.reduce_kv = function cljs$core$reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function cljs$core$identity(x) {
  return x;
};
cljs.core.completing = function() {
  var cljs$core$completing = null;
  var cljs$core$completing__1 = function(f) {
    return cljs$core$completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
  };
  var cljs$core$completing__2 = function(f, cf) {
    return function() {
      var G__13617 = null;
      var G__13617__0 = function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      };
      var G__13617__1 = function(x) {
        var G__13614 = x;
        return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__13614) : cf.call(null, G__13614);
      };
      var G__13617__2 = function(x, y) {
        var G__13615 = x;
        var G__13616 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13615, G__13616) : f.call(null, G__13615, G__13616);
      };
      G__13617 = function(x, y) {
        switch(arguments.length) {
          case 0:
            return G__13617__0.call(this);
          case 1:
            return G__13617__1.call(this, x);
          case 2:
            return G__13617__2.call(this, x, y);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13617.cljs$core$IFn$_invoke$arity$0 = G__13617__0;
      G__13617.cljs$core$IFn$_invoke$arity$1 = G__13617__1;
      G__13617.cljs$core$IFn$_invoke$arity$2 = G__13617__2;
      return G__13617;
    }();
  };
  cljs$core$completing = function(f, cf) {
    switch(arguments.length) {
      case 1:
        return cljs$core$completing__1.call(this, f);
      case 2:
        return cljs$core$completing__2.call(this, f, cf);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$completing.cljs$core$IFn$_invoke$arity$1 = cljs$core$completing__1;
  cljs$core$completing.cljs$core$IFn$_invoke$arity$2 = cljs$core$completing__2;
  return cljs$core$completing;
}();
cljs.core.transduce = function() {
  var cljs$core$transduce = null;
  var cljs$core$transduce__3 = function(xform, f, coll) {
    return cljs$core$transduce.cljs$core$IFn$_invoke$arity$4(xform, f, function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }(), coll);
  };
  var cljs$core$transduce__4 = function(xform, f, init, coll) {
    var f__$1 = function() {
      var G__13624 = f;
      return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__13624) : xform.call(null, G__13624);
    }();
    var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
    var G__13625 = ret;
    return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__13625) : f__$1.call(null, G__13625);
  };
  cljs$core$transduce = function(xform, f, init, coll) {
    switch(arguments.length) {
      case 3:
        return cljs$core$transduce__3.call(this, xform, f, init);
      case 4:
        return cljs$core$transduce__4.call(this, xform, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$transduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$transduce__3;
  cljs$core$transduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$transduce__4;
  return cljs$core$transduce;
}();
cljs.core._PLUS_ = function() {
  var cljs$core$_PLUS_ = null;
  var cljs$core$_PLUS___0 = function() {
    return 0;
  };
  var cljs$core$_PLUS___1 = function(x) {
    return x;
  };
  var cljs$core$_PLUS___2 = function(x, y) {
    return x + y;
  };
  var cljs$core$_PLUS___3 = function() {
    var G__13626__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_PLUS_, x + y, more);
    };
    var G__13626 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__13627__i = 0, G__13627__a = new Array(arguments.length - 2);
        while (G__13627__i < G__13627__a.length) {
          G__13627__a[G__13627__i] = arguments[G__13627__i + 2];
          ++G__13627__i;
        }
        more = new cljs.core.IndexedSeq(G__13627__a, 0);
      }
      return G__13626__delegate.call(this, x, y, more);
    };
    G__13626.cljs$lang$maxFixedArity = 2;
    G__13626.cljs$lang$applyTo = function(arglist__13628) {
      var x = cljs.core.first(arglist__13628);
      arglist__13628 = cljs.core.next(arglist__13628);
      var y = cljs.core.first(arglist__13628);
      var more = cljs.core.rest(arglist__13628);
      return G__13626__delegate(x, y, more);
    };
    G__13626.cljs$core$IFn$_invoke$arity$variadic = G__13626__delegate;
    return G__13626;
  }();
  cljs$core$_PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return cljs$core$_PLUS___0.call(this);
      case 1:
        return cljs$core$_PLUS___1.call(this, x);
      case 2:
        return cljs$core$_PLUS___2.call(this, x, y);
      default:
        var G__13629 = null;
        if (arguments.length > 2) {
          var G__13630__i = 0, G__13630__a = new Array(arguments.length - 2);
          while (G__13630__i < G__13630__a.length) {
            G__13630__a[G__13630__i] = arguments[G__13630__i + 2];
            ++G__13630__i;
          }
          G__13629 = new cljs.core.IndexedSeq(G__13630__a, 0);
        }
        return cljs$core$_PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__13629);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_PLUS_.cljs$lang$maxFixedArity = 2;
  cljs$core$_PLUS_.cljs$lang$applyTo = cljs$core$_PLUS___3.cljs$lang$applyTo;
  cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$0 = cljs$core$_PLUS___0;
  cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_PLUS___1;
  cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_PLUS___2;
  cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$_PLUS_;
}();
cljs.core._ = function() {
  var cljs$core$_ = null;
  var cljs$core$___1 = function(x) {
    return-x;
  };
  var cljs$core$___2 = function(x, y) {
    return x - y;
  };
  var cljs$core$___3 = function() {
    var G__13631__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_, x - y, more);
    };
    var G__13631 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__13632__i = 0, G__13632__a = new Array(arguments.length - 2);
        while (G__13632__i < G__13632__a.length) {
          G__13632__a[G__13632__i] = arguments[G__13632__i + 2];
          ++G__13632__i;
        }
        more = new cljs.core.IndexedSeq(G__13632__a, 0);
      }
      return G__13631__delegate.call(this, x, y, more);
    };
    G__13631.cljs$lang$maxFixedArity = 2;
    G__13631.cljs$lang$applyTo = function(arglist__13633) {
      var x = cljs.core.first(arglist__13633);
      arglist__13633 = cljs.core.next(arglist__13633);
      var y = cljs.core.first(arglist__13633);
      var more = cljs.core.rest(arglist__13633);
      return G__13631__delegate(x, y, more);
    };
    G__13631.cljs$core$IFn$_invoke$arity$variadic = G__13631__delegate;
    return G__13631;
  }();
  cljs$core$_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$___1.call(this, x);
      case 2:
        return cljs$core$___2.call(this, x, y);
      default:
        var G__13634 = null;
        if (arguments.length > 2) {
          var G__13635__i = 0, G__13635__a = new Array(arguments.length - 2);
          while (G__13635__i < G__13635__a.length) {
            G__13635__a[G__13635__i] = arguments[G__13635__i + 2];
            ++G__13635__i;
          }
          G__13634 = new cljs.core.IndexedSeq(G__13635__a, 0);
        }
        return cljs$core$___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__13634);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_.cljs$lang$maxFixedArity = 2;
  cljs$core$_.cljs$lang$applyTo = cljs$core$___3.cljs$lang$applyTo;
  cljs$core$_.cljs$core$IFn$_invoke$arity$1 = cljs$core$___1;
  cljs$core$_.cljs$core$IFn$_invoke$arity$2 = cljs$core$___2;
  cljs$core$_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$_;
}();
cljs.core._STAR_ = function() {
  var cljs$core$_STAR_ = null;
  var cljs$core$_STAR___0 = function() {
    return 1;
  };
  var cljs$core$_STAR___1 = function(x) {
    return x;
  };
  var cljs$core$_STAR___2 = function(x, y) {
    return x * y;
  };
  var cljs$core$_STAR___3 = function() {
    var G__13636__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_STAR_, x * y, more);
    };
    var G__13636 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__13637__i = 0, G__13637__a = new Array(arguments.length - 2);
        while (G__13637__i < G__13637__a.length) {
          G__13637__a[G__13637__i] = arguments[G__13637__i + 2];
          ++G__13637__i;
        }
        more = new cljs.core.IndexedSeq(G__13637__a, 0);
      }
      return G__13636__delegate.call(this, x, y, more);
    };
    G__13636.cljs$lang$maxFixedArity = 2;
    G__13636.cljs$lang$applyTo = function(arglist__13638) {
      var x = cljs.core.first(arglist__13638);
      arglist__13638 = cljs.core.next(arglist__13638);
      var y = cljs.core.first(arglist__13638);
      var more = cljs.core.rest(arglist__13638);
      return G__13636__delegate(x, y, more);
    };
    G__13636.cljs$core$IFn$_invoke$arity$variadic = G__13636__delegate;
    return G__13636;
  }();
  cljs$core$_STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return cljs$core$_STAR___0.call(this);
      case 1:
        return cljs$core$_STAR___1.call(this, x);
      case 2:
        return cljs$core$_STAR___2.call(this, x, y);
      default:
        var G__13639 = null;
        if (arguments.length > 2) {
          var G__13640__i = 0, G__13640__a = new Array(arguments.length - 2);
          while (G__13640__i < G__13640__a.length) {
            G__13640__a[G__13640__i] = arguments[G__13640__i + 2];
            ++G__13640__i;
          }
          G__13639 = new cljs.core.IndexedSeq(G__13640__a, 0);
        }
        return cljs$core$_STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__13639);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_STAR_.cljs$lang$maxFixedArity = 2;
  cljs$core$_STAR_.cljs$lang$applyTo = cljs$core$_STAR___3.cljs$lang$applyTo;
  cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$0 = cljs$core$_STAR___0;
  cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_STAR___1;
  cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_STAR___2;
  cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$_STAR_;
}();
cljs.core._SLASH_ = function() {
  var cljs$core$_SLASH_ = null;
  var cljs$core$_SLASH___1 = function(x) {
    return cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2(1, x);
  };
  var cljs$core$_SLASH___2 = function(x, y) {
    return x / y;
  };
  var cljs$core$_SLASH___3 = function() {
    var G__13645__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_SLASH_, cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2(x, y), more);
    };
    var G__13645 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__13646__i = 0, G__13646__a = new Array(arguments.length - 2);
        while (G__13646__i < G__13646__a.length) {
          G__13646__a[G__13646__i] = arguments[G__13646__i + 2];
          ++G__13646__i;
        }
        more = new cljs.core.IndexedSeq(G__13646__a, 0);
      }
      return G__13645__delegate.call(this, x, y, more);
    };
    G__13645.cljs$lang$maxFixedArity = 2;
    G__13645.cljs$lang$applyTo = function(arglist__13647) {
      var x = cljs.core.first(arglist__13647);
      arglist__13647 = cljs.core.next(arglist__13647);
      var y = cljs.core.first(arglist__13647);
      var more = cljs.core.rest(arglist__13647);
      return G__13645__delegate(x, y, more);
    };
    G__13645.cljs$core$IFn$_invoke$arity$variadic = G__13645__delegate;
    return G__13645;
  }();
  cljs$core$_SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$_SLASH___1.call(this, x);
      case 2:
        return cljs$core$_SLASH___2.call(this, x, y);
      default:
        var G__13648 = null;
        if (arguments.length > 2) {
          var G__13649__i = 0, G__13649__a = new Array(arguments.length - 2);
          while (G__13649__i < G__13649__a.length) {
            G__13649__a[G__13649__i] = arguments[G__13649__i + 2];
            ++G__13649__i;
          }
          G__13648 = new cljs.core.IndexedSeq(G__13649__a, 0);
        }
        return cljs$core$_SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__13648);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_SLASH_.cljs$lang$maxFixedArity = 2;
  cljs$core$_SLASH_.cljs$lang$applyTo = cljs$core$_SLASH___3.cljs$lang$applyTo;
  cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_SLASH___1;
  cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_SLASH___2;
  cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$_SLASH_;
}();
cljs.core._LT_ = function() {
  var cljs$core$_LT_ = null;
  var cljs$core$_LT___1 = function(x) {
    return true;
  };
  var cljs$core$_LT___2 = function(x, y) {
    return x < y;
  };
  var cljs$core$_LT___3 = function() {
    var G__13650__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next(more)) {
            var G__13651 = y;
            var G__13652 = cljs.core.first(more);
            var G__13653 = cljs.core.next(more);
            x = G__13651;
            y = G__13652;
            more = G__13653;
            continue;
          } else {
            return y < cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__13650 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__13654__i = 0, G__13654__a = new Array(arguments.length - 2);
        while (G__13654__i < G__13654__a.length) {
          G__13654__a[G__13654__i] = arguments[G__13654__i + 2];
          ++G__13654__i;
        }
        more = new cljs.core.IndexedSeq(G__13654__a, 0);
      }
      return G__13650__delegate.call(this, x, y, more);
    };
    G__13650.cljs$lang$maxFixedArity = 2;
    G__13650.cljs$lang$applyTo = function(arglist__13655) {
      var x = cljs.core.first(arglist__13655);
      arglist__13655 = cljs.core.next(arglist__13655);
      var y = cljs.core.first(arglist__13655);
      var more = cljs.core.rest(arglist__13655);
      return G__13650__delegate(x, y, more);
    };
    G__13650.cljs$core$IFn$_invoke$arity$variadic = G__13650__delegate;
    return G__13650;
  }();
  cljs$core$_LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$_LT___1.call(this, x);
      case 2:
        return cljs$core$_LT___2.call(this, x, y);
      default:
        var G__13656 = null;
        if (arguments.length > 2) {
          var G__13657__i = 0, G__13657__a = new Array(arguments.length - 2);
          while (G__13657__i < G__13657__a.length) {
            G__13657__a[G__13657__i] = arguments[G__13657__i + 2];
            ++G__13657__i;
          }
          G__13656 = new cljs.core.IndexedSeq(G__13657__a, 0);
        }
        return cljs$core$_LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__13656);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_LT_.cljs$lang$maxFixedArity = 2;
  cljs$core$_LT_.cljs$lang$applyTo = cljs$core$_LT___3.cljs$lang$applyTo;
  cljs$core$_LT_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_LT___1;
  cljs$core$_LT_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_LT___2;
  cljs$core$_LT_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$_LT_;
}();
cljs.core._LT__EQ_ = function() {
  var cljs$core$_LT__EQ_ = null;
  var cljs$core$_LT__EQ___1 = function(x) {
    return true;
  };
  var cljs$core$_LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var cljs$core$_LT__EQ___3 = function() {
    var G__13658__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next(more)) {
            var G__13659 = y;
            var G__13660 = cljs.core.first(more);
            var G__13661 = cljs.core.next(more);
            x = G__13659;
            y = G__13660;
            more = G__13661;
            continue;
          } else {
            return y <= cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__13658 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__13662__i = 0, G__13662__a = new Array(arguments.length - 2);
        while (G__13662__i < G__13662__a.length) {
          G__13662__a[G__13662__i] = arguments[G__13662__i + 2];
          ++G__13662__i;
        }
        more = new cljs.core.IndexedSeq(G__13662__a, 0);
      }
      return G__13658__delegate.call(this, x, y, more);
    };
    G__13658.cljs$lang$maxFixedArity = 2;
    G__13658.cljs$lang$applyTo = function(arglist__13663) {
      var x = cljs.core.first(arglist__13663);
      arglist__13663 = cljs.core.next(arglist__13663);
      var y = cljs.core.first(arglist__13663);
      var more = cljs.core.rest(arglist__13663);
      return G__13658__delegate(x, y, more);
    };
    G__13658.cljs$core$IFn$_invoke$arity$variadic = G__13658__delegate;
    return G__13658;
  }();
  cljs$core$_LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$_LT__EQ___1.call(this, x);
      case 2:
        return cljs$core$_LT__EQ___2.call(this, x, y);
      default:
        var G__13664 = null;
        if (arguments.length > 2) {
          var G__13665__i = 0, G__13665__a = new Array(arguments.length - 2);
          while (G__13665__i < G__13665__a.length) {
            G__13665__a[G__13665__i] = arguments[G__13665__i + 2];
            ++G__13665__i;
          }
          G__13664 = new cljs.core.IndexedSeq(G__13665__a, 0);
        }
        return cljs$core$_LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__13664);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_LT__EQ_.cljs$lang$maxFixedArity = 2;
  cljs$core$_LT__EQ_.cljs$lang$applyTo = cljs$core$_LT__EQ___3.cljs$lang$applyTo;
  cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_LT__EQ___1;
  cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_LT__EQ___2;
  cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$_LT__EQ_;
}();
cljs.core._GT_ = function() {
  var cljs$core$_GT_ = null;
  var cljs$core$_GT___1 = function(x) {
    return true;
  };
  var cljs$core$_GT___2 = function(x, y) {
    return x > y;
  };
  var cljs$core$_GT___3 = function() {
    var G__13666__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next(more)) {
            var G__13667 = y;
            var G__13668 = cljs.core.first(more);
            var G__13669 = cljs.core.next(more);
            x = G__13667;
            y = G__13668;
            more = G__13669;
            continue;
          } else {
            return y > cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__13666 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__13670__i = 0, G__13670__a = new Array(arguments.length - 2);
        while (G__13670__i < G__13670__a.length) {
          G__13670__a[G__13670__i] = arguments[G__13670__i + 2];
          ++G__13670__i;
        }
        more = new cljs.core.IndexedSeq(G__13670__a, 0);
      }
      return G__13666__delegate.call(this, x, y, more);
    };
    G__13666.cljs$lang$maxFixedArity = 2;
    G__13666.cljs$lang$applyTo = function(arglist__13671) {
      var x = cljs.core.first(arglist__13671);
      arglist__13671 = cljs.core.next(arglist__13671);
      var y = cljs.core.first(arglist__13671);
      var more = cljs.core.rest(arglist__13671);
      return G__13666__delegate(x, y, more);
    };
    G__13666.cljs$core$IFn$_invoke$arity$variadic = G__13666__delegate;
    return G__13666;
  }();
  cljs$core$_GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$_GT___1.call(this, x);
      case 2:
        return cljs$core$_GT___2.call(this, x, y);
      default:
        var G__13672 = null;
        if (arguments.length > 2) {
          var G__13673__i = 0, G__13673__a = new Array(arguments.length - 2);
          while (G__13673__i < G__13673__a.length) {
            G__13673__a[G__13673__i] = arguments[G__13673__i + 2];
            ++G__13673__i;
          }
          G__13672 = new cljs.core.IndexedSeq(G__13673__a, 0);
        }
        return cljs$core$_GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__13672);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_GT_.cljs$lang$maxFixedArity = 2;
  cljs$core$_GT_.cljs$lang$applyTo = cljs$core$_GT___3.cljs$lang$applyTo;
  cljs$core$_GT_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_GT___1;
  cljs$core$_GT_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_GT___2;
  cljs$core$_GT_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$_GT_;
}();
cljs.core._GT__EQ_ = function() {
  var cljs$core$_GT__EQ_ = null;
  var cljs$core$_GT__EQ___1 = function(x) {
    return true;
  };
  var cljs$core$_GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var cljs$core$_GT__EQ___3 = function() {
    var G__13674__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next(more)) {
            var G__13675 = y;
            var G__13676 = cljs.core.first(more);
            var G__13677 = cljs.core.next(more);
            x = G__13675;
            y = G__13676;
            more = G__13677;
            continue;
          } else {
            return y >= cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__13674 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__13678__i = 0, G__13678__a = new Array(arguments.length - 2);
        while (G__13678__i < G__13678__a.length) {
          G__13678__a[G__13678__i] = arguments[G__13678__i + 2];
          ++G__13678__i;
        }
        more = new cljs.core.IndexedSeq(G__13678__a, 0);
      }
      return G__13674__delegate.call(this, x, y, more);
    };
    G__13674.cljs$lang$maxFixedArity = 2;
    G__13674.cljs$lang$applyTo = function(arglist__13679) {
      var x = cljs.core.first(arglist__13679);
      arglist__13679 = cljs.core.next(arglist__13679);
      var y = cljs.core.first(arglist__13679);
      var more = cljs.core.rest(arglist__13679);
      return G__13674__delegate(x, y, more);
    };
    G__13674.cljs$core$IFn$_invoke$arity$variadic = G__13674__delegate;
    return G__13674;
  }();
  cljs$core$_GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$_GT__EQ___1.call(this, x);
      case 2:
        return cljs$core$_GT__EQ___2.call(this, x, y);
      default:
        var G__13680 = null;
        if (arguments.length > 2) {
          var G__13681__i = 0, G__13681__a = new Array(arguments.length - 2);
          while (G__13681__i < G__13681__a.length) {
            G__13681__a[G__13681__i] = arguments[G__13681__i + 2];
            ++G__13681__i;
          }
          G__13680 = new cljs.core.IndexedSeq(G__13681__a, 0);
        }
        return cljs$core$_GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__13680);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_GT__EQ_.cljs$lang$maxFixedArity = 2;
  cljs$core$_GT__EQ_.cljs$lang$applyTo = cljs$core$_GT__EQ___3.cljs$lang$applyTo;
  cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_GT__EQ___1;
  cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_GT__EQ___2;
  cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$_GT__EQ_;
}();
cljs.core.dec = function cljs$core$dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var cljs$core$max = null;
  var cljs$core$max__1 = function(x) {
    return x;
  };
  var cljs$core$max__2 = function(x, y) {
    var x__4434__auto__ = x;
    var y__4435__auto__ = y;
    return x__4434__auto__ > y__4435__auto__ ? x__4434__auto__ : y__4435__auto__;
  };
  var cljs$core$max__3 = function() {
    var G__13682__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$max, function() {
        var x__4434__auto__ = x;
        var y__4435__auto__ = y;
        return x__4434__auto__ > y__4435__auto__ ? x__4434__auto__ : y__4435__auto__;
      }(), more);
    };
    var G__13682 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__13683__i = 0, G__13683__a = new Array(arguments.length - 2);
        while (G__13683__i < G__13683__a.length) {
          G__13683__a[G__13683__i] = arguments[G__13683__i + 2];
          ++G__13683__i;
        }
        more = new cljs.core.IndexedSeq(G__13683__a, 0);
      }
      return G__13682__delegate.call(this, x, y, more);
    };
    G__13682.cljs$lang$maxFixedArity = 2;
    G__13682.cljs$lang$applyTo = function(arglist__13684) {
      var x = cljs.core.first(arglist__13684);
      arglist__13684 = cljs.core.next(arglist__13684);
      var y = cljs.core.first(arglist__13684);
      var more = cljs.core.rest(arglist__13684);
      return G__13682__delegate(x, y, more);
    };
    G__13682.cljs$core$IFn$_invoke$arity$variadic = G__13682__delegate;
    return G__13682;
  }();
  cljs$core$max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$max__1.call(this, x);
      case 2:
        return cljs$core$max__2.call(this, x, y);
      default:
        var G__13685 = null;
        if (arguments.length > 2) {
          var G__13686__i = 0, G__13686__a = new Array(arguments.length - 2);
          while (G__13686__i < G__13686__a.length) {
            G__13686__a[G__13686__i] = arguments[G__13686__i + 2];
            ++G__13686__i;
          }
          G__13685 = new cljs.core.IndexedSeq(G__13686__a, 0);
        }
        return cljs$core$max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__13685);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$max.cljs$lang$maxFixedArity = 2;
  cljs$core$max.cljs$lang$applyTo = cljs$core$max__3.cljs$lang$applyTo;
  cljs$core$max.cljs$core$IFn$_invoke$arity$1 = cljs$core$max__1;
  cljs$core$max.cljs$core$IFn$_invoke$arity$2 = cljs$core$max__2;
  cljs$core$max.cljs$core$IFn$_invoke$arity$variadic = cljs$core$max__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$max;
}();
cljs.core.min = function() {
  var cljs$core$min = null;
  var cljs$core$min__1 = function(x) {
    return x;
  };
  var cljs$core$min__2 = function(x, y) {
    var x__4441__auto__ = x;
    var y__4442__auto__ = y;
    return x__4441__auto__ < y__4442__auto__ ? x__4441__auto__ : y__4442__auto__;
  };
  var cljs$core$min__3 = function() {
    var G__13687__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$min, function() {
        var x__4441__auto__ = x;
        var y__4442__auto__ = y;
        return x__4441__auto__ < y__4442__auto__ ? x__4441__auto__ : y__4442__auto__;
      }(), more);
    };
    var G__13687 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__13688__i = 0, G__13688__a = new Array(arguments.length - 2);
        while (G__13688__i < G__13688__a.length) {
          G__13688__a[G__13688__i] = arguments[G__13688__i + 2];
          ++G__13688__i;
        }
        more = new cljs.core.IndexedSeq(G__13688__a, 0);
      }
      return G__13687__delegate.call(this, x, y, more);
    };
    G__13687.cljs$lang$maxFixedArity = 2;
    G__13687.cljs$lang$applyTo = function(arglist__13689) {
      var x = cljs.core.first(arglist__13689);
      arglist__13689 = cljs.core.next(arglist__13689);
      var y = cljs.core.first(arglist__13689);
      var more = cljs.core.rest(arglist__13689);
      return G__13687__delegate(x, y, more);
    };
    G__13687.cljs$core$IFn$_invoke$arity$variadic = G__13687__delegate;
    return G__13687;
  }();
  cljs$core$min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$min__1.call(this, x);
      case 2:
        return cljs$core$min__2.call(this, x, y);
      default:
        var G__13690 = null;
        if (arguments.length > 2) {
          var G__13691__i = 0, G__13691__a = new Array(arguments.length - 2);
          while (G__13691__i < G__13691__a.length) {
            G__13691__a[G__13691__i] = arguments[G__13691__i + 2];
            ++G__13691__i;
          }
          G__13690 = new cljs.core.IndexedSeq(G__13691__a, 0);
        }
        return cljs$core$min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__13690);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$min.cljs$lang$maxFixedArity = 2;
  cljs$core$min.cljs$lang$applyTo = cljs$core$min__3.cljs$lang$applyTo;
  cljs$core$min.cljs$core$IFn$_invoke$arity$1 = cljs$core$min__1;
  cljs$core$min.cljs$core$IFn$_invoke$arity$2 = cljs$core$min__2;
  cljs$core$min.cljs$core$IFn$_invoke$arity$variadic = cljs$core$min__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$min;
}();
cljs.core.byte$ = function cljs$core$byte(x) {
  return x;
};
cljs.core.char$ = function cljs$core$char(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function cljs$core$short(x) {
  return x;
};
cljs.core.float$ = function cljs$core$float(x) {
  return x;
};
cljs.core.double$ = function cljs$core$double(x) {
  return x;
};
cljs.core.unchecked_byte = function cljs$core$unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function cljs$core$unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function cljs$core$unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function cljs$core$unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function cljs$core$unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var cljs$core$unchecked_add = null;
  var cljs$core$unchecked_add__0 = function() {
    return 0;
  };
  var cljs$core$unchecked_add__1 = function(x) {
    return x;
  };
  var cljs$core$unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var cljs$core$unchecked_add__3 = function() {
    var G__13692__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_add, x + y, more);
    };
    var G__13692 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__13693__i = 0, G__13693__a = new Array(arguments.length - 2);
        while (G__13693__i < G__13693__a.length) {
          G__13693__a[G__13693__i] = arguments[G__13693__i + 2];
          ++G__13693__i;
        }
        more = new cljs.core.IndexedSeq(G__13693__a, 0);
      }
      return G__13692__delegate.call(this, x, y, more);
    };
    G__13692.cljs$lang$maxFixedArity = 2;
    G__13692.cljs$lang$applyTo = function(arglist__13694) {
      var x = cljs.core.first(arglist__13694);
      arglist__13694 = cljs.core.next(arglist__13694);
      var y = cljs.core.first(arglist__13694);
      var more = cljs.core.rest(arglist__13694);
      return G__13692__delegate(x, y, more);
    };
    G__13692.cljs$core$IFn$_invoke$arity$variadic = G__13692__delegate;
    return G__13692;
  }();
  cljs$core$unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return cljs$core$unchecked_add__0.call(this);
      case 1:
        return cljs$core$unchecked_add__1.call(this, x);
      case 2:
        return cljs$core$unchecked_add__2.call(this, x, y);
      default:
        var G__13695 = null;
        if (arguments.length > 2) {
          var G__13696__i = 0, G__13696__a = new Array(arguments.length - 2);
          while (G__13696__i < G__13696__a.length) {
            G__13696__a[G__13696__i] = arguments[G__13696__i + 2];
            ++G__13696__i;
          }
          G__13695 = new cljs.core.IndexedSeq(G__13696__a, 0);
        }
        return cljs$core$unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__13695);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$unchecked_add.cljs$lang$maxFixedArity = 2;
  cljs$core$unchecked_add.cljs$lang$applyTo = cljs$core$unchecked_add__3.cljs$lang$applyTo;
  cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_add__0;
  cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_add__1;
  cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_add__2;
  cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var cljs$core$unchecked_add_int = null;
  var cljs$core$unchecked_add_int__0 = function() {
    return 0;
  };
  var cljs$core$unchecked_add_int__1 = function(x) {
    return x;
  };
  var cljs$core$unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var cljs$core$unchecked_add_int__3 = function() {
    var G__13697__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_add_int, x + y, more);
    };
    var G__13697 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__13698__i = 0, G__13698__a = new Array(arguments.length - 2);
        while (G__13698__i < G__13698__a.length) {
          G__13698__a[G__13698__i] = arguments[G__13698__i + 2];
          ++G__13698__i;
        }
        more = new cljs.core.IndexedSeq(G__13698__a, 0);
      }
      return G__13697__delegate.call(this, x, y, more);
    };
    G__13697.cljs$lang$maxFixedArity = 2;
    G__13697.cljs$lang$applyTo = function(arglist__13699) {
      var x = cljs.core.first(arglist__13699);
      arglist__13699 = cljs.core.next(arglist__13699);
      var y = cljs.core.first(arglist__13699);
      var more = cljs.core.rest(arglist__13699);
      return G__13697__delegate(x, y, more);
    };
    G__13697.cljs$core$IFn$_invoke$arity$variadic = G__13697__delegate;
    return G__13697;
  }();
  cljs$core$unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return cljs$core$unchecked_add_int__0.call(this);
      case 1:
        return cljs$core$unchecked_add_int__1.call(this, x);
      case 2:
        return cljs$core$unchecked_add_int__2.call(this, x, y);
      default:
        var G__13700 = null;
        if (arguments.length > 2) {
          var G__13701__i = 0, G__13701__a = new Array(arguments.length - 2);
          while (G__13701__i < G__13701__a.length) {
            G__13701__a[G__13701__i] = arguments[G__13701__i + 2];
            ++G__13701__i;
          }
          G__13700 = new cljs.core.IndexedSeq(G__13701__a, 0);
        }
        return cljs$core$unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__13700);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$unchecked_add_int.cljs$lang$maxFixedArity = 2;
  cljs$core$unchecked_add_int.cljs$lang$applyTo = cljs$core$unchecked_add_int__3.cljs$lang$applyTo;
  cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_add_int__0;
  cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_add_int__1;
  cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_add_int__2;
  cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$unchecked_add_int;
}();
cljs.core.unchecked_dec = function cljs$core$unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function cljs$core$unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var cljs$core$unchecked_divide_int = null;
  var cljs$core$unchecked_divide_int__1 = function(x) {
    return cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(1, x);
  };
  var cljs$core$unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var cljs$core$unchecked_divide_int__3 = function() {
    var G__13706__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_divide_int, cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x, y), more);
    };
    var G__13706 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__13707__i = 0, G__13707__a = new Array(arguments.length - 2);
        while (G__13707__i < G__13707__a.length) {
          G__13707__a[G__13707__i] = arguments[G__13707__i + 2];
          ++G__13707__i;
        }
        more = new cljs.core.IndexedSeq(G__13707__a, 0);
      }
      return G__13706__delegate.call(this, x, y, more);
    };
    G__13706.cljs$lang$maxFixedArity = 2;
    G__13706.cljs$lang$applyTo = function(arglist__13708) {
      var x = cljs.core.first(arglist__13708);
      arglist__13708 = cljs.core.next(arglist__13708);
      var y = cljs.core.first(arglist__13708);
      var more = cljs.core.rest(arglist__13708);
      return G__13706__delegate(x, y, more);
    };
    G__13706.cljs$core$IFn$_invoke$arity$variadic = G__13706__delegate;
    return G__13706;
  }();
  cljs$core$unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$unchecked_divide_int__1.call(this, x);
      case 2:
        return cljs$core$unchecked_divide_int__2.call(this, x, y);
      default:
        var G__13709 = null;
        if (arguments.length > 2) {
          var G__13710__i = 0, G__13710__a = new Array(arguments.length - 2);
          while (G__13710__i < G__13710__a.length) {
            G__13710__a[G__13710__i] = arguments[G__13710__i + 2];
            ++G__13710__i;
          }
          G__13709 = new cljs.core.IndexedSeq(G__13710__a, 0);
        }
        return cljs$core$unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__13709);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  cljs$core$unchecked_divide_int.cljs$lang$applyTo = cljs$core$unchecked_divide_int__3.cljs$lang$applyTo;
  cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_divide_int__1;
  cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_divide_int__2;
  cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$unchecked_divide_int;
}();
cljs.core.unchecked_inc = function cljs$core$unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function cljs$core$unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var cljs$core$unchecked_multiply = null;
  var cljs$core$unchecked_multiply__0 = function() {
    return 1;
  };
  var cljs$core$unchecked_multiply__1 = function(x) {
    return x;
  };
  var cljs$core$unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var cljs$core$unchecked_multiply__3 = function() {
    var G__13711__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_multiply, x * y, more);
    };
    var G__13711 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__13712__i = 0, G__13712__a = new Array(arguments.length - 2);
        while (G__13712__i < G__13712__a.length) {
          G__13712__a[G__13712__i] = arguments[G__13712__i + 2];
          ++G__13712__i;
        }
        more = new cljs.core.IndexedSeq(G__13712__a, 0);
      }
      return G__13711__delegate.call(this, x, y, more);
    };
    G__13711.cljs$lang$maxFixedArity = 2;
    G__13711.cljs$lang$applyTo = function(arglist__13713) {
      var x = cljs.core.first(arglist__13713);
      arglist__13713 = cljs.core.next(arglist__13713);
      var y = cljs.core.first(arglist__13713);
      var more = cljs.core.rest(arglist__13713);
      return G__13711__delegate(x, y, more);
    };
    G__13711.cljs$core$IFn$_invoke$arity$variadic = G__13711__delegate;
    return G__13711;
  }();
  cljs$core$unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return cljs$core$unchecked_multiply__0.call(this);
      case 1:
        return cljs$core$unchecked_multiply__1.call(this, x);
      case 2:
        return cljs$core$unchecked_multiply__2.call(this, x, y);
      default:
        var G__13714 = null;
        if (arguments.length > 2) {
          var G__13715__i = 0, G__13715__a = new Array(arguments.length - 2);
          while (G__13715__i < G__13715__a.length) {
            G__13715__a[G__13715__i] = arguments[G__13715__i + 2];
            ++G__13715__i;
          }
          G__13714 = new cljs.core.IndexedSeq(G__13715__a, 0);
        }
        return cljs$core$unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__13714);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$unchecked_multiply.cljs$lang$maxFixedArity = 2;
  cljs$core$unchecked_multiply.cljs$lang$applyTo = cljs$core$unchecked_multiply__3.cljs$lang$applyTo;
  cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_multiply__0;
  cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_multiply__1;
  cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_multiply__2;
  cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var cljs$core$unchecked_multiply_int = null;
  var cljs$core$unchecked_multiply_int__0 = function() {
    return 1;
  };
  var cljs$core$unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var cljs$core$unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var cljs$core$unchecked_multiply_int__3 = function() {
    var G__13716__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_multiply_int, x * y, more);
    };
    var G__13716 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__13717__i = 0, G__13717__a = new Array(arguments.length - 2);
        while (G__13717__i < G__13717__a.length) {
          G__13717__a[G__13717__i] = arguments[G__13717__i + 2];
          ++G__13717__i;
        }
        more = new cljs.core.IndexedSeq(G__13717__a, 0);
      }
      return G__13716__delegate.call(this, x, y, more);
    };
    G__13716.cljs$lang$maxFixedArity = 2;
    G__13716.cljs$lang$applyTo = function(arglist__13718) {
      var x = cljs.core.first(arglist__13718);
      arglist__13718 = cljs.core.next(arglist__13718);
      var y = cljs.core.first(arglist__13718);
      var more = cljs.core.rest(arglist__13718);
      return G__13716__delegate(x, y, more);
    };
    G__13716.cljs$core$IFn$_invoke$arity$variadic = G__13716__delegate;
    return G__13716;
  }();
  cljs$core$unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return cljs$core$unchecked_multiply_int__0.call(this);
      case 1:
        return cljs$core$unchecked_multiply_int__1.call(this, x);
      case 2:
        return cljs$core$unchecked_multiply_int__2.call(this, x, y);
      default:
        var G__13719 = null;
        if (arguments.length > 2) {
          var G__13720__i = 0, G__13720__a = new Array(arguments.length - 2);
          while (G__13720__i < G__13720__a.length) {
            G__13720__a[G__13720__i] = arguments[G__13720__i + 2];
            ++G__13720__i;
          }
          G__13719 = new cljs.core.IndexedSeq(G__13720__a, 0);
        }
        return cljs$core$unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__13719);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  cljs$core$unchecked_multiply_int.cljs$lang$applyTo = cljs$core$unchecked_multiply_int__3.cljs$lang$applyTo;
  cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_multiply_int__0;
  cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_multiply_int__1;
  cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_multiply_int__2;
  cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function cljs$core$unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function cljs$core$unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function cljs$core$unchecked_remainder_int(x, n) {
  var G__13723 = x;
  var G__13724 = n;
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__13723, G__13724) : cljs.core.mod.call(null, G__13723, G__13724);
};
cljs.core.unchecked_subtract = function() {
  var cljs$core$unchecked_subtract = null;
  var cljs$core$unchecked_subtract__1 = function(x) {
    return-x;
  };
  var cljs$core$unchecked_subtract__2 = function(x, y) {
    return x - y;
  };
  var cljs$core$unchecked_subtract__3 = function() {
    var G__13725__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_subtract, x - y, more);
    };
    var G__13725 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__13726__i = 0, G__13726__a = new Array(arguments.length - 2);
        while (G__13726__i < G__13726__a.length) {
          G__13726__a[G__13726__i] = arguments[G__13726__i + 2];
          ++G__13726__i;
        }
        more = new cljs.core.IndexedSeq(G__13726__a, 0);
      }
      return G__13725__delegate.call(this, x, y, more);
    };
    G__13725.cljs$lang$maxFixedArity = 2;
    G__13725.cljs$lang$applyTo = function(arglist__13727) {
      var x = cljs.core.first(arglist__13727);
      arglist__13727 = cljs.core.next(arglist__13727);
      var y = cljs.core.first(arglist__13727);
      var more = cljs.core.rest(arglist__13727);
      return G__13725__delegate(x, y, more);
    };
    G__13725.cljs$core$IFn$_invoke$arity$variadic = G__13725__delegate;
    return G__13725;
  }();
  cljs$core$unchecked_subtract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$unchecked_subtract__1.call(this, x);
      case 2:
        return cljs$core$unchecked_subtract__2.call(this, x, y);
      default:
        var G__13728 = null;
        if (arguments.length > 2) {
          var G__13729__i = 0, G__13729__a = new Array(arguments.length - 2);
          while (G__13729__i < G__13729__a.length) {
            G__13729__a[G__13729__i] = arguments[G__13729__i + 2];
            ++G__13729__i;
          }
          G__13728 = new cljs.core.IndexedSeq(G__13729__a, 0);
        }
        return cljs$core$unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__13728);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$unchecked_subtract.cljs$lang$maxFixedArity = 2;
  cljs$core$unchecked_subtract.cljs$lang$applyTo = cljs$core$unchecked_subtract__3.cljs$lang$applyTo;
  cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_subtract__1;
  cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_subtract__2;
  cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$unchecked_subtract;
}();
cljs.core.unchecked_subtract_int = function() {
  var cljs$core$unchecked_subtract_int = null;
  var cljs$core$unchecked_subtract_int__1 = function(x) {
    return-x;
  };
  var cljs$core$unchecked_subtract_int__2 = function(x, y) {
    return x - y;
  };
  var cljs$core$unchecked_subtract_int__3 = function() {
    var G__13730__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_subtract_int, x - y, more);
    };
    var G__13730 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__13731__i = 0, G__13731__a = new Array(arguments.length - 2);
        while (G__13731__i < G__13731__a.length) {
          G__13731__a[G__13731__i] = arguments[G__13731__i + 2];
          ++G__13731__i;
        }
        more = new cljs.core.IndexedSeq(G__13731__a, 0);
      }
      return G__13730__delegate.call(this, x, y, more);
    };
    G__13730.cljs$lang$maxFixedArity = 2;
    G__13730.cljs$lang$applyTo = function(arglist__13732) {
      var x = cljs.core.first(arglist__13732);
      arglist__13732 = cljs.core.next(arglist__13732);
      var y = cljs.core.first(arglist__13732);
      var more = cljs.core.rest(arglist__13732);
      return G__13730__delegate(x, y, more);
    };
    G__13730.cljs$core$IFn$_invoke$arity$variadic = G__13730__delegate;
    return G__13730;
  }();
  cljs$core$unchecked_subtract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$unchecked_subtract_int__1.call(this, x);
      case 2:
        return cljs$core$unchecked_subtract_int__2.call(this, x, y);
      default:
        var G__13733 = null;
        if (arguments.length > 2) {
          var G__13734__i = 0, G__13734__a = new Array(arguments.length - 2);
          while (G__13734__i < G__13734__a.length) {
            G__13734__a[G__13734__i] = arguments[G__13734__i + 2];
            ++G__13734__i;
          }
          G__13733 = new cljs.core.IndexedSeq(G__13734__a, 0);
        }
        return cljs$core$unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__13733);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
  cljs$core$unchecked_subtract_int.cljs$lang$applyTo = cljs$core$unchecked_subtract_int__3.cljs$lang$applyTo;
  cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_subtract_int__1;
  cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_subtract_int__2;
  cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$unchecked_subtract_int;
}();
cljs.core.fix = function cljs$core$fix(q) {
  if (q >= 0) {
    var G__13737 = q;
    return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__13737) : Math.floor.call(null, G__13737);
  } else {
    var G__13738 = q;
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__13738) : Math.ceil.call(null, G__13738);
  }
};
cljs.core.int$ = function cljs$core$int(x) {
  return x | 0;
};
cljs.core.unchecked_int = function cljs$core$unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function cljs$core$long(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function cljs$core$unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function cljs$core$booleans(x) {
  return x;
};
cljs.core.bytes = function cljs$core$bytes(x) {
  return x;
};
cljs.core.chars = function cljs$core$chars(x) {
  return x;
};
cljs.core.shorts = function cljs$core$shorts(x) {
  return x;
};
cljs.core.ints = function cljs$core$ints(x) {
  return x;
};
cljs.core.floats = function cljs$core$floats(x) {
  return x;
};
cljs.core.doubles = function cljs$core$doubles(x) {
  return x;
};
cljs.core.longs = function cljs$core$longs(x) {
  return x;
};
cljs.core.js_mod = function cljs$core$js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function cljs$core$mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function cljs$core$quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function cljs$core$rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function() {
  var cljs$core$bit_xor = null;
  var cljs$core$bit_xor__2 = function(x, y) {
    return x ^ y;
  };
  var cljs$core$bit_xor__3 = function() {
    var G__13739__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_xor, x ^ y, more);
    };
    var G__13739 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__13740__i = 0, G__13740__a = new Array(arguments.length - 2);
        while (G__13740__i < G__13740__a.length) {
          G__13740__a[G__13740__i] = arguments[G__13740__i + 2];
          ++G__13740__i;
        }
        more = new cljs.core.IndexedSeq(G__13740__a, 0);
      }
      return G__13739__delegate.call(this, x, y, more);
    };
    G__13739.cljs$lang$maxFixedArity = 2;
    G__13739.cljs$lang$applyTo = function(arglist__13741) {
      var x = cljs.core.first(arglist__13741);
      arglist__13741 = cljs.core.next(arglist__13741);
      var y = cljs.core.first(arglist__13741);
      var more = cljs.core.rest(arglist__13741);
      return G__13739__delegate(x, y, more);
    };
    G__13739.cljs$core$IFn$_invoke$arity$variadic = G__13739__delegate;
    return G__13739;
  }();
  cljs$core$bit_xor = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$bit_xor__2.call(this, x, y);
      default:
        var G__13742 = null;
        if (arguments.length > 2) {
          var G__13743__i = 0, G__13743__a = new Array(arguments.length - 2);
          while (G__13743__i < G__13743__a.length) {
            G__13743__a[G__13743__i] = arguments[G__13743__i + 2];
            ++G__13743__i;
          }
          G__13742 = new cljs.core.IndexedSeq(G__13743__a, 0);
        }
        return cljs$core$bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__13742);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$bit_xor.cljs$lang$maxFixedArity = 2;
  cljs$core$bit_xor.cljs$lang$applyTo = cljs$core$bit_xor__3.cljs$lang$applyTo;
  cljs$core$bit_xor.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_xor__2;
  cljs$core$bit_xor.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$bit_xor;
}();
cljs.core.bit_and = function() {
  var cljs$core$bit_and = null;
  var cljs$core$bit_and__2 = function(x, y) {
    return x & y;
  };
  var cljs$core$bit_and__3 = function() {
    var G__13744__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_and, x & y, more);
    };
    var G__13744 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__13745__i = 0, G__13745__a = new Array(arguments.length - 2);
        while (G__13745__i < G__13745__a.length) {
          G__13745__a[G__13745__i] = arguments[G__13745__i + 2];
          ++G__13745__i;
        }
        more = new cljs.core.IndexedSeq(G__13745__a, 0);
      }
      return G__13744__delegate.call(this, x, y, more);
    };
    G__13744.cljs$lang$maxFixedArity = 2;
    G__13744.cljs$lang$applyTo = function(arglist__13746) {
      var x = cljs.core.first(arglist__13746);
      arglist__13746 = cljs.core.next(arglist__13746);
      var y = cljs.core.first(arglist__13746);
      var more = cljs.core.rest(arglist__13746);
      return G__13744__delegate(x, y, more);
    };
    G__13744.cljs$core$IFn$_invoke$arity$variadic = G__13744__delegate;
    return G__13744;
  }();
  cljs$core$bit_and = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$bit_and__2.call(this, x, y);
      default:
        var G__13747 = null;
        if (arguments.length > 2) {
          var G__13748__i = 0, G__13748__a = new Array(arguments.length - 2);
          while (G__13748__i < G__13748__a.length) {
            G__13748__a[G__13748__i] = arguments[G__13748__i + 2];
            ++G__13748__i;
          }
          G__13747 = new cljs.core.IndexedSeq(G__13748__a, 0);
        }
        return cljs$core$bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__13747);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$bit_and.cljs$lang$maxFixedArity = 2;
  cljs$core$bit_and.cljs$lang$applyTo = cljs$core$bit_and__3.cljs$lang$applyTo;
  cljs$core$bit_and.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_and__2;
  cljs$core$bit_and.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$bit_and;
}();
cljs.core.bit_or = function() {
  var cljs$core$bit_or = null;
  var cljs$core$bit_or__2 = function(x, y) {
    return x | y;
  };
  var cljs$core$bit_or__3 = function() {
    var G__13749__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_or, x | y, more);
    };
    var G__13749 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__13750__i = 0, G__13750__a = new Array(arguments.length - 2);
        while (G__13750__i < G__13750__a.length) {
          G__13750__a[G__13750__i] = arguments[G__13750__i + 2];
          ++G__13750__i;
        }
        more = new cljs.core.IndexedSeq(G__13750__a, 0);
      }
      return G__13749__delegate.call(this, x, y, more);
    };
    G__13749.cljs$lang$maxFixedArity = 2;
    G__13749.cljs$lang$applyTo = function(arglist__13751) {
      var x = cljs.core.first(arglist__13751);
      arglist__13751 = cljs.core.next(arglist__13751);
      var y = cljs.core.first(arglist__13751);
      var more = cljs.core.rest(arglist__13751);
      return G__13749__delegate(x, y, more);
    };
    G__13749.cljs$core$IFn$_invoke$arity$variadic = G__13749__delegate;
    return G__13749;
  }();
  cljs$core$bit_or = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$bit_or__2.call(this, x, y);
      default:
        var G__13752 = null;
        if (arguments.length > 2) {
          var G__13753__i = 0, G__13753__a = new Array(arguments.length - 2);
          while (G__13753__i < G__13753__a.length) {
            G__13753__a[G__13753__i] = arguments[G__13753__i + 2];
            ++G__13753__i;
          }
          G__13752 = new cljs.core.IndexedSeq(G__13753__a, 0);
        }
        return cljs$core$bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__13752);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$bit_or.cljs$lang$maxFixedArity = 2;
  cljs$core$bit_or.cljs$lang$applyTo = cljs$core$bit_or__3.cljs$lang$applyTo;
  cljs$core$bit_or.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_or__2;
  cljs$core$bit_or.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$bit_or;
}();
cljs.core.bit_and_not = function() {
  var cljs$core$bit_and_not = null;
  var cljs$core$bit_and_not__2 = function(x, y) {
    return x & ~y;
  };
  var cljs$core$bit_and_not__3 = function() {
    var G__13754__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_and_not, x & ~y, more);
    };
    var G__13754 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__13755__i = 0, G__13755__a = new Array(arguments.length - 2);
        while (G__13755__i < G__13755__a.length) {
          G__13755__a[G__13755__i] = arguments[G__13755__i + 2];
          ++G__13755__i;
        }
        more = new cljs.core.IndexedSeq(G__13755__a, 0);
      }
      return G__13754__delegate.call(this, x, y, more);
    };
    G__13754.cljs$lang$maxFixedArity = 2;
    G__13754.cljs$lang$applyTo = function(arglist__13756) {
      var x = cljs.core.first(arglist__13756);
      arglist__13756 = cljs.core.next(arglist__13756);
      var y = cljs.core.first(arglist__13756);
      var more = cljs.core.rest(arglist__13756);
      return G__13754__delegate(x, y, more);
    };
    G__13754.cljs$core$IFn$_invoke$arity$variadic = G__13754__delegate;
    return G__13754;
  }();
  cljs$core$bit_and_not = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$bit_and_not__2.call(this, x, y);
      default:
        var G__13757 = null;
        if (arguments.length > 2) {
          var G__13758__i = 0, G__13758__a = new Array(arguments.length - 2);
          while (G__13758__i < G__13758__a.length) {
            G__13758__a[G__13758__i] = arguments[G__13758__i + 2];
            ++G__13758__i;
          }
          G__13757 = new cljs.core.IndexedSeq(G__13758__a, 0);
        }
        return cljs$core$bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__13757);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$bit_and_not.cljs$lang$maxFixedArity = 2;
  cljs$core$bit_and_not.cljs$lang$applyTo = cljs$core$bit_and_not__3.cljs$lang$applyTo;
  cljs$core$bit_and_not.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_and_not__2;
  cljs$core$bit_and_not.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$bit_and_not;
}();
cljs.core.bit_clear = function cljs$core$bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function cljs$core$bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function cljs$core$bit_not(x) {
  return~x;
};
cljs.core.bit_set = function cljs$core$bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function cljs$core$bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function cljs$core$bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function cljs$core$bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function cljs$core$bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function cljs$core$unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function cljs$core$bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var cljs$core$_EQ__EQ_ = null;
  var cljs$core$_EQ__EQ___1 = function(x) {
    return true;
  };
  var cljs$core$_EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv(x, y);
  };
  var cljs$core$_EQ__EQ___3 = function() {
    var G__13763__delegate = function(x, y, more) {
      while (true) {
        if (cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
          if (cljs.core.next(more)) {
            var G__13764 = y;
            var G__13765 = cljs.core.first(more);
            var G__13766 = cljs.core.next(more);
            x = G__13764;
            y = G__13765;
            more = G__13766;
            continue;
          } else {
            return cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__13763 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__13767__i = 0, G__13767__a = new Array(arguments.length - 2);
        while (G__13767__i < G__13767__a.length) {
          G__13767__a[G__13767__i] = arguments[G__13767__i + 2];
          ++G__13767__i;
        }
        more = new cljs.core.IndexedSeq(G__13767__a, 0);
      }
      return G__13763__delegate.call(this, x, y, more);
    };
    G__13763.cljs$lang$maxFixedArity = 2;
    G__13763.cljs$lang$applyTo = function(arglist__13768) {
      var x = cljs.core.first(arglist__13768);
      arglist__13768 = cljs.core.next(arglist__13768);
      var y = cljs.core.first(arglist__13768);
      var more = cljs.core.rest(arglist__13768);
      return G__13763__delegate(x, y, more);
    };
    G__13763.cljs$core$IFn$_invoke$arity$variadic = G__13763__delegate;
    return G__13763;
  }();
  cljs$core$_EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$_EQ__EQ___1.call(this, x);
      case 2:
        return cljs$core$_EQ__EQ___2.call(this, x, y);
      default:
        var G__13769 = null;
        if (arguments.length > 2) {
          var G__13770__i = 0, G__13770__a = new Array(arguments.length - 2);
          while (G__13770__i < G__13770__a.length) {
            G__13770__a[G__13770__i] = arguments[G__13770__i + 2];
            ++G__13770__i;
          }
          G__13769 = new cljs.core.IndexedSeq(G__13770__a, 0);
        }
        return cljs$core$_EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__13769);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$_EQ__EQ_.cljs$lang$maxFixedArity = 2;
  cljs$core$_EQ__EQ_.cljs$lang$applyTo = cljs$core$_EQ__EQ___3.cljs$lang$applyTo;
  cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_EQ__EQ___1;
  cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_EQ__EQ___2;
  cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$_EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function cljs$core$pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function cljs$core$zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function cljs$core$neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function cljs$core$nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__13771 = n__$1 - 1;
      var G__13772 = cljs.core.next(xs);
      n__$1 = G__13771;
      xs = G__13772;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var cljs$core$str = null;
  var cljs$core$str__0 = function() {
    return "";
  };
  var cljs$core$str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      var G__13776 = x;
      return goog.string.buildString(G__13776);
    }
  };
  var cljs$core$str__2 = function() {
    var G__13777__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(cljs$core$str.cljs$core$IFn$_invoke$arity$1(x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__13778 = sb.append(cljs$core$str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
          var G__13779 = cljs.core.next(more);
          sb = G__13778;
          more = G__13779;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__13777 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        var G__13780__i = 0, G__13780__a = new Array(arguments.length - 1);
        while (G__13780__i < G__13780__a.length) {
          G__13780__a[G__13780__i] = arguments[G__13780__i + 1];
          ++G__13780__i;
        }
        ys = new cljs.core.IndexedSeq(G__13780__a, 0);
      }
      return G__13777__delegate.call(this, x, ys);
    };
    G__13777.cljs$lang$maxFixedArity = 1;
    G__13777.cljs$lang$applyTo = function(arglist__13781) {
      var x = cljs.core.first(arglist__13781);
      var ys = cljs.core.rest(arglist__13781);
      return G__13777__delegate(x, ys);
    };
    G__13777.cljs$core$IFn$_invoke$arity$variadic = G__13777__delegate;
    return G__13777;
  }();
  cljs$core$str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return cljs$core$str__0.call(this);
      case 1:
        return cljs$core$str__1.call(this, x);
      default:
        var G__13782 = null;
        if (arguments.length > 1) {
          var G__13783__i = 0, G__13783__a = new Array(arguments.length - 1);
          while (G__13783__i < G__13783__a.length) {
            G__13783__a[G__13783__i] = arguments[G__13783__i + 1];
            ++G__13783__i;
          }
          G__13782 = new cljs.core.IndexedSeq(G__13783__a, 0);
        }
        return cljs$core$str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__13782);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$str.cljs$lang$maxFixedArity = 1;
  cljs$core$str.cljs$lang$applyTo = cljs$core$str__2.cljs$lang$applyTo;
  cljs$core$str.cljs$core$IFn$_invoke$arity$0 = cljs$core$str__0;
  cljs$core$str.cljs$core$IFn$_invoke$arity$1 = cljs$core$str__1;
  cljs$core$str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$str__2.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$str;
}();
cljs.core.subs = function() {
  var cljs$core$subs = null;
  var cljs$core$subs__2 = function(s, start) {
    return s.substring(start);
  };
  var cljs$core$subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  cljs$core$subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return cljs$core$subs__2.call(this, s, start);
      case 3:
        return cljs$core$subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$subs.cljs$core$IFn$_invoke$arity$2 = cljs$core$subs__2;
  cljs$core$subs.cljs$core$IFn$_invoke$arity$3 = cljs$core$subs__3;
  return cljs$core$subs;
}();
cljs.core.equiv_sequential = function cljs$core$equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__13784 = cljs.core.next(xs);
            var G__13785 = cljs.core.next(ys);
            xs = G__13784;
            ys = G__13785;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function cljs$core$hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__13786 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__13787 = cljs.core.next(s);
        res = G__13786;
        s = G__13787;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function cljs$core$hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__13792 = (h + (cljs.core.hash(function() {
        var G__13790 = e;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__13790) : cljs.core.key.call(null, G__13790);
      }()) ^ cljs.core.hash(function() {
        var G__13791 = e;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__13791) : cljs.core.val.call(null, G__13791);
      }()))) % 4503599627370496;
      var G__13793 = cljs.core.next(s);
      h = G__13792;
      s = G__13793;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function cljs$core$hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__13794 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__13795 = cljs.core.next(s__$1);
      h = G__13794;
      s__$1 = G__13795;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function cljs$core$extend_object_BANG_(obj, fn_map) {
  var seq__13806_13816 = cljs.core.seq(fn_map);
  var chunk__13807_13817 = null;
  var count__13808_13818 = 0;
  var i__13809_13819 = 0;
  while (true) {
    if (i__13809_13819 < count__13808_13818) {
      var vec__13810_13820 = chunk__13807_13817.cljs$core$IIndexed$_nth$arity$2(null, i__13809_13819);
      var key_name_13821 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13810_13820, 0, null);
      var f_13822 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13810_13820, 1, null);
      var str_name_13823 = function() {
        var G__13811 = key_name_13821;
        return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__13811) : cljs.core.name.call(null, G__13811);
      }();
      obj[str_name_13823] = f_13822;
      var G__13824 = seq__13806_13816;
      var G__13825 = chunk__13807_13817;
      var G__13826 = count__13808_13818;
      var G__13827 = i__13809_13819 + 1;
      seq__13806_13816 = G__13824;
      chunk__13807_13817 = G__13825;
      count__13808_13818 = G__13826;
      i__13809_13819 = G__13827;
      continue;
    } else {
      var temp__4126__auto___13828 = cljs.core.seq(seq__13806_13816);
      if (temp__4126__auto___13828) {
        var seq__13806_13829__$1 = temp__4126__auto___13828;
        if (cljs.core.chunked_seq_QMARK_(seq__13806_13829__$1)) {
          var c__4907__auto___13830 = function() {
            var G__13812 = seq__13806_13829__$1;
            return cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__13812) : cljs.core.chunk_first.call(null, G__13812);
          }();
          var G__13831 = function() {
            var G__13813 = seq__13806_13829__$1;
            return cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__13813) : cljs.core.chunk_rest.call(null, G__13813);
          }();
          var G__13832 = c__4907__auto___13830;
          var G__13833 = cljs.core.count(c__4907__auto___13830);
          var G__13834 = 0;
          seq__13806_13816 = G__13831;
          chunk__13807_13817 = G__13832;
          count__13808_13818 = G__13833;
          i__13809_13819 = G__13834;
          continue;
        } else {
          var vec__13814_13835 = cljs.core.first(seq__13806_13829__$1);
          var key_name_13836 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13814_13835, 0, null);
          var f_13837 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13814_13835, 1, null);
          var str_name_13838 = function() {
            var G__13815 = key_name_13836;
            return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__13815) : cljs.core.name.call(null, G__13815);
          }();
          obj[str_name_13838] = f_13837;
          var G__13839 = cljs.core.next(seq__13806_13829__$1);
          var G__13840 = null;
          var G__13841 = 0;
          var G__13842 = 0;
          seq__13806_13816 = G__13839;
          chunk__13807_13817 = G__13840;
          count__13808_13818 = G__13841;
          i__13809_13819 = G__13842;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4538__auto__ = self__.__hash;
  if (!(h__4538__auto__ == null)) {
    return h__4538__auto__;
  } else {
    var h__4538__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4538__auto____$1;
    return h__4538__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function cljs$core$__GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5098__auto__ = this;
  return cljs.core.es6_iterator(this__5098__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function cljs$core$__GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5098__auto__ = this;
  return cljs.core.es6_iterator(this__5098__auto__);
};
cljs.core.reversible_QMARK_ = function cljs$core$reversible_QMARK_(coll) {
  var G__13844 = coll;
  if (G__13844) {
    var bit__4796__auto__ = G__13844.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4796__auto__ || G__13844.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__13844.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__13844);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__13844);
  }
};
cljs.core.rseq = function cljs$core$rseq(coll) {
  return cljs.core._rseq(coll);
};
cljs.core.reverse = function cljs$core$reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var cljs$core$list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
          var G__13845 = xs__$1.cljs$core$INext$_next$arity$1(null);
          xs__$1 = G__13845;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__13846 = i - 1;
        var G__13847 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
        i = G__13846;
        r = G__13847;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var cljs$core$list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      var G__13848__i = 0, G__13848__a = new Array(arguments.length - 0);
      while (G__13848__i < G__13848__a.length) {
        G__13848__a[G__13848__i] = arguments[G__13848__i + 0];
        ++G__13848__i;
      }
      xs = new cljs.core.IndexedSeq(G__13848__a, 0);
    }
    return cljs$core$list__delegate.call(this, xs);
  };
  cljs$core$list.cljs$lang$maxFixedArity = 0;
  cljs$core$list.cljs$lang$applyTo = function(arglist__13849) {
    var xs = cljs.core.seq(arglist__13849);
    return cljs$core$list__delegate(xs);
  };
  cljs$core$list.cljs$core$IFn$_invoke$arity$variadic = cljs$core$list__delegate;
  return cljs$core$list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4538__auto__ = self__.__hash;
  if (!(h__4538__auto__ == null)) {
    return h__4538__auto__;
  } else {
    var h__4538__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4538__auto____$1;
    return h__4538__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function cljs$core$__GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5098__auto__ = this;
  return cljs.core.es6_iterator(this__5098__auto__);
};
cljs.core.cons = function cljs$core$cons(x, coll) {
  if (function() {
    var or__4122__auto__ = coll == null;
    if (or__4122__auto__) {
      return or__4122__auto__;
    } else {
      var G__13853 = coll;
      if (G__13853) {
        var bit__4789__auto__ = G__13853.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4789__auto__ || G__13853.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.list_QMARK_ = function cljs$core$list_QMARK_(x) {
  var G__13855 = x;
  if (G__13855) {
    var bit__4796__auto__ = G__13855.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4796__auto__ || G__13855.cljs$core$IList$) {
      return true;
    } else {
      if (!G__13855.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__13855);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__13855);
  }
};
cljs.core.hash_keyword = function cljs$core$hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function cljs$core$compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4110__auto__ = cljs.core.not(a.ns);
      if (and__4110__auto__) {
        return b.ns;
      } else {
        return and__4110__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__13862 = a.ns;
            var G__13863 = b.ns;
            return goog.array.defaultCompare(G__13862, G__13863);
          }();
          if (0 === nsc) {
            var G__13864 = a.name;
            var G__13865 = b.name;
            return goog.array.defaultCompare(G__13864, G__13865);
          } else {
            return nsc;
          }
        }
      } else {
        var G__13866 = a.name;
        var G__13867 = b.name;
        return goog.array.defaultCompare(G__13866, G__13867);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4538__auto__ = self__._hash;
  if (!(h__4538__auto__ == null)) {
    return h__4538__auto__;
  } else {
    var h__4538__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__4538__auto____$1;
    return h__4538__auto____$1;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__13869 = null;
  var G__13869__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__13869__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__13869 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13869__2.call(this, self__, coll);
      case 3:
        return G__13869__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13869.cljs$core$IFn$_invoke$arity$2 = G__13869__2;
  G__13869.cljs$core$IFn$_invoke$arity$3 = G__13869__3;
  return G__13869;
}();
cljs.core.Keyword.prototype.apply = function(self__, args13868) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args13868)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function cljs$core$__GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function cljs$core$keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function cljs$core$keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function cljs$core$namespace(x) {
  if (function() {
    var G__13871 = x;
    if (G__13871) {
      var bit__4789__auto__ = G__13871.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4789__auto__ || G__13871.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function() {
  var cljs$core$keyword = null;
  var cljs$core$keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace(name), function() {
          var G__13873 = name;
          return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__13873) : cljs.core.name.call(null, G__13873);
        }(), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var cljs$core$keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
  };
  cljs$core$keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return cljs$core$keyword__1.call(this, ns);
      case 2:
        return cljs$core$keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$keyword.cljs$core$IFn$_invoke$arity$1 = cljs$core$keyword__1;
  cljs$core$keyword.cljs$core$IFn$_invoke$arity$2 = cljs$core$keyword__2;
  return cljs$core$keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = function() {
      return self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    }();
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4538__auto__ = self__.__hash;
  if (!(h__4538__auto__ == null)) {
    return h__4538__auto__;
  } else {
    var h__4538__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4538__auto____$1;
    return h__4538__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__13874 = ls.sval();
        ls = G__13874;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function cljs$core$__GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5098__auto__ = this;
  return cljs.core.es6_iterator(this__5098__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function cljs$core$__GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function cljs$core$chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function cljs$core$__GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var cljs$core$array_chunk = null;
  var cljs$core$array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var cljs$core$array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var cljs$core$array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  cljs$core$array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return cljs$core$array_chunk__1.call(this, arr);
      case 2:
        return cljs$core$array_chunk__2.call(this, arr, off);
      case 3:
        return cljs$core$array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$1 = cljs$core$array_chunk__1;
  cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_chunk__2;
  cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$3 = cljs$core$array_chunk__3;
  return cljs$core$array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4538__auto__ = self__.__hash;
  if (!(h__4538__auto__ == null)) {
    return h__4538__auto__;
  } else {
    var h__4538__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4538__auto____$1;
    return h__4538__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function cljs$core$__GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5098__auto__ = this;
  return cljs.core.es6_iterator(this__5098__auto__);
};
cljs.core.chunk_cons = function cljs$core$chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function cljs$core$chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function cljs$core$chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function cljs$core$chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function cljs$core$chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function cljs$core$chunk_next(s) {
  if (function() {
    var G__13876 = s;
    if (G__13876) {
      var bit__4789__auto__ = G__13876.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4789__auto__ || G__13876.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function cljs$core$to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__13877 = cljs.core.next(s__$1);
      s__$1 = G__13877;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function cljs$core$to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_13878 = 0;
  var xs_13879 = cljs.core.seq(coll);
  while (true) {
    if (xs_13879) {
      ret[i_13878] = cljs.core.to_array(cljs.core.first(xs_13879));
      var G__13880 = i_13878 + 1;
      var G__13881 = cljs.core.next(xs_13879);
      i_13878 = G__13880;
      xs_13879 = G__13881;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var cljs$core$int_array = null;
  var cljs$core$int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return cljs$core$int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var cljs$core$int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__13884 = i + 1;
          var G__13885 = cljs.core.next(s__$1);
          i = G__13884;
          s__$1 = G__13885;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__5007__auto___13886 = size;
      var i_13887 = 0;
      while (true) {
        if (i_13887 < n__5007__auto___13886) {
          a[i_13887] = init_val_or_seq;
          var G__13888 = i_13887 + 1;
          i_13887 = G__13888;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  cljs$core$int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return cljs$core$int_array__1.call(this, size);
      case 2:
        return cljs$core$int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$int_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$int_array__1;
  cljs$core$int_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$int_array__2;
  return cljs$core$int_array;
}();
cljs.core.long_array = function() {
  var cljs$core$long_array = null;
  var cljs$core$long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return cljs$core$long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var cljs$core$long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__13891 = i + 1;
          var G__13892 = cljs.core.next(s__$1);
          i = G__13891;
          s__$1 = G__13892;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__5007__auto___13893 = size;
      var i_13894 = 0;
      while (true) {
        if (i_13894 < n__5007__auto___13893) {
          a[i_13894] = init_val_or_seq;
          var G__13895 = i_13894 + 1;
          i_13894 = G__13895;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  cljs$core$long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return cljs$core$long_array__1.call(this, size);
      case 2:
        return cljs$core$long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$long_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$long_array__1;
  cljs$core$long_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$long_array__2;
  return cljs$core$long_array;
}();
cljs.core.double_array = function() {
  var cljs$core$double_array = null;
  var cljs$core$double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return cljs$core$double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var cljs$core$double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__13898 = i + 1;
          var G__13899 = cljs.core.next(s__$1);
          i = G__13898;
          s__$1 = G__13899;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__5007__auto___13900 = size;
      var i_13901 = 0;
      while (true) {
        if (i_13901 < n__5007__auto___13900) {
          a[i_13901] = init_val_or_seq;
          var G__13902 = i_13901 + 1;
          i_13901 = G__13902;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  cljs$core$double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return cljs$core$double_array__1.call(this, size);
      case 2:
        return cljs$core$double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$double_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$double_array__1;
  cljs$core$double_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$double_array__2;
  return cljs$core$double_array;
}();
cljs.core.object_array = function() {
  var cljs$core$object_array = null;
  var cljs$core$object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return cljs$core$object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var cljs$core$object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__13905 = i + 1;
          var G__13906 = cljs.core.next(s__$1);
          i = G__13905;
          s__$1 = G__13906;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__5007__auto___13907 = size;
      var i_13908 = 0;
      while (true) {
        if (i_13908 < n__5007__auto___13907) {
          a[i_13908] = init_val_or_seq;
          var G__13909 = i_13908 + 1;
          i_13908 = G__13909;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  cljs$core$object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return cljs$core$object_array__1.call(this, size);
      case 2:
        return cljs$core$object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$object_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$object_array__1;
  cljs$core$object_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$object_array__2;
  return cljs$core$object_array;
}();
cljs.core.bounded_count = function cljs$core$bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__13910 = cljs.core.next(s__$1);
        var G__13911 = i - 1;
        var G__13912 = sum + 1;
        s__$1 = G__13910;
        i = G__13911;
        sum = G__13912;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function cljs$core$spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), cljs$core$spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function() {
  var cljs$core$concat = null;
  var cljs$core$concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var cljs$core$concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var cljs$core$concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq(x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_(s)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(s), cljs$core$concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
        } else {
          return cljs.core.cons(cljs.core.first(s), cljs$core$concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var cljs$core$concat__3 = function() {
    var G__13932__delegate = function(x, y, zs) {
      var cat = function cljs$core$concat_$_cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq(xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
              return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cljs$core$concat_$_cat(cljs.core.chunk_rest(xys__$1), zs__$1));
            } else {
              return cljs.core.cons(cljs.core.first(xys__$1), cljs$core$concat_$_cat(cljs.core.rest(xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cljs$core$concat_$_cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat(cljs$core$concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
    };
    var G__13932 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        var G__13933__i = 0, G__13933__a = new Array(arguments.length - 2);
        while (G__13933__i < G__13933__a.length) {
          G__13933__a[G__13933__i] = arguments[G__13933__i + 2];
          ++G__13933__i;
        }
        zs = new cljs.core.IndexedSeq(G__13933__a, 0);
      }
      return G__13932__delegate.call(this, x, y, zs);
    };
    G__13932.cljs$lang$maxFixedArity = 2;
    G__13932.cljs$lang$applyTo = function(arglist__13934) {
      var x = cljs.core.first(arglist__13934);
      arglist__13934 = cljs.core.next(arglist__13934);
      var y = cljs.core.first(arglist__13934);
      var zs = cljs.core.rest(arglist__13934);
      return G__13932__delegate(x, y, zs);
    };
    G__13932.cljs$core$IFn$_invoke$arity$variadic = G__13932__delegate;
    return G__13932;
  }();
  cljs$core$concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return cljs$core$concat__0.call(this);
      case 1:
        return cljs$core$concat__1.call(this, x);
      case 2:
        return cljs$core$concat__2.call(this, x, y);
      default:
        var G__13935 = null;
        if (arguments.length > 2) {
          var G__13936__i = 0, G__13936__a = new Array(arguments.length - 2);
          while (G__13936__i < G__13936__a.length) {
            G__13936__a[G__13936__i] = arguments[G__13936__i + 2];
            ++G__13936__i;
          }
          G__13935 = new cljs.core.IndexedSeq(G__13936__a, 0);
        }
        return cljs$core$concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__13935);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$concat.cljs$lang$maxFixedArity = 2;
  cljs$core$concat.cljs$lang$applyTo = cljs$core$concat__3.cljs$lang$applyTo;
  cljs$core$concat.cljs$core$IFn$_invoke$arity$0 = cljs$core$concat__0;
  cljs$core$concat.cljs$core$IFn$_invoke$arity$1 = cljs$core$concat__1;
  cljs$core$concat.cljs$core$IFn$_invoke$arity$2 = cljs$core$concat__2;
  cljs$core$concat.cljs$core$IFn$_invoke$arity$variadic = cljs$core$concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$concat;
}();
cljs.core.list_STAR_ = function() {
  var cljs$core$list_STAR_ = null;
  var cljs$core$list_STAR___1 = function(args) {
    return cljs.core.seq(args);
  };
  var cljs$core$list_STAR___2 = function(a, args) {
    return cljs.core.cons(a, args);
  };
  var cljs$core$list_STAR___3 = function(a, b, args) {
    return cljs.core.cons(a, cljs.core.cons(b, args));
  };
  var cljs$core$list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
  };
  var cljs$core$list_STAR___5 = function() {
    var G__13937__delegate = function(a, b, c, d, more) {
      return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
    };
    var G__13937 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__13938__i = 0, G__13938__a = new Array(arguments.length - 4);
        while (G__13938__i < G__13938__a.length) {
          G__13938__a[G__13938__i] = arguments[G__13938__i + 4];
          ++G__13938__i;
        }
        more = new cljs.core.IndexedSeq(G__13938__a, 0);
      }
      return G__13937__delegate.call(this, a, b, c, d, more);
    };
    G__13937.cljs$lang$maxFixedArity = 4;
    G__13937.cljs$lang$applyTo = function(arglist__13939) {
      var a = cljs.core.first(arglist__13939);
      arglist__13939 = cljs.core.next(arglist__13939);
      var b = cljs.core.first(arglist__13939);
      arglist__13939 = cljs.core.next(arglist__13939);
      var c = cljs.core.first(arglist__13939);
      arglist__13939 = cljs.core.next(arglist__13939);
      var d = cljs.core.first(arglist__13939);
      var more = cljs.core.rest(arglist__13939);
      return G__13937__delegate(a, b, c, d, more);
    };
    G__13937.cljs$core$IFn$_invoke$arity$variadic = G__13937__delegate;
    return G__13937;
  }();
  cljs$core$list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$list_STAR___1.call(this, a);
      case 2:
        return cljs$core$list_STAR___2.call(this, a, b);
      case 3:
        return cljs$core$list_STAR___3.call(this, a, b, c);
      case 4:
        return cljs$core$list_STAR___4.call(this, a, b, c, d);
      default:
        var G__13940 = null;
        if (arguments.length > 4) {
          var G__13941__i = 0, G__13941__a = new Array(arguments.length - 4);
          while (G__13941__i < G__13941__a.length) {
            G__13941__a[G__13941__i] = arguments[G__13941__i + 4];
            ++G__13941__i;
          }
          G__13940 = new cljs.core.IndexedSeq(G__13941__a, 0);
        }
        return cljs$core$list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, G__13940);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$list_STAR_.cljs$lang$maxFixedArity = 4;
  cljs$core$list_STAR_.cljs$lang$applyTo = cljs$core$list_STAR___5.cljs$lang$applyTo;
  cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$1 = cljs$core$list_STAR___1;
  cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$2 = cljs$core$list_STAR___2;
  cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$3 = cljs$core$list_STAR___3;
  cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$4 = cljs$core$list_STAR___4;
  cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$list_STAR_;
}();
cljs.core.transient$ = function cljs$core$transient(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function cljs$core$persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function() {
  var cljs$core$conj_BANG_ = null;
  var cljs$core$conj_BANG___0 = function() {
    return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
  };
  var cljs$core$conj_BANG___1 = function(coll) {
    return coll;
  };
  var cljs$core$conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_(tcoll, val);
  };
  var cljs$core$conj_BANG___3 = function() {
    var G__13942__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_(tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__13943 = ntcoll;
          var G__13944 = cljs.core.first(vals);
          var G__13945 = cljs.core.next(vals);
          tcoll = G__13943;
          val = G__13944;
          vals = G__13945;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__13942 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        var G__13946__i = 0, G__13946__a = new Array(arguments.length - 2);
        while (G__13946__i < G__13946__a.length) {
          G__13946__a[G__13946__i] = arguments[G__13946__i + 2];
          ++G__13946__i;
        }
        vals = new cljs.core.IndexedSeq(G__13946__a, 0);
      }
      return G__13942__delegate.call(this, tcoll, val, vals);
    };
    G__13942.cljs$lang$maxFixedArity = 2;
    G__13942.cljs$lang$applyTo = function(arglist__13947) {
      var tcoll = cljs.core.first(arglist__13947);
      arglist__13947 = cljs.core.next(arglist__13947);
      var val = cljs.core.first(arglist__13947);
      var vals = cljs.core.rest(arglist__13947);
      return G__13942__delegate(tcoll, val, vals);
    };
    G__13942.cljs$core$IFn$_invoke$arity$variadic = G__13942__delegate;
    return G__13942;
  }();
  cljs$core$conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 0:
        return cljs$core$conj_BANG___0.call(this);
      case 1:
        return cljs$core$conj_BANG___1.call(this, tcoll);
      case 2:
        return cljs$core$conj_BANG___2.call(this, tcoll, val);
      default:
        var G__13948 = null;
        if (arguments.length > 2) {
          var G__13949__i = 0, G__13949__a = new Array(arguments.length - 2);
          while (G__13949__i < G__13949__a.length) {
            G__13949__a[G__13949__i] = arguments[G__13949__i + 2];
            ++G__13949__i;
          }
          G__13948 = new cljs.core.IndexedSeq(G__13949__a, 0);
        }
        return cljs$core$conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, G__13948);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$conj_BANG_.cljs$lang$maxFixedArity = 2;
  cljs$core$conj_BANG_.cljs$lang$applyTo = cljs$core$conj_BANG___3.cljs$lang$applyTo;
  cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$0 = cljs$core$conj_BANG___0;
  cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$1 = cljs$core$conj_BANG___1;
  cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$conj_BANG___2;
  cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var cljs$core$assoc_BANG_ = null;
  var cljs$core$assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_(tcoll, key, val);
  };
  var cljs$core$assoc_BANG___4 = function() {
    var G__13950__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__13951 = ntcoll;
          var G__13952 = cljs.core.first(kvs);
          var G__13953 = cljs.core.second(kvs);
          var G__13954 = cljs.core.nnext(kvs);
          tcoll = G__13951;
          key = G__13952;
          val = G__13953;
          kvs = G__13954;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__13950 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        var G__13955__i = 0, G__13955__a = new Array(arguments.length - 3);
        while (G__13955__i < G__13955__a.length) {
          G__13955__a[G__13955__i] = arguments[G__13955__i + 3];
          ++G__13955__i;
        }
        kvs = new cljs.core.IndexedSeq(G__13955__a, 0);
      }
      return G__13950__delegate.call(this, tcoll, key, val, kvs);
    };
    G__13950.cljs$lang$maxFixedArity = 3;
    G__13950.cljs$lang$applyTo = function(arglist__13956) {
      var tcoll = cljs.core.first(arglist__13956);
      arglist__13956 = cljs.core.next(arglist__13956);
      var key = cljs.core.first(arglist__13956);
      arglist__13956 = cljs.core.next(arglist__13956);
      var val = cljs.core.first(arglist__13956);
      var kvs = cljs.core.rest(arglist__13956);
      return G__13950__delegate(tcoll, key, val, kvs);
    };
    G__13950.cljs$core$IFn$_invoke$arity$variadic = G__13950__delegate;
    return G__13950;
  }();
  cljs$core$assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return cljs$core$assoc_BANG___3.call(this, tcoll, key, val);
      default:
        var G__13957 = null;
        if (arguments.length > 3) {
          var G__13958__i = 0, G__13958__a = new Array(arguments.length - 3);
          while (G__13958__i < G__13958__a.length) {
            G__13958__a[G__13958__i] = arguments[G__13958__i + 3];
            ++G__13958__i;
          }
          G__13957 = new cljs.core.IndexedSeq(G__13958__a, 0);
        }
        return cljs$core$assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, G__13957);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$assoc_BANG_.cljs$lang$maxFixedArity = 3;
  cljs$core$assoc_BANG_.cljs$lang$applyTo = cljs$core$assoc_BANG___4.cljs$lang$applyTo;
  cljs$core$assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$assoc_BANG___3;
  cljs$core$assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var cljs$core$dissoc_BANG_ = null;
  var cljs$core$dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_(tcoll, key);
  };
  var cljs$core$dissoc_BANG___3 = function() {
    var G__13959__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__13960 = ntcoll;
          var G__13961 = cljs.core.first(ks);
          var G__13962 = cljs.core.next(ks);
          tcoll = G__13960;
          key = G__13961;
          ks = G__13962;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__13959 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__13963__i = 0, G__13963__a = new Array(arguments.length - 2);
        while (G__13963__i < G__13963__a.length) {
          G__13963__a[G__13963__i] = arguments[G__13963__i + 2];
          ++G__13963__i;
        }
        ks = new cljs.core.IndexedSeq(G__13963__a, 0);
      }
      return G__13959__delegate.call(this, tcoll, key, ks);
    };
    G__13959.cljs$lang$maxFixedArity = 2;
    G__13959.cljs$lang$applyTo = function(arglist__13964) {
      var tcoll = cljs.core.first(arglist__13964);
      arglist__13964 = cljs.core.next(arglist__13964);
      var key = cljs.core.first(arglist__13964);
      var ks = cljs.core.rest(arglist__13964);
      return G__13959__delegate(tcoll, key, ks);
    };
    G__13959.cljs$core$IFn$_invoke$arity$variadic = G__13959__delegate;
    return G__13959;
  }();
  cljs$core$dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$dissoc_BANG___2.call(this, tcoll, key);
      default:
        var G__13965 = null;
        if (arguments.length > 2) {
          var G__13966__i = 0, G__13966__a = new Array(arguments.length - 2);
          while (G__13966__i < G__13966__a.length) {
            G__13966__a[G__13966__i] = arguments[G__13966__i + 2];
            ++G__13966__i;
          }
          G__13965 = new cljs.core.IndexedSeq(G__13966__a, 0);
        }
        return cljs$core$dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, G__13965);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  cljs$core$dissoc_BANG_.cljs$lang$applyTo = cljs$core$dissoc_BANG___3.cljs$lang$applyTo;
  cljs$core$dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$dissoc_BANG___2;
  cljs$core$dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function cljs$core$pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function() {
  var cljs$core$disj_BANG_ = null;
  var cljs$core$disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_(tcoll, val);
  };
  var cljs$core$disj_BANG___3 = function() {
    var G__13967__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__13968 = ntcoll;
          var G__13969 = cljs.core.first(vals);
          var G__13970 = cljs.core.next(vals);
          tcoll = G__13968;
          val = G__13969;
          vals = G__13970;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__13967 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        var G__13971__i = 0, G__13971__a = new Array(arguments.length - 2);
        while (G__13971__i < G__13971__a.length) {
          G__13971__a[G__13971__i] = arguments[G__13971__i + 2];
          ++G__13971__i;
        }
        vals = new cljs.core.IndexedSeq(G__13971__a, 0);
      }
      return G__13967__delegate.call(this, tcoll, val, vals);
    };
    G__13967.cljs$lang$maxFixedArity = 2;
    G__13967.cljs$lang$applyTo = function(arglist__13972) {
      var tcoll = cljs.core.first(arglist__13972);
      arglist__13972 = cljs.core.next(arglist__13972);
      var val = cljs.core.first(arglist__13972);
      var vals = cljs.core.rest(arglist__13972);
      return G__13967__delegate(tcoll, val, vals);
    };
    G__13967.cljs$core$IFn$_invoke$arity$variadic = G__13967__delegate;
    return G__13967;
  }();
  cljs$core$disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$disj_BANG___2.call(this, tcoll, val);
      default:
        var G__13973 = null;
        if (arguments.length > 2) {
          var G__13974__i = 0, G__13974__a = new Array(arguments.length - 2);
          while (G__13974__i < G__13974__a.length) {
            G__13974__a[G__13974__i] = arguments[G__13974__i + 2];
            ++G__13974__i;
          }
          G__13973 = new cljs.core.IndexedSeq(G__13974__a, 0);
        }
        return cljs$core$disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, G__13973);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$disj_BANG_.cljs$lang$maxFixedArity = 2;
  cljs$core$disj_BANG_.cljs$lang$applyTo = cljs$core$disj_BANG___3.cljs$lang$applyTo;
  cljs$core$disj_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$disj_BANG___2;
  cljs$core$disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$disj_BANG_;
}();
cljs.core.apply_to = function cljs$core$apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a5051 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a5051);
      } else {
        var G__14185 = a5051;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14185) : f.call(null, G__14185);
      }
    } else {
      var b5052 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a5051, b5052);
        } else {
          var G__14186 = a5051;
          var G__14187 = b5052;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14186, G__14187) : f.call(null, G__14186, G__14187);
        }
      } else {
        var c5053 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a5051, b5052, c5053);
          } else {
            var G__14188 = a5051;
            var G__14189 = b5052;
            var G__14190 = c5053;
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14188, G__14189, G__14190) : f.call(null, G__14188, G__14189, G__14190);
          }
        } else {
          var d5054 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a5051, b5052, c5053, d5054);
            } else {
              var G__14191 = a5051;
              var G__14192 = b5052;
              var G__14193 = c5053;
              var G__14194 = d5054;
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14191, G__14192, G__14193, G__14194) : f.call(null, G__14191, G__14192, G__14193, G__14194);
            }
          } else {
            var e5055 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a5051, b5052, c5053, d5054, e5055);
              } else {
                var G__14195 = a5051;
                var G__14196 = b5052;
                var G__14197 = c5053;
                var G__14198 = d5054;
                var G__14199 = e5055;
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__14195, G__14196, G__14197, G__14198, G__14199) : f.call(null, G__14195, G__14196, G__14197, G__14198, G__14199);
              }
            } else {
              var f5056 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a5051, b5052, c5053, d5054, e5055, f5056);
                } else {
                  var G__14200 = a5051;
                  var G__14201 = b5052;
                  var G__14202 = c5053;
                  var G__14203 = d5054;
                  var G__14204 = e5055;
                  var G__14205 = f5056;
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__14200, G__14201, G__14202, G__14203, G__14204, G__14205) : f.call(null, G__14200, G__14201, G__14202, G__14203, G__14204, G__14205);
                }
              } else {
                var g5057 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a5051, b5052, c5053, d5054, e5055, f5056, g5057);
                  } else {
                    var G__14206 = a5051;
                    var G__14207 = b5052;
                    var G__14208 = c5053;
                    var G__14209 = d5054;
                    var G__14210 = e5055;
                    var G__14211 = f5056;
                    var G__14212 = g5057;
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__14206, G__14207, G__14208, G__14209, G__14210, G__14211, G__14212) : f.call(null, G__14206, G__14207, G__14208, G__14209, G__14210, G__14211, G__14212);
                  }
                } else {
                  var h5058 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a5051, b5052, c5053, d5054, e5055, f5056, g5057, h5058);
                    } else {
                      var G__14213 = a5051;
                      var G__14214 = b5052;
                      var G__14215 = c5053;
                      var G__14216 = d5054;
                      var G__14217 = e5055;
                      var G__14218 = f5056;
                      var G__14219 = g5057;
                      var G__14220 = h5058;
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__14213, G__14214, G__14215, G__14216, G__14217, G__14218, G__14219, G__14220) : f.call(null, G__14213, G__14214, G__14215, G__14216, G__14217, G__14218, G__14219, G__14220);
                    }
                  } else {
                    var i5059 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a5051, b5052, c5053, d5054, e5055, f5056, g5057, h5058, i5059);
                      } else {
                        var G__14221 = a5051;
                        var G__14222 = b5052;
                        var G__14223 = c5053;
                        var G__14224 = d5054;
                        var G__14225 = e5055;
                        var G__14226 = f5056;
                        var G__14227 = g5057;
                        var G__14228 = h5058;
                        var G__14229 = i5059;
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__14221, G__14222, G__14223, G__14224, G__14225, G__14226, G__14227, G__14228, G__14229) : f.call(null, G__14221, G__14222, G__14223, G__14224, G__14225, G__14226, G__14227, G__14228, G__14229);
                      }
                    } else {
                      var j5060 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a5051, b5052, c5053, d5054, e5055, f5056, g5057, h5058, i5059, j5060);
                        } else {
                          var G__14230 = a5051;
                          var G__14231 = b5052;
                          var G__14232 = c5053;
                          var G__14233 = d5054;
                          var G__14234 = e5055;
                          var G__14235 = f5056;
                          var G__14236 = g5057;
                          var G__14237 = h5058;
                          var G__14238 = i5059;
                          var G__14239 = j5060;
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__14230, G__14231, G__14232, G__14233, G__14234, G__14235, G__14236, G__14237, G__14238, G__14239) : f.call(null, G__14230, G__14231, G__14232, G__14233, G__14234, G__14235, G__14236, G__14237, G__14238, G__14239);
                        }
                      } else {
                        var k5061 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a5051, b5052, c5053, d5054, e5055, f5056, g5057, h5058, i5059, j5060, k5061);
                          } else {
                            var G__14240 = a5051;
                            var G__14241 = b5052;
                            var G__14242 = c5053;
                            var G__14243 = d5054;
                            var G__14244 = e5055;
                            var G__14245 = f5056;
                            var G__14246 = g5057;
                            var G__14247 = h5058;
                            var G__14248 = i5059;
                            var G__14249 = j5060;
                            var G__14250 = k5061;
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__14240, G__14241, G__14242, G__14243, G__14244, G__14245, G__14246, G__14247, G__14248, G__14249, G__14250) : f.call(null, G__14240, G__14241, G__14242, G__14243, G__14244, G__14245, G__14246, G__14247, G__14248, G__14249, G__14250);
                          }
                        } else {
                          var l5062 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a5051, b5052, c5053, d5054, e5055, f5056, g5057, h5058, i5059, j5060, k5061, l5062);
                            } else {
                              var G__14251 = a5051;
                              var G__14252 = b5052;
                              var G__14253 = c5053;
                              var G__14254 = d5054;
                              var G__14255 = e5055;
                              var G__14256 = f5056;
                              var G__14257 = g5057;
                              var G__14258 = h5058;
                              var G__14259 = i5059;
                              var G__14260 = j5060;
                              var G__14261 = k5061;
                              var G__14262 = l5062;
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__14251, G__14252, G__14253, G__14254, G__14255, G__14256, G__14257, G__14258, G__14259, G__14260, G__14261, G__14262) : f.call(null, G__14251, G__14252, G__14253, G__14254, G__14255, G__14256, G__14257, G__14258, G__14259, G__14260, G__14261, G__14262);
                            }
                          } else {
                            var m5063 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a5051, b5052, c5053, d5054, e5055, f5056, g5057, h5058, i5059, j5060, k5061, l5062, m5063);
                              } else {
                                var G__14263 = a5051;
                                var G__14264 = b5052;
                                var G__14265 = c5053;
                                var G__14266 = d5054;
                                var G__14267 = e5055;
                                var G__14268 = f5056;
                                var G__14269 = g5057;
                                var G__14270 = h5058;
                                var G__14271 = i5059;
                                var G__14272 = j5060;
                                var G__14273 = k5061;
                                var G__14274 = l5062;
                                var G__14275 = m5063;
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__14263, G__14264, G__14265, G__14266, G__14267, G__14268, G__14269, G__14270, G__14271, G__14272, G__14273, G__14274, G__14275) : f.call(null, G__14263, G__14264, G__14265, G__14266, G__14267, G__14268, G__14269, G__14270, G__14271, G__14272, G__14273, G__14274, G__14275);
                              }
                            } else {
                              var n5064 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a5051, b5052, c5053, d5054, e5055, f5056, g5057, h5058, i5059, j5060, k5061, l5062, m5063, n5064);
                                } else {
                                  var G__14276 = a5051;
                                  var G__14277 = b5052;
                                  var G__14278 = c5053;
                                  var G__14279 = d5054;
                                  var G__14280 = e5055;
                                  var G__14281 = f5056;
                                  var G__14282 = g5057;
                                  var G__14283 = h5058;
                                  var G__14284 = i5059;
                                  var G__14285 = j5060;
                                  var G__14286 = k5061;
                                  var G__14287 = l5062;
                                  var G__14288 = m5063;
                                  var G__14289 = n5064;
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__14276, G__14277, G__14278, G__14279, G__14280, G__14281, G__14282, G__14283, G__14284, G__14285, G__14286, G__14287, G__14288, G__14289) : f.call(null, G__14276, G__14277, G__14278, G__14279, G__14280, G__14281, G__14282, G__14283, G__14284, G__14285, G__14286, G__14287, G__14288, G__14289);
                                }
                              } else {
                                var o5065 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a5051, b5052, c5053, d5054, e5055, f5056, g5057, h5058, i5059, j5060, k5061, l5062, m5063, n5064, o5065);
                                  } else {
                                    var G__14290 = a5051;
                                    var G__14291 = b5052;
                                    var G__14292 = c5053;
                                    var G__14293 = d5054;
                                    var G__14294 = e5055;
                                    var G__14295 = f5056;
                                    var G__14296 = g5057;
                                    var G__14297 = h5058;
                                    var G__14298 = i5059;
                                    var G__14299 = j5060;
                                    var G__14300 = k5061;
                                    var G__14301 = l5062;
                                    var G__14302 = m5063;
                                    var G__14303 = n5064;
                                    var G__14304 = o5065;
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__14290, G__14291, G__14292, G__14293, G__14294, G__14295, G__14296, G__14297, G__14298, G__14299, G__14300, G__14301, G__14302, G__14303, G__14304) : f.call(null, G__14290, G__14291, G__14292, G__14293, G__14294, G__14295, G__14296, G__14297, G__14298, G__14299, G__14300, G__14301, G__14302, G__14303, G__14304);
                                  }
                                } else {
                                  var p5066 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a5051, b5052, c5053, d5054, e5055, f5056, g5057, h5058, i5059, j5060, k5061, l5062, m5063, n5064, o5065, p5066);
                                    } else {
                                      var G__14305 = a5051;
                                      var G__14306 = b5052;
                                      var G__14307 = c5053;
                                      var G__14308 = d5054;
                                      var G__14309 = e5055;
                                      var G__14310 = f5056;
                                      var G__14311 = g5057;
                                      var G__14312 = h5058;
                                      var G__14313 = i5059;
                                      var G__14314 = j5060;
                                      var G__14315 = k5061;
                                      var G__14316 = l5062;
                                      var G__14317 = m5063;
                                      var G__14318 = n5064;
                                      var G__14319 = o5065;
                                      var G__14320 = p5066;
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__14305, G__14306, G__14307, G__14308, G__14309, G__14310, G__14311, G__14312, G__14313, G__14314, G__14315, G__14316, G__14317, G__14318, G__14319, G__14320) : f.call(null, G__14305, G__14306, G__14307, G__14308, G__14309, G__14310, G__14311, G__14312, G__14313, G__14314, G__14315, G__14316, G__14317, G__14318, G__14319, G__14320);
                                    }
                                  } else {
                                    var q5067 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a5051, b5052, c5053, d5054, e5055, f5056, g5057, h5058, i5059, j5060, k5061, l5062, m5063, n5064, o5065, p5066, q5067);
                                      } else {
                                        var G__14321 = a5051;
                                        var G__14322 = b5052;
                                        var G__14323 = c5053;
                                        var G__14324 = d5054;
                                        var G__14325 = e5055;
                                        var G__14326 = f5056;
                                        var G__14327 = g5057;
                                        var G__14328 = h5058;
                                        var G__14329 = i5059;
                                        var G__14330 = j5060;
                                        var G__14331 = k5061;
                                        var G__14332 = l5062;
                                        var G__14333 = m5063;
                                        var G__14334 = n5064;
                                        var G__14335 = o5065;
                                        var G__14336 = p5066;
                                        var G__14337 = q5067;
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__14321, G__14322, G__14323, G__14324, G__14325, G__14326, G__14327, G__14328, G__14329, G__14330, G__14331, G__14332, G__14333, G__14334, G__14335, G__14336, G__14337) : f.call(null, G__14321, G__14322, G__14323, G__14324, G__14325, G__14326, G__14327, G__14328, G__14329, G__14330, G__14331, G__14332, G__14333, G__14334, G__14335, G__14336, G__14337);
                                      }
                                    } else {
                                      var r5068 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a5051, b5052, c5053, d5054, e5055, f5056, g5057, h5058, i5059, j5060, k5061, l5062, m5063, n5064, o5065, p5066, q5067, r5068);
                                        } else {
                                          var G__14338 = a5051;
                                          var G__14339 = b5052;
                                          var G__14340 = c5053;
                                          var G__14341 = d5054;
                                          var G__14342 = e5055;
                                          var G__14343 = f5056;
                                          var G__14344 = g5057;
                                          var G__14345 = h5058;
                                          var G__14346 = i5059;
                                          var G__14347 = j5060;
                                          var G__14348 = k5061;
                                          var G__14349 = l5062;
                                          var G__14350 = m5063;
                                          var G__14351 = n5064;
                                          var G__14352 = o5065;
                                          var G__14353 = p5066;
                                          var G__14354 = q5067;
                                          var G__14355 = r5068;
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__14338, G__14339, G__14340, G__14341, G__14342, G__14343, G__14344, G__14345, G__14346, G__14347, G__14348, G__14349, G__14350, G__14351, G__14352, G__14353, G__14354, G__14355) : f.call(null, G__14338, G__14339, G__14340, G__14341, G__14342, G__14343, G__14344, G__14345, G__14346, G__14347, G__14348, G__14349, G__14350, G__14351, G__14352, G__14353, G__14354, G__14355);
                                        }
                                      } else {
                                        var s5069 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a5051, b5052, c5053, d5054, e5055, f5056, g5057, h5058, i5059, j5060, k5061, l5062, m5063, n5064, o5065, p5066, q5067, r5068, s5069);
                                          } else {
                                            var G__14356 = a5051;
                                            var G__14357 = b5052;
                                            var G__14358 = c5053;
                                            var G__14359 = d5054;
                                            var G__14360 = e5055;
                                            var G__14361 = f5056;
                                            var G__14362 = g5057;
                                            var G__14363 = h5058;
                                            var G__14364 = i5059;
                                            var G__14365 = j5060;
                                            var G__14366 = k5061;
                                            var G__14367 = l5062;
                                            var G__14368 = m5063;
                                            var G__14369 = n5064;
                                            var G__14370 = o5065;
                                            var G__14371 = p5066;
                                            var G__14372 = q5067;
                                            var G__14373 = r5068;
                                            var G__14374 = s5069;
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__14356, G__14357, G__14358, G__14359, G__14360, G__14361, G__14362, G__14363, G__14364, G__14365, G__14366, G__14367, G__14368, G__14369, G__14370, G__14371, G__14372, G__14373, G__14374) : f.call(null, G__14356, G__14357, G__14358, G__14359, G__14360, G__14361, G__14362, G__14363, G__14364, G__14365, G__14366, G__14367, G__14368, G__14369, G__14370, G__14371, G__14372, G__14373, 
                                            G__14374);
                                          }
                                        } else {
                                          var t5070 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a5051, b5052, c5053, d5054, e5055, f5056, g5057, h5058, i5059, j5060, k5061, l5062, m5063, n5064, o5065, p5066, q5067, r5068, s5069, t5070);
                                            } else {
                                              var G__14375 = a5051;
                                              var G__14376 = b5052;
                                              var G__14377 = c5053;
                                              var G__14378 = d5054;
                                              var G__14379 = e5055;
                                              var G__14380 = f5056;
                                              var G__14381 = g5057;
                                              var G__14382 = h5058;
                                              var G__14383 = i5059;
                                              var G__14384 = j5060;
                                              var G__14385 = k5061;
                                              var G__14386 = l5062;
                                              var G__14387 = m5063;
                                              var G__14388 = n5064;
                                              var G__14389 = o5065;
                                              var G__14390 = p5066;
                                              var G__14391 = q5067;
                                              var G__14392 = r5068;
                                              var G__14393 = s5069;
                                              var G__14394 = t5070;
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__14375, G__14376, G__14377, G__14378, G__14379, G__14380, G__14381, G__14382, G__14383, G__14384, G__14385, G__14386, G__14387, G__14388, G__14389, G__14390, G__14391, G__14392, G__14393, G__14394) : f.call(null, G__14375, G__14376, G__14377, G__14378, G__14379, G__14380, G__14381, G__14382, G__14383, G__14384, G__14385, G__14386, G__14387, G__14388, G__14389, G__14390, G__14391, 
                                              G__14392, G__14393, G__14394);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var cljs$core$apply = null;
  var cljs$core$apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array(args));
    }
  };
  var cljs$core$apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var cljs$core$apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var cljs$core$apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var cljs$core$apply__6 = function() {
    var G__14395__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to(f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array(arglist));
      }
    };
    var G__14395 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        var G__14396__i = 0, G__14396__a = new Array(arguments.length - 5);
        while (G__14396__i < G__14396__a.length) {
          G__14396__a[G__14396__i] = arguments[G__14396__i + 5];
          ++G__14396__i;
        }
        args = new cljs.core.IndexedSeq(G__14396__a, 0);
      }
      return G__14395__delegate.call(this, f, a, b, c, d, args);
    };
    G__14395.cljs$lang$maxFixedArity = 5;
    G__14395.cljs$lang$applyTo = function(arglist__14397) {
      var f = cljs.core.first(arglist__14397);
      arglist__14397 = cljs.core.next(arglist__14397);
      var a = cljs.core.first(arglist__14397);
      arglist__14397 = cljs.core.next(arglist__14397);
      var b = cljs.core.first(arglist__14397);
      arglist__14397 = cljs.core.next(arglist__14397);
      var c = cljs.core.first(arglist__14397);
      arglist__14397 = cljs.core.next(arglist__14397);
      var d = cljs.core.first(arglist__14397);
      var args = cljs.core.rest(arglist__14397);
      return G__14395__delegate(f, a, b, c, d, args);
    };
    G__14395.cljs$core$IFn$_invoke$arity$variadic = G__14395__delegate;
    return G__14395;
  }();
  cljs$core$apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$apply__2.call(this, f, a);
      case 3:
        return cljs$core$apply__3.call(this, f, a, b);
      case 4:
        return cljs$core$apply__4.call(this, f, a, b, c);
      case 5:
        return cljs$core$apply__5.call(this, f, a, b, c, d);
      default:
        var G__14398 = null;
        if (arguments.length > 5) {
          var G__14399__i = 0, G__14399__a = new Array(arguments.length - 5);
          while (G__14399__i < G__14399__a.length) {
            G__14399__a[G__14399__i] = arguments[G__14399__i + 5];
            ++G__14399__i;
          }
          G__14398 = new cljs.core.IndexedSeq(G__14399__a, 0);
        }
        return cljs$core$apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, G__14398);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$apply.cljs$lang$maxFixedArity = 5;
  cljs$core$apply.cljs$lang$applyTo = cljs$core$apply__6.cljs$lang$applyTo;
  cljs$core$apply.cljs$core$IFn$_invoke$arity$2 = cljs$core$apply__2;
  cljs$core$apply.cljs$core$IFn$_invoke$arity$3 = cljs$core$apply__3;
  cljs$core$apply.cljs$core$IFn$_invoke$arity$4 = cljs$core$apply__4;
  cljs$core$apply.cljs$core$IFn$_invoke$arity$5 = cljs$core$apply__5;
  cljs$core$apply.cljs$core$IFn$_invoke$arity$variadic = cljs$core$apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$apply;
}();
cljs.core.vary_meta = function() {
  var cljs$core$vary_meta = null;
  var cljs$core$vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta(obj, function() {
      var G__14415 = cljs.core.meta(obj);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14415) : f.call(null, G__14415);
    }());
  };
  var cljs$core$vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta(obj, function() {
      var G__14416 = cljs.core.meta(obj);
      var G__14417 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14416, G__14417) : f.call(null, G__14416, G__14417);
    }());
  };
  var cljs$core$vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta(obj, function() {
      var G__14418 = cljs.core.meta(obj);
      var G__14419 = a;
      var G__14420 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14418, G__14419, G__14420) : f.call(null, G__14418, G__14419, G__14420);
    }());
  };
  var cljs$core$vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta(obj, function() {
      var G__14421 = cljs.core.meta(obj);
      var G__14422 = a;
      var G__14423 = b;
      var G__14424 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14421, G__14422, G__14423, G__14424) : f.call(null, G__14421, G__14422, G__14423, G__14424);
    }());
  };
  var cljs$core$vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta(obj, function() {
      var G__14425 = cljs.core.meta(obj);
      var G__14426 = a;
      var G__14427 = b;
      var G__14428 = c;
      var G__14429 = d;
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__14425, G__14426, G__14427, G__14428, G__14429) : f.call(null, G__14425, G__14426, G__14427, G__14428, G__14429);
    }());
  };
  var cljs$core$vary_meta__7 = function() {
    var G__14430__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
    };
    var G__14430 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        var G__14431__i = 0, G__14431__a = new Array(arguments.length - 6);
        while (G__14431__i < G__14431__a.length) {
          G__14431__a[G__14431__i] = arguments[G__14431__i + 6];
          ++G__14431__i;
        }
        args = new cljs.core.IndexedSeq(G__14431__a, 0);
      }
      return G__14430__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__14430.cljs$lang$maxFixedArity = 6;
    G__14430.cljs$lang$applyTo = function(arglist__14432) {
      var obj = cljs.core.first(arglist__14432);
      arglist__14432 = cljs.core.next(arglist__14432);
      var f = cljs.core.first(arglist__14432);
      arglist__14432 = cljs.core.next(arglist__14432);
      var a = cljs.core.first(arglist__14432);
      arglist__14432 = cljs.core.next(arglist__14432);
      var b = cljs.core.first(arglist__14432);
      arglist__14432 = cljs.core.next(arglist__14432);
      var c = cljs.core.first(arglist__14432);
      arglist__14432 = cljs.core.next(arglist__14432);
      var d = cljs.core.first(arglist__14432);
      var args = cljs.core.rest(arglist__14432);
      return G__14430__delegate(obj, f, a, b, c, d, args);
    };
    G__14430.cljs$core$IFn$_invoke$arity$variadic = G__14430__delegate;
    return G__14430;
  }();
  cljs$core$vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$vary_meta__2.call(this, obj, f);
      case 3:
        return cljs$core$vary_meta__3.call(this, obj, f, a);
      case 4:
        return cljs$core$vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return cljs$core$vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return cljs$core$vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        var G__14433 = null;
        if (arguments.length > 6) {
          var G__14434__i = 0, G__14434__a = new Array(arguments.length - 6);
          while (G__14434__i < G__14434__a.length) {
            G__14434__a[G__14434__i] = arguments[G__14434__i + 6];
            ++G__14434__i;
          }
          G__14433 = new cljs.core.IndexedSeq(G__14434__a, 0);
        }
        return cljs$core$vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, G__14433);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$vary_meta.cljs$lang$maxFixedArity = 6;
  cljs$core$vary_meta.cljs$lang$applyTo = cljs$core$vary_meta__7.cljs$lang$applyTo;
  cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$2 = cljs$core$vary_meta__2;
  cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$3 = cljs$core$vary_meta__3;
  cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$4 = cljs$core$vary_meta__4;
  cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$5 = cljs$core$vary_meta__5;
  cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$6 = cljs$core$vary_meta__6;
  cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$variadic = cljs$core$vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var cljs$core$not_EQ_ = null;
  var cljs$core$not_EQ___1 = function(x) {
    return false;
  };
  var cljs$core$not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
  };
  var cljs$core$not_EQ___3 = function() {
    var G__14435__delegate = function(x, y, more) {
      return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
    };
    var G__14435 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__14436__i = 0, G__14436__a = new Array(arguments.length - 2);
        while (G__14436__i < G__14436__a.length) {
          G__14436__a[G__14436__i] = arguments[G__14436__i + 2];
          ++G__14436__i;
        }
        more = new cljs.core.IndexedSeq(G__14436__a, 0);
      }
      return G__14435__delegate.call(this, x, y, more);
    };
    G__14435.cljs$lang$maxFixedArity = 2;
    G__14435.cljs$lang$applyTo = function(arglist__14437) {
      var x = cljs.core.first(arglist__14437);
      arglist__14437 = cljs.core.next(arglist__14437);
      var y = cljs.core.first(arglist__14437);
      var more = cljs.core.rest(arglist__14437);
      return G__14435__delegate(x, y, more);
    };
    G__14435.cljs$core$IFn$_invoke$arity$variadic = G__14435__delegate;
    return G__14435;
  }();
  cljs$core$not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$not_EQ___1.call(this, x);
      case 2:
        return cljs$core$not_EQ___2.call(this, x, y);
      default:
        var G__14438 = null;
        if (arguments.length > 2) {
          var G__14439__i = 0, G__14439__a = new Array(arguments.length - 2);
          while (G__14439__i < G__14439__a.length) {
            G__14439__a[G__14439__i] = arguments[G__14439__i + 2];
            ++G__14439__i;
          }
          G__14438 = new cljs.core.IndexedSeq(G__14439__a, 0);
        }
        return cljs$core$not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__14438);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$not_EQ_.cljs$lang$maxFixedArity = 2;
  cljs$core$not_EQ_.cljs$lang$applyTo = cljs$core$not_EQ___3.cljs$lang$applyTo;
  cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$not_EQ___1;
  cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$not_EQ___2;
  cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$not_EQ_;
}();
cljs.core.not_empty = function cljs$core$not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function cljs$core$nil_iter() {
  if (typeof cljs.core.t14443 !== "undefined") {
  } else {
    cljs.core.t14443 = function(nil_iter, meta14444) {
      this.nil_iter = nil_iter;
      this.meta14444 = meta14444;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.t14443.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t14443.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t14443.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t14443.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14445) {
      var self__ = this;
      var _14445__$1 = this;
      return self__.meta14444;
    };
    cljs.core.t14443.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14445, meta14444__$1) {
      var self__ = this;
      var _14445__$1 = this;
      return new cljs.core.t14443(self__.nil_iter, meta14444__$1);
    };
    cljs.core.t14443.cljs$lang$type = true;
    cljs.core.t14443.cljs$lang$ctorStr = "cljs.core/t14443";
    cljs.core.t14443.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
      return cljs.core._write(writer__4702__auto__, "cljs.core/t14443");
    };
    cljs.core.__GT_t14443 = function cljs$core$nil_iter_$___GT_t14443(nil_iter__$1, meta14444) {
      return new cljs.core.t14443(nil_iter__$1, meta14444);
    };
  }
  return new cljs.core.t14443(cljs$core$nil_iter, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function cljs$core$__GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function cljs$core$string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function cljs$core$__GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function cljs$core$array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return!(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function cljs$core$__GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function cljs$core$seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function cljs$core$iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.iterable_QMARK_(coll)) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function cljs$core$lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__4110__auto__ = !(lt.stepper == null);
      if (and__4110__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__4110__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__14446 = lt;
        var G__14447 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__14446, G__14447) : self__.xform.call(null, G__14446, G__14447);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__14448 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__14448) : self__.xform.call(null, G__14448);
  }
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function cljs$core$__GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function cljs$core$stepper(xform, iter) {
  var stepfn = function() {
    var cljs$core$stepper_$_stepfn = null;
    var cljs$core$stepper_$_stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var cljs$core$stepper_$_stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepper_$_stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepper_$_stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepper_$_stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
    return cljs$core$stepper_$_stepfn;
  }();
  return new cljs.core.Stepper(function() {
    var G__14450 = stepfn;
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__14450) : xform.call(null, G__14450);
  }(), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__14452 = cljs.core.next(iters__$1);
        iters__$1 = G__14452;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__5007__auto___14453 = self__.iters.length;
  var i_14454 = 0;
  while (true) {
    if (i_14454 < n__5007__auto___14453) {
      self__.nexts[i_14454] = self__.iters[i_14454].next();
      var G__14455 = i_14454 + 1;
      i_14454 = G__14455;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__4110__auto__ = !(lt.stepper == null);
      if (and__4110__auto__) {
        return this$.hasNext();
      } else {
        return and__4110__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__14451 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__14451) : self__.xform.call(null, G__14451);
  }
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function cljs$core$__GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function() {
  var cljs$core$multi_stepper = null;
  var cljs$core$multi_stepper__2 = function(xform, iters) {
    return cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
  };
  var cljs$core$multi_stepper__3 = function(xform, iters, nexts) {
    var stepfn = function() {
      var cljs$core$multi_stepper_$_stepfn = null;
      var cljs$core$multi_stepper_$_stepfn__1 = function(result) {
        var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
        lt.stepper = null;
        return lt;
      };
      var cljs$core$multi_stepper_$_stepfn__2 = function(result, input) {
        var lt = result;
        lt.first = input;
        lt.rest = cljs.core.lazy_transformer(lt.stepper);
        lt.stepper = null;
        return lt.rest;
      };
      cljs$core$multi_stepper_$_stepfn = function(result, input) {
        switch(arguments.length) {
          case 1:
            return cljs$core$multi_stepper_$_stepfn__1.call(this, result);
          case 2:
            return cljs$core$multi_stepper_$_stepfn__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$multi_stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$multi_stepper_$_stepfn__1;
      cljs$core$multi_stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$multi_stepper_$_stepfn__2;
      return cljs$core$multi_stepper_$_stepfn;
    }();
    return new cljs.core.MultiStepper(function() {
      var G__14460 = stepfn;
      return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__14460) : xform.call(null, G__14460);
    }(), iters, nexts);
  };
  cljs$core$multi_stepper = function(xform, iters, nexts) {
    switch(arguments.length) {
      case 2:
        return cljs$core$multi_stepper__2.call(this, xform, iters);
      case 3:
        return cljs$core$multi_stepper__3.call(this, xform, iters, nexts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$2 = cljs$core$multi_stepper__2;
  cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$3 = cljs$core$multi_stepper__3;
  return cljs$core$multi_stepper;
}();
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function cljs$core$__GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5098__auto__ = this;
  return cljs.core.es6_iterator(this__5098__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__14461_14465 = cljs.core.seq(colls);
  var chunk__14462_14466 = null;
  var count__14463_14467 = 0;
  var i__14464_14468 = 0;
  while (true) {
    if (i__14464_14468 < count__14463_14467) {
      var coll_14469 = chunk__14462_14466.cljs$core$IIndexed$_nth$arity$2(null, i__14464_14468);
      iters.push(cljs.core.iter(coll_14469));
      var G__14470 = seq__14461_14465;
      var G__14471 = chunk__14462_14466;
      var G__14472 = count__14463_14467;
      var G__14473 = i__14464_14468 + 1;
      seq__14461_14465 = G__14470;
      chunk__14462_14466 = G__14471;
      count__14463_14467 = G__14472;
      i__14464_14468 = G__14473;
      continue;
    } else {
      var temp__4126__auto___14474 = cljs.core.seq(seq__14461_14465);
      if (temp__4126__auto___14474) {
        var seq__14461_14475__$1 = temp__4126__auto___14474;
        if (cljs.core.chunked_seq_QMARK_(seq__14461_14475__$1)) {
          var c__4907__auto___14476 = cljs.core.chunk_first(seq__14461_14475__$1);
          var G__14477 = cljs.core.chunk_rest(seq__14461_14475__$1);
          var G__14478 = c__4907__auto___14476;
          var G__14479 = cljs.core.count(c__4907__auto___14476);
          var G__14480 = 0;
          seq__14461_14465 = G__14477;
          chunk__14462_14466 = G__14478;
          count__14463_14467 = G__14479;
          i__14464_14468 = G__14480;
          continue;
        } else {
          var coll_14481 = cljs.core.first(seq__14461_14475__$1);
          iters.push(cljs.core.iter(coll_14481));
          var G__14482 = cljs.core.next(seq__14461_14475__$1);
          var G__14483 = null;
          var G__14484 = 0;
          var G__14485 = 0;
          seq__14461_14465 = G__14482;
          chunk__14462_14466 = G__14483;
          count__14463_14467 = G__14484;
          i__14464_14468 = G__14485;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function() {
  var cljs$core$sequence = null;
  var cljs$core$sequence__1 = function(coll) {
    if (cljs.core.seq_QMARK_(coll)) {
      return coll;
    } else {
      var or__4122__auto__ = cljs.core.seq(coll);
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  };
  var cljs$core$sequence__2 = function(xform, coll) {
    return cljs.core.LazyTransformer.create(xform, coll);
  };
  var cljs$core$sequence__3 = function() {
    var G__14486__delegate = function(xform, coll, colls) {
      return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
    };
    var G__14486 = function(xform, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        var G__14487__i = 0, G__14487__a = new Array(arguments.length - 2);
        while (G__14487__i < G__14487__a.length) {
          G__14487__a[G__14487__i] = arguments[G__14487__i + 2];
          ++G__14487__i;
        }
        colls = new cljs.core.IndexedSeq(G__14487__a, 0);
      }
      return G__14486__delegate.call(this, xform, coll, colls);
    };
    G__14486.cljs$lang$maxFixedArity = 2;
    G__14486.cljs$lang$applyTo = function(arglist__14488) {
      var xform = cljs.core.first(arglist__14488);
      arglist__14488 = cljs.core.next(arglist__14488);
      var coll = cljs.core.first(arglist__14488);
      var colls = cljs.core.rest(arglist__14488);
      return G__14486__delegate(xform, coll, colls);
    };
    G__14486.cljs$core$IFn$_invoke$arity$variadic = G__14486__delegate;
    return G__14486;
  }();
  cljs$core$sequence = function(xform, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$sequence__1.call(this, xform);
      case 2:
        return cljs$core$sequence__2.call(this, xform, coll);
      default:
        var G__14489 = null;
        if (arguments.length > 2) {
          var G__14490__i = 0, G__14490__a = new Array(arguments.length - 2);
          while (G__14490__i < G__14490__a.length) {
            G__14490__a[G__14490__i] = arguments[G__14490__i + 2];
            ++G__14490__i;
          }
          G__14489 = new cljs.core.IndexedSeq(G__14490__a, 0);
        }
        return cljs$core$sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform, coll, G__14489);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$sequence.cljs$lang$maxFixedArity = 2;
  cljs$core$sequence.cljs$lang$applyTo = cljs$core$sequence__3.cljs$lang$applyTo;
  cljs$core$sequence.cljs$core$IFn$_invoke$arity$1 = cljs$core$sequence__1;
  cljs$core$sequence.cljs$core$IFn$_invoke$arity$2 = cljs$core$sequence__2;
  cljs$core$sequence.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sequence__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$sequence;
}();
cljs.core.every_QMARK_ = function cljs$core$every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__14492 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14492) : pred.call(null, G__14492);
      }())) {
        var G__14493 = pred;
        var G__14494 = cljs.core.next(coll);
        pred = G__14493;
        coll = G__14494;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function cljs$core$not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function cljs$core$some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__4122__auto__ = function() {
        var G__14498 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14498) : pred.call(null, G__14498);
      }();
      if (cljs.core.truth_(or__4122__auto__)) {
        return or__4122__auto__;
      } else {
        var G__14499 = pred;
        var G__14500 = cljs.core.next(coll);
        pred = G__14499;
        coll = G__14500;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function cljs$core$not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function cljs$core$even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return(n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function cljs$core$odd_QMARK_(n) {
  return!cljs.core.even_QMARK_(n);
};
cljs.core.complement = function cljs$core$complement(f) {
  return function() {
    var G__14507 = null;
    var G__14507__0 = function() {
      return cljs.core.not(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }());
    };
    var G__14507__1 = function(x) {
      return cljs.core.not(function() {
        var G__14504 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14504) : f.call(null, G__14504);
      }());
    };
    var G__14507__2 = function(x, y) {
      return cljs.core.not(function() {
        var G__14505 = x;
        var G__14506 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14505, G__14506) : f.call(null, G__14505, G__14506);
      }());
    };
    var G__14507__3 = function() {
      var G__14508__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__14508 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__14509__i = 0, G__14509__a = new Array(arguments.length - 2);
          while (G__14509__i < G__14509__a.length) {
            G__14509__a[G__14509__i] = arguments[G__14509__i + 2];
            ++G__14509__i;
          }
          zs = new cljs.core.IndexedSeq(G__14509__a, 0);
        }
        return G__14508__delegate.call(this, x, y, zs);
      };
      G__14508.cljs$lang$maxFixedArity = 2;
      G__14508.cljs$lang$applyTo = function(arglist__14510) {
        var x = cljs.core.first(arglist__14510);
        arglist__14510 = cljs.core.next(arglist__14510);
        var y = cljs.core.first(arglist__14510);
        var zs = cljs.core.rest(arglist__14510);
        return G__14508__delegate(x, y, zs);
      };
      G__14508.cljs$core$IFn$_invoke$arity$variadic = G__14508__delegate;
      return G__14508;
    }();
    G__14507 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__14507__0.call(this);
        case 1:
          return G__14507__1.call(this, x);
        case 2:
          return G__14507__2.call(this, x, y);
        default:
          var G__14511 = null;
          if (arguments.length > 2) {
            var G__14512__i = 0, G__14512__a = new Array(arguments.length - 2);
            while (G__14512__i < G__14512__a.length) {
              G__14512__a[G__14512__i] = arguments[G__14512__i + 2];
              ++G__14512__i;
            }
            G__14511 = new cljs.core.IndexedSeq(G__14512__a, 0);
          }
          return G__14507__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__14511);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__14507.cljs$lang$maxFixedArity = 2;
    G__14507.cljs$lang$applyTo = G__14507__3.cljs$lang$applyTo;
    G__14507.cljs$core$IFn$_invoke$arity$0 = G__14507__0;
    G__14507.cljs$core$IFn$_invoke$arity$1 = G__14507__1;
    G__14507.cljs$core$IFn$_invoke$arity$2 = G__14507__2;
    G__14507.cljs$core$IFn$_invoke$arity$variadic = G__14507__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__14507;
  }();
};
cljs.core.constantly = function cljs$core$constantly(x) {
  return function() {
    var G__14513__delegate = function(args) {
      return x;
    };
    var G__14513 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__14514__i = 0, G__14514__a = new Array(arguments.length - 0);
        while (G__14514__i < G__14514__a.length) {
          G__14514__a[G__14514__i] = arguments[G__14514__i + 0];
          ++G__14514__i;
        }
        args = new cljs.core.IndexedSeq(G__14514__a, 0);
      }
      return G__14513__delegate.call(this, args);
    };
    G__14513.cljs$lang$maxFixedArity = 0;
    G__14513.cljs$lang$applyTo = function(arglist__14515) {
      var args = cljs.core.seq(arglist__14515);
      return G__14513__delegate(args);
    };
    G__14513.cljs$core$IFn$_invoke$arity$variadic = G__14513__delegate;
    return G__14513;
  }();
};
cljs.core.comp = function() {
  var cljs$core$comp = null;
  var cljs$core$comp__0 = function() {
    return cljs.core.identity;
  };
  var cljs$core$comp__1 = function(f) {
    return f;
  };
  var cljs$core$comp__2 = function(f, g) {
    return function() {
      var G__14570 = null;
      var G__14570__0 = function() {
        var G__14543 = function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14543) : f.call(null, G__14543);
      };
      var G__14570__1 = function(x) {
        var G__14544 = function() {
          var G__14545 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14545) : g.call(null, G__14545);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14544) : f.call(null, G__14544);
      };
      var G__14570__2 = function(x, y) {
        var G__14546 = function() {
          var G__14547 = x;
          var G__14548 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__14547, G__14548) : g.call(null, G__14547, G__14548);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14546) : f.call(null, G__14546);
      };
      var G__14570__3 = function(x, y, z) {
        var G__14549 = function() {
          var G__14550 = x;
          var G__14551 = y;
          var G__14552 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__14550, G__14551, G__14552) : g.call(null, G__14550, G__14551, G__14552);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14549) : f.call(null, G__14549);
      };
      var G__14570__4 = function() {
        var G__14571__delegate = function(x, y, z, args) {
          var G__14553 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14553) : f.call(null, G__14553);
        };
        var G__14571 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14572__i = 0, G__14572__a = new Array(arguments.length - 3);
            while (G__14572__i < G__14572__a.length) {
              G__14572__a[G__14572__i] = arguments[G__14572__i + 3];
              ++G__14572__i;
            }
            args = new cljs.core.IndexedSeq(G__14572__a, 0);
          }
          return G__14571__delegate.call(this, x, y, z, args);
        };
        G__14571.cljs$lang$maxFixedArity = 3;
        G__14571.cljs$lang$applyTo = function(arglist__14573) {
          var x = cljs.core.first(arglist__14573);
          arglist__14573 = cljs.core.next(arglist__14573);
          var y = cljs.core.first(arglist__14573);
          arglist__14573 = cljs.core.next(arglist__14573);
          var z = cljs.core.first(arglist__14573);
          var args = cljs.core.rest(arglist__14573);
          return G__14571__delegate(x, y, z, args);
        };
        G__14571.cljs$core$IFn$_invoke$arity$variadic = G__14571__delegate;
        return G__14571;
      }();
      G__14570 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__14570__0.call(this);
          case 1:
            return G__14570__1.call(this, x);
          case 2:
            return G__14570__2.call(this, x, y);
          case 3:
            return G__14570__3.call(this, x, y, z);
          default:
            var G__14574 = null;
            if (arguments.length > 3) {
              var G__14575__i = 0, G__14575__a = new Array(arguments.length - 3);
              while (G__14575__i < G__14575__a.length) {
                G__14575__a[G__14575__i] = arguments[G__14575__i + 3];
                ++G__14575__i;
              }
              G__14574 = new cljs.core.IndexedSeq(G__14575__a, 0);
            }
            return G__14570__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14574);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14570.cljs$lang$maxFixedArity = 3;
      G__14570.cljs$lang$applyTo = G__14570__4.cljs$lang$applyTo;
      G__14570.cljs$core$IFn$_invoke$arity$0 = G__14570__0;
      G__14570.cljs$core$IFn$_invoke$arity$1 = G__14570__1;
      G__14570.cljs$core$IFn$_invoke$arity$2 = G__14570__2;
      G__14570.cljs$core$IFn$_invoke$arity$3 = G__14570__3;
      G__14570.cljs$core$IFn$_invoke$arity$variadic = G__14570__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__14570;
    }();
  };
  var cljs$core$comp__3 = function(f, g, h) {
    return function() {
      var G__14576 = null;
      var G__14576__0 = function() {
        var G__14554 = function() {
          var G__14555 = function() {
            return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14555) : g.call(null, G__14555);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14554) : f.call(null, G__14554);
      };
      var G__14576__1 = function(x) {
        var G__14556 = function() {
          var G__14557 = function() {
            var G__14558 = x;
            return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__14558) : h.call(null, G__14558);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14557) : g.call(null, G__14557);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14556) : f.call(null, G__14556);
      };
      var G__14576__2 = function(x, y) {
        var G__14559 = function() {
          var G__14560 = function() {
            var G__14561 = x;
            var G__14562 = y;
            return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__14561, G__14562) : h.call(null, G__14561, G__14562);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14560) : g.call(null, G__14560);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14559) : f.call(null, G__14559);
      };
      var G__14576__3 = function(x, y, z) {
        var G__14563 = function() {
          var G__14564 = function() {
            var G__14565 = x;
            var G__14566 = y;
            var G__14567 = z;
            return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__14565, G__14566, G__14567) : h.call(null, G__14565, G__14566, G__14567);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14564) : g.call(null, G__14564);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14563) : f.call(null, G__14563);
      };
      var G__14576__4 = function() {
        var G__14577__delegate = function(x, y, z, args) {
          var G__14568 = function() {
            var G__14569 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
            return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14569) : g.call(null, G__14569);
          }();
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14568) : f.call(null, G__14568);
        };
        var G__14577 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14578__i = 0, G__14578__a = new Array(arguments.length - 3);
            while (G__14578__i < G__14578__a.length) {
              G__14578__a[G__14578__i] = arguments[G__14578__i + 3];
              ++G__14578__i;
            }
            args = new cljs.core.IndexedSeq(G__14578__a, 0);
          }
          return G__14577__delegate.call(this, x, y, z, args);
        };
        G__14577.cljs$lang$maxFixedArity = 3;
        G__14577.cljs$lang$applyTo = function(arglist__14579) {
          var x = cljs.core.first(arglist__14579);
          arglist__14579 = cljs.core.next(arglist__14579);
          var y = cljs.core.first(arglist__14579);
          arglist__14579 = cljs.core.next(arglist__14579);
          var z = cljs.core.first(arglist__14579);
          var args = cljs.core.rest(arglist__14579);
          return G__14577__delegate(x, y, z, args);
        };
        G__14577.cljs$core$IFn$_invoke$arity$variadic = G__14577__delegate;
        return G__14577;
      }();
      G__14576 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__14576__0.call(this);
          case 1:
            return G__14576__1.call(this, x);
          case 2:
            return G__14576__2.call(this, x, y);
          case 3:
            return G__14576__3.call(this, x, y, z);
          default:
            var G__14580 = null;
            if (arguments.length > 3) {
              var G__14581__i = 0, G__14581__a = new Array(arguments.length - 3);
              while (G__14581__i < G__14581__a.length) {
                G__14581__a[G__14581__i] = arguments[G__14581__i + 3];
                ++G__14581__i;
              }
              G__14580 = new cljs.core.IndexedSeq(G__14581__a, 0);
            }
            return G__14576__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14580);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14576.cljs$lang$maxFixedArity = 3;
      G__14576.cljs$lang$applyTo = G__14576__4.cljs$lang$applyTo;
      G__14576.cljs$core$IFn$_invoke$arity$0 = G__14576__0;
      G__14576.cljs$core$IFn$_invoke$arity$1 = G__14576__1;
      G__14576.cljs$core$IFn$_invoke$arity$2 = G__14576__2;
      G__14576.cljs$core$IFn$_invoke$arity$3 = G__14576__3;
      G__14576.cljs$core$IFn$_invoke$arity$variadic = G__14576__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__14576;
    }();
  };
  var cljs$core$comp__4 = function() {
    var G__14582__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
      return function(fs__$1) {
        return function() {
          var G__14583__delegate = function(args) {
            var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
            var fs__$2 = cljs.core.next(fs__$1);
            while (true) {
              if (fs__$2) {
                var G__14584 = cljs.core.first(fs__$2).call(null, ret);
                var G__14585 = cljs.core.next(fs__$2);
                ret = G__14584;
                fs__$2 = G__14585;
                continue;
              } else {
                return ret;
              }
              break;
            }
          };
          var G__14583 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              var G__14586__i = 0, G__14586__a = new Array(arguments.length - 0);
              while (G__14586__i < G__14586__a.length) {
                G__14586__a[G__14586__i] = arguments[G__14586__i + 0];
                ++G__14586__i;
              }
              args = new cljs.core.IndexedSeq(G__14586__a, 0);
            }
            return G__14583__delegate.call(this, args);
          };
          G__14583.cljs$lang$maxFixedArity = 0;
          G__14583.cljs$lang$applyTo = function(arglist__14587) {
            var args = cljs.core.seq(arglist__14587);
            return G__14583__delegate(args);
          };
          G__14583.cljs$core$IFn$_invoke$arity$variadic = G__14583__delegate;
          return G__14583;
        }();
      }(fs__$1);
    };
    var G__14582 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        var G__14588__i = 0, G__14588__a = new Array(arguments.length - 3);
        while (G__14588__i < G__14588__a.length) {
          G__14588__a[G__14588__i] = arguments[G__14588__i + 3];
          ++G__14588__i;
        }
        fs = new cljs.core.IndexedSeq(G__14588__a, 0);
      }
      return G__14582__delegate.call(this, f1, f2, f3, fs);
    };
    G__14582.cljs$lang$maxFixedArity = 3;
    G__14582.cljs$lang$applyTo = function(arglist__14589) {
      var f1 = cljs.core.first(arglist__14589);
      arglist__14589 = cljs.core.next(arglist__14589);
      var f2 = cljs.core.first(arglist__14589);
      arglist__14589 = cljs.core.next(arglist__14589);
      var f3 = cljs.core.first(arglist__14589);
      var fs = cljs.core.rest(arglist__14589);
      return G__14582__delegate(f1, f2, f3, fs);
    };
    G__14582.cljs$core$IFn$_invoke$arity$variadic = G__14582__delegate;
    return G__14582;
  }();
  cljs$core$comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return cljs$core$comp__0.call(this);
      case 1:
        return cljs$core$comp__1.call(this, f1);
      case 2:
        return cljs$core$comp__2.call(this, f1, f2);
      case 3:
        return cljs$core$comp__3.call(this, f1, f2, f3);
      default:
        var G__14590 = null;
        if (arguments.length > 3) {
          var G__14591__i = 0, G__14591__a = new Array(arguments.length - 3);
          while (G__14591__i < G__14591__a.length) {
            G__14591__a[G__14591__i] = arguments[G__14591__i + 3];
            ++G__14591__i;
          }
          G__14590 = new cljs.core.IndexedSeq(G__14591__a, 0);
        }
        return cljs$core$comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, G__14590);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$comp.cljs$lang$maxFixedArity = 3;
  cljs$core$comp.cljs$lang$applyTo = cljs$core$comp__4.cljs$lang$applyTo;
  cljs$core$comp.cljs$core$IFn$_invoke$arity$0 = cljs$core$comp__0;
  cljs$core$comp.cljs$core$IFn$_invoke$arity$1 = cljs$core$comp__1;
  cljs$core$comp.cljs$core$IFn$_invoke$arity$2 = cljs$core$comp__2;
  cljs$core$comp.cljs$core$IFn$_invoke$arity$3 = cljs$core$comp__3;
  cljs$core$comp.cljs$core$IFn$_invoke$arity$variadic = cljs$core$comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$comp;
}();
cljs.core.partial = function() {
  var cljs$core$partial = null;
  var cljs$core$partial__1 = function(f) {
    return f;
  };
  var cljs$core$partial__2 = function(f, arg1) {
    return function() {
      var G__14676 = null;
      var G__14676__0 = function() {
        var G__14634 = arg1;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14634) : f.call(null, G__14634);
      };
      var G__14676__1 = function(x) {
        var G__14635 = arg1;
        var G__14636 = x;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14635, G__14636) : f.call(null, G__14635, G__14636);
      };
      var G__14676__2 = function(x, y) {
        var G__14637 = arg1;
        var G__14638 = x;
        var G__14639 = y;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14637, G__14638, G__14639) : f.call(null, G__14637, G__14638, G__14639);
      };
      var G__14676__3 = function(x, y, z) {
        var G__14640 = arg1;
        var G__14641 = x;
        var G__14642 = y;
        var G__14643 = z;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14640, G__14641, G__14642, G__14643) : f.call(null, G__14640, G__14641, G__14642, G__14643);
      };
      var G__14676__4 = function() {
        var G__14677__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
        };
        var G__14677 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14678__i = 0, G__14678__a = new Array(arguments.length - 3);
            while (G__14678__i < G__14678__a.length) {
              G__14678__a[G__14678__i] = arguments[G__14678__i + 3];
              ++G__14678__i;
            }
            args = new cljs.core.IndexedSeq(G__14678__a, 0);
          }
          return G__14677__delegate.call(this, x, y, z, args);
        };
        G__14677.cljs$lang$maxFixedArity = 3;
        G__14677.cljs$lang$applyTo = function(arglist__14679) {
          var x = cljs.core.first(arglist__14679);
          arglist__14679 = cljs.core.next(arglist__14679);
          var y = cljs.core.first(arglist__14679);
          arglist__14679 = cljs.core.next(arglist__14679);
          var z = cljs.core.first(arglist__14679);
          var args = cljs.core.rest(arglist__14679);
          return G__14677__delegate(x, y, z, args);
        };
        G__14677.cljs$core$IFn$_invoke$arity$variadic = G__14677__delegate;
        return G__14677;
      }();
      G__14676 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__14676__0.call(this);
          case 1:
            return G__14676__1.call(this, x);
          case 2:
            return G__14676__2.call(this, x, y);
          case 3:
            return G__14676__3.call(this, x, y, z);
          default:
            var G__14680 = null;
            if (arguments.length > 3) {
              var G__14681__i = 0, G__14681__a = new Array(arguments.length - 3);
              while (G__14681__i < G__14681__a.length) {
                G__14681__a[G__14681__i] = arguments[G__14681__i + 3];
                ++G__14681__i;
              }
              G__14680 = new cljs.core.IndexedSeq(G__14681__a, 0);
            }
            return G__14676__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14680);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14676.cljs$lang$maxFixedArity = 3;
      G__14676.cljs$lang$applyTo = G__14676__4.cljs$lang$applyTo;
      G__14676.cljs$core$IFn$_invoke$arity$0 = G__14676__0;
      G__14676.cljs$core$IFn$_invoke$arity$1 = G__14676__1;
      G__14676.cljs$core$IFn$_invoke$arity$2 = G__14676__2;
      G__14676.cljs$core$IFn$_invoke$arity$3 = G__14676__3;
      G__14676.cljs$core$IFn$_invoke$arity$variadic = G__14676__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__14676;
    }();
  };
  var cljs$core$partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__14682 = null;
      var G__14682__0 = function() {
        var G__14644 = arg1;
        var G__14645 = arg2;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14644, G__14645) : f.call(null, G__14644, G__14645);
      };
      var G__14682__1 = function(x) {
        var G__14646 = arg1;
        var G__14647 = arg2;
        var G__14648 = x;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14646, G__14647, G__14648) : f.call(null, G__14646, G__14647, G__14648);
      };
      var G__14682__2 = function(x, y) {
        var G__14649 = arg1;
        var G__14650 = arg2;
        var G__14651 = x;
        var G__14652 = y;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14649, G__14650, G__14651, G__14652) : f.call(null, G__14649, G__14650, G__14651, G__14652);
      };
      var G__14682__3 = function(x, y, z) {
        var G__14653 = arg1;
        var G__14654 = arg2;
        var G__14655 = x;
        var G__14656 = y;
        var G__14657 = z;
        return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__14653, G__14654, G__14655, G__14656, G__14657) : f.call(null, G__14653, G__14654, G__14655, G__14656, G__14657);
      };
      var G__14682__4 = function() {
        var G__14683__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
        };
        var G__14683 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14684__i = 0, G__14684__a = new Array(arguments.length - 3);
            while (G__14684__i < G__14684__a.length) {
              G__14684__a[G__14684__i] = arguments[G__14684__i + 3];
              ++G__14684__i;
            }
            args = new cljs.core.IndexedSeq(G__14684__a, 0);
          }
          return G__14683__delegate.call(this, x, y, z, args);
        };
        G__14683.cljs$lang$maxFixedArity = 3;
        G__14683.cljs$lang$applyTo = function(arglist__14685) {
          var x = cljs.core.first(arglist__14685);
          arglist__14685 = cljs.core.next(arglist__14685);
          var y = cljs.core.first(arglist__14685);
          arglist__14685 = cljs.core.next(arglist__14685);
          var z = cljs.core.first(arglist__14685);
          var args = cljs.core.rest(arglist__14685);
          return G__14683__delegate(x, y, z, args);
        };
        G__14683.cljs$core$IFn$_invoke$arity$variadic = G__14683__delegate;
        return G__14683;
      }();
      G__14682 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__14682__0.call(this);
          case 1:
            return G__14682__1.call(this, x);
          case 2:
            return G__14682__2.call(this, x, y);
          case 3:
            return G__14682__3.call(this, x, y, z);
          default:
            var G__14686 = null;
            if (arguments.length > 3) {
              var G__14687__i = 0, G__14687__a = new Array(arguments.length - 3);
              while (G__14687__i < G__14687__a.length) {
                G__14687__a[G__14687__i] = arguments[G__14687__i + 3];
                ++G__14687__i;
              }
              G__14686 = new cljs.core.IndexedSeq(G__14687__a, 0);
            }
            return G__14682__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14686);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14682.cljs$lang$maxFixedArity = 3;
      G__14682.cljs$lang$applyTo = G__14682__4.cljs$lang$applyTo;
      G__14682.cljs$core$IFn$_invoke$arity$0 = G__14682__0;
      G__14682.cljs$core$IFn$_invoke$arity$1 = G__14682__1;
      G__14682.cljs$core$IFn$_invoke$arity$2 = G__14682__2;
      G__14682.cljs$core$IFn$_invoke$arity$3 = G__14682__3;
      G__14682.cljs$core$IFn$_invoke$arity$variadic = G__14682__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__14682;
    }();
  };
  var cljs$core$partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__14688 = null;
      var G__14688__0 = function() {
        var G__14658 = arg1;
        var G__14659 = arg2;
        var G__14660 = arg3;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14658, G__14659, G__14660) : f.call(null, G__14658, G__14659, G__14660);
      };
      var G__14688__1 = function(x) {
        var G__14661 = arg1;
        var G__14662 = arg2;
        var G__14663 = arg3;
        var G__14664 = x;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14661, G__14662, G__14663, G__14664) : f.call(null, G__14661, G__14662, G__14663, G__14664);
      };
      var G__14688__2 = function(x, y) {
        var G__14665 = arg1;
        var G__14666 = arg2;
        var G__14667 = arg3;
        var G__14668 = x;
        var G__14669 = y;
        return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__14665, G__14666, G__14667, G__14668, G__14669) : f.call(null, G__14665, G__14666, G__14667, G__14668, G__14669);
      };
      var G__14688__3 = function(x, y, z) {
        var G__14670 = arg1;
        var G__14671 = arg2;
        var G__14672 = arg3;
        var G__14673 = x;
        var G__14674 = y;
        var G__14675 = z;
        return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__14670, G__14671, G__14672, G__14673, G__14674, G__14675) : f.call(null, G__14670, G__14671, G__14672, G__14673, G__14674, G__14675);
      };
      var G__14688__4 = function() {
        var G__14689__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
        };
        var G__14689 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14690__i = 0, G__14690__a = new Array(arguments.length - 3);
            while (G__14690__i < G__14690__a.length) {
              G__14690__a[G__14690__i] = arguments[G__14690__i + 3];
              ++G__14690__i;
            }
            args = new cljs.core.IndexedSeq(G__14690__a, 0);
          }
          return G__14689__delegate.call(this, x, y, z, args);
        };
        G__14689.cljs$lang$maxFixedArity = 3;
        G__14689.cljs$lang$applyTo = function(arglist__14691) {
          var x = cljs.core.first(arglist__14691);
          arglist__14691 = cljs.core.next(arglist__14691);
          var y = cljs.core.first(arglist__14691);
          arglist__14691 = cljs.core.next(arglist__14691);
          var z = cljs.core.first(arglist__14691);
          var args = cljs.core.rest(arglist__14691);
          return G__14689__delegate(x, y, z, args);
        };
        G__14689.cljs$core$IFn$_invoke$arity$variadic = G__14689__delegate;
        return G__14689;
      }();
      G__14688 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__14688__0.call(this);
          case 1:
            return G__14688__1.call(this, x);
          case 2:
            return G__14688__2.call(this, x, y);
          case 3:
            return G__14688__3.call(this, x, y, z);
          default:
            var G__14692 = null;
            if (arguments.length > 3) {
              var G__14693__i = 0, G__14693__a = new Array(arguments.length - 3);
              while (G__14693__i < G__14693__a.length) {
                G__14693__a[G__14693__i] = arguments[G__14693__i + 3];
                ++G__14693__i;
              }
              G__14692 = new cljs.core.IndexedSeq(G__14693__a, 0);
            }
            return G__14688__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14692);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14688.cljs$lang$maxFixedArity = 3;
      G__14688.cljs$lang$applyTo = G__14688__4.cljs$lang$applyTo;
      G__14688.cljs$core$IFn$_invoke$arity$0 = G__14688__0;
      G__14688.cljs$core$IFn$_invoke$arity$1 = G__14688__1;
      G__14688.cljs$core$IFn$_invoke$arity$2 = G__14688__2;
      G__14688.cljs$core$IFn$_invoke$arity$3 = G__14688__3;
      G__14688.cljs$core$IFn$_invoke$arity$variadic = G__14688__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__14688;
    }();
  };
  var cljs$core$partial__5 = function() {
    var G__14694__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__14695__delegate = function(args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
        };
        var G__14695 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            var G__14696__i = 0, G__14696__a = new Array(arguments.length - 0);
            while (G__14696__i < G__14696__a.length) {
              G__14696__a[G__14696__i] = arguments[G__14696__i + 0];
              ++G__14696__i;
            }
            args = new cljs.core.IndexedSeq(G__14696__a, 0);
          }
          return G__14695__delegate.call(this, args);
        };
        G__14695.cljs$lang$maxFixedArity = 0;
        G__14695.cljs$lang$applyTo = function(arglist__14697) {
          var args = cljs.core.seq(arglist__14697);
          return G__14695__delegate(args);
        };
        G__14695.cljs$core$IFn$_invoke$arity$variadic = G__14695__delegate;
        return G__14695;
      }();
    };
    var G__14694 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__14698__i = 0, G__14698__a = new Array(arguments.length - 4);
        while (G__14698__i < G__14698__a.length) {
          G__14698__a[G__14698__i] = arguments[G__14698__i + 4];
          ++G__14698__i;
        }
        more = new cljs.core.IndexedSeq(G__14698__a, 0);
      }
      return G__14694__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__14694.cljs$lang$maxFixedArity = 4;
    G__14694.cljs$lang$applyTo = function(arglist__14699) {
      var f = cljs.core.first(arglist__14699);
      arglist__14699 = cljs.core.next(arglist__14699);
      var arg1 = cljs.core.first(arglist__14699);
      arglist__14699 = cljs.core.next(arglist__14699);
      var arg2 = cljs.core.first(arglist__14699);
      arglist__14699 = cljs.core.next(arglist__14699);
      var arg3 = cljs.core.first(arglist__14699);
      var more = cljs.core.rest(arglist__14699);
      return G__14694__delegate(f, arg1, arg2, arg3, more);
    };
    G__14694.cljs$core$IFn$_invoke$arity$variadic = G__14694__delegate;
    return G__14694;
  }();
  cljs$core$partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$partial__1.call(this, f);
      case 2:
        return cljs$core$partial__2.call(this, f, arg1);
      case 3:
        return cljs$core$partial__3.call(this, f, arg1, arg2);
      case 4:
        return cljs$core$partial__4.call(this, f, arg1, arg2, arg3);
      default:
        var G__14700 = null;
        if (arguments.length > 4) {
          var G__14701__i = 0, G__14701__a = new Array(arguments.length - 4);
          while (G__14701__i < G__14701__a.length) {
            G__14701__a[G__14701__i] = arguments[G__14701__i + 4];
            ++G__14701__i;
          }
          G__14700 = new cljs.core.IndexedSeq(G__14701__a, 0);
        }
        return cljs$core$partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, G__14700);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$partial.cljs$lang$maxFixedArity = 4;
  cljs$core$partial.cljs$lang$applyTo = cljs$core$partial__5.cljs$lang$applyTo;
  cljs$core$partial.cljs$core$IFn$_invoke$arity$1 = cljs$core$partial__1;
  cljs$core$partial.cljs$core$IFn$_invoke$arity$2 = cljs$core$partial__2;
  cljs$core$partial.cljs$core$IFn$_invoke$arity$3 = cljs$core$partial__3;
  cljs$core$partial.cljs$core$IFn$_invoke$arity$4 = cljs$core$partial__4;
  cljs$core$partial.cljs$core$IFn$_invoke$arity$variadic = cljs$core$partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$partial;
}();
cljs.core.fnil = function() {
  var cljs$core$fnil = null;
  var cljs$core$fnil__2 = function(f, x) {
    return function() {
      var G__14734 = null;
      var G__14734__1 = function(a) {
        var G__14718 = a == null ? x : a;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14718) : f.call(null, G__14718);
      };
      var G__14734__2 = function(a, b) {
        var G__14719 = a == null ? x : a;
        var G__14720 = b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14719, G__14720) : f.call(null, G__14719, G__14720);
      };
      var G__14734__3 = function(a, b, c) {
        var G__14721 = a == null ? x : a;
        var G__14722 = b;
        var G__14723 = c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14721, G__14722, G__14723) : f.call(null, G__14721, G__14722, G__14723);
      };
      var G__14734__4 = function() {
        var G__14735__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
        };
        var G__14735 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__14736__i = 0, G__14736__a = new Array(arguments.length - 3);
            while (G__14736__i < G__14736__a.length) {
              G__14736__a[G__14736__i] = arguments[G__14736__i + 3];
              ++G__14736__i;
            }
            ds = new cljs.core.IndexedSeq(G__14736__a, 0);
          }
          return G__14735__delegate.call(this, a, b, c, ds);
        };
        G__14735.cljs$lang$maxFixedArity = 3;
        G__14735.cljs$lang$applyTo = function(arglist__14737) {
          var a = cljs.core.first(arglist__14737);
          arglist__14737 = cljs.core.next(arglist__14737);
          var b = cljs.core.first(arglist__14737);
          arglist__14737 = cljs.core.next(arglist__14737);
          var c = cljs.core.first(arglist__14737);
          var ds = cljs.core.rest(arglist__14737);
          return G__14735__delegate(a, b, c, ds);
        };
        G__14735.cljs$core$IFn$_invoke$arity$variadic = G__14735__delegate;
        return G__14735;
      }();
      G__14734 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__14734__1.call(this, a);
          case 2:
            return G__14734__2.call(this, a, b);
          case 3:
            return G__14734__3.call(this, a, b, c);
          default:
            var G__14738 = null;
            if (arguments.length > 3) {
              var G__14739__i = 0, G__14739__a = new Array(arguments.length - 3);
              while (G__14739__i < G__14739__a.length) {
                G__14739__a[G__14739__i] = arguments[G__14739__i + 3];
                ++G__14739__i;
              }
              G__14738 = new cljs.core.IndexedSeq(G__14739__a, 0);
            }
            return G__14734__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__14738);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14734.cljs$lang$maxFixedArity = 3;
      G__14734.cljs$lang$applyTo = G__14734__4.cljs$lang$applyTo;
      G__14734.cljs$core$IFn$_invoke$arity$1 = G__14734__1;
      G__14734.cljs$core$IFn$_invoke$arity$2 = G__14734__2;
      G__14734.cljs$core$IFn$_invoke$arity$3 = G__14734__3;
      G__14734.cljs$core$IFn$_invoke$arity$variadic = G__14734__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__14734;
    }();
  };
  var cljs$core$fnil__3 = function(f, x, y) {
    return function() {
      var G__14740 = null;
      var G__14740__2 = function(a, b) {
        var G__14724 = a == null ? x : a;
        var G__14725 = b == null ? y : b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14724, G__14725) : f.call(null, G__14724, G__14725);
      };
      var G__14740__3 = function(a, b, c) {
        var G__14726 = a == null ? x : a;
        var G__14727 = b == null ? y : b;
        var G__14728 = c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14726, G__14727, G__14728) : f.call(null, G__14726, G__14727, G__14728);
      };
      var G__14740__4 = function() {
        var G__14741__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__14741 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__14742__i = 0, G__14742__a = new Array(arguments.length - 3);
            while (G__14742__i < G__14742__a.length) {
              G__14742__a[G__14742__i] = arguments[G__14742__i + 3];
              ++G__14742__i;
            }
            ds = new cljs.core.IndexedSeq(G__14742__a, 0);
          }
          return G__14741__delegate.call(this, a, b, c, ds);
        };
        G__14741.cljs$lang$maxFixedArity = 3;
        G__14741.cljs$lang$applyTo = function(arglist__14743) {
          var a = cljs.core.first(arglist__14743);
          arglist__14743 = cljs.core.next(arglist__14743);
          var b = cljs.core.first(arglist__14743);
          arglist__14743 = cljs.core.next(arglist__14743);
          var c = cljs.core.first(arglist__14743);
          var ds = cljs.core.rest(arglist__14743);
          return G__14741__delegate(a, b, c, ds);
        };
        G__14741.cljs$core$IFn$_invoke$arity$variadic = G__14741__delegate;
        return G__14741;
      }();
      G__14740 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__14740__2.call(this, a, b);
          case 3:
            return G__14740__3.call(this, a, b, c);
          default:
            var G__14744 = null;
            if (arguments.length > 3) {
              var G__14745__i = 0, G__14745__a = new Array(arguments.length - 3);
              while (G__14745__i < G__14745__a.length) {
                G__14745__a[G__14745__i] = arguments[G__14745__i + 3];
                ++G__14745__i;
              }
              G__14744 = new cljs.core.IndexedSeq(G__14745__a, 0);
            }
            return G__14740__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__14744);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14740.cljs$lang$maxFixedArity = 3;
      G__14740.cljs$lang$applyTo = G__14740__4.cljs$lang$applyTo;
      G__14740.cljs$core$IFn$_invoke$arity$2 = G__14740__2;
      G__14740.cljs$core$IFn$_invoke$arity$3 = G__14740__3;
      G__14740.cljs$core$IFn$_invoke$arity$variadic = G__14740__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__14740;
    }();
  };
  var cljs$core$fnil__4 = function(f, x, y, z) {
    return function() {
      var G__14746 = null;
      var G__14746__2 = function(a, b) {
        var G__14729 = a == null ? x : a;
        var G__14730 = b == null ? y : b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14729, G__14730) : f.call(null, G__14729, G__14730);
      };
      var G__14746__3 = function(a, b, c) {
        var G__14731 = a == null ? x : a;
        var G__14732 = b == null ? y : b;
        var G__14733 = c == null ? z : c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14731, G__14732, G__14733) : f.call(null, G__14731, G__14732, G__14733);
      };
      var G__14746__4 = function() {
        var G__14747__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__14747 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__14748__i = 0, G__14748__a = new Array(arguments.length - 3);
            while (G__14748__i < G__14748__a.length) {
              G__14748__a[G__14748__i] = arguments[G__14748__i + 3];
              ++G__14748__i;
            }
            ds = new cljs.core.IndexedSeq(G__14748__a, 0);
          }
          return G__14747__delegate.call(this, a, b, c, ds);
        };
        G__14747.cljs$lang$maxFixedArity = 3;
        G__14747.cljs$lang$applyTo = function(arglist__14749) {
          var a = cljs.core.first(arglist__14749);
          arglist__14749 = cljs.core.next(arglist__14749);
          var b = cljs.core.first(arglist__14749);
          arglist__14749 = cljs.core.next(arglist__14749);
          var c = cljs.core.first(arglist__14749);
          var ds = cljs.core.rest(arglist__14749);
          return G__14747__delegate(a, b, c, ds);
        };
        G__14747.cljs$core$IFn$_invoke$arity$variadic = G__14747__delegate;
        return G__14747;
      }();
      G__14746 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__14746__2.call(this, a, b);
          case 3:
            return G__14746__3.call(this, a, b, c);
          default:
            var G__14750 = null;
            if (arguments.length > 3) {
              var G__14751__i = 0, G__14751__a = new Array(arguments.length - 3);
              while (G__14751__i < G__14751__a.length) {
                G__14751__a[G__14751__i] = arguments[G__14751__i + 3];
                ++G__14751__i;
              }
              G__14750 = new cljs.core.IndexedSeq(G__14751__a, 0);
            }
            return G__14746__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__14750);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14746.cljs$lang$maxFixedArity = 3;
      G__14746.cljs$lang$applyTo = G__14746__4.cljs$lang$applyTo;
      G__14746.cljs$core$IFn$_invoke$arity$2 = G__14746__2;
      G__14746.cljs$core$IFn$_invoke$arity$3 = G__14746__3;
      G__14746.cljs$core$IFn$_invoke$arity$variadic = G__14746__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__14746;
    }();
  };
  cljs$core$fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return cljs$core$fnil__2.call(this, f, x);
      case 3:
        return cljs$core$fnil__3.call(this, f, x, y);
      case 4:
        return cljs$core$fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$fnil.cljs$core$IFn$_invoke$arity$2 = cljs$core$fnil__2;
  cljs$core$fnil.cljs$core$IFn$_invoke$arity$3 = cljs$core$fnil__3;
  cljs$core$fnil.cljs$core$IFn$_invoke$arity$4 = cljs$core$fnil__4;
  return cljs$core$fnil;
}();
cljs.core.map_indexed = function() {
  var cljs$core$map_indexed = null;
  var cljs$core$map_indexed__1 = function(f) {
    return function(rf) {
      var i = function() {
        var G__14782 = -1;
        return cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__14782) : cljs.core.volatile_BANG_.call(null, G__14782);
      }();
      return function(i) {
        return function() {
          var G__14812 = null;
          var G__14812__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__14812__1 = function(result) {
            var G__14783 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14783) : rf.call(null, G__14783);
          };
          var G__14812__2 = function(result, input) {
            var G__14784 = result;
            var G__14785 = function() {
              var G__14786 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
              var G__14787 = input;
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14786, G__14787) : f.call(null, G__14786, G__14787);
            }();
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14784, G__14785) : rf.call(null, G__14784, G__14785);
          };
          G__14812 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__14812__0.call(this);
              case 1:
                return G__14812__1.call(this, result);
              case 2:
                return G__14812__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__14812.cljs$core$IFn$_invoke$arity$0 = G__14812__0;
          G__14812.cljs$core$IFn$_invoke$arity$1 = G__14812__1;
          G__14812.cljs$core$IFn$_invoke$arity$2 = G__14812__2;
          return G__14812;
        }();
      }(i);
    };
  };
  var cljs$core$map_indexed__2 = function(f, coll) {
    var mapi = function cljs$core$map_indexed_$_mapi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq(coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(s)) {
            var c = cljs.core.chunk_first(s);
            var size = cljs.core.count(c);
            var b = cljs.core.chunk_buffer(size);
            var n__5007__auto___14813 = size;
            var i_14814 = 0;
            while (true) {
              if (i_14814 < n__5007__auto___14813) {
                cljs.core.chunk_append(b, function() {
                  var G__14808 = idx + i_14814;
                  var G__14809 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_14814);
                  return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14808, G__14809) : f.call(null, G__14808, G__14809);
                }());
                var G__14815 = i_14814 + 1;
                i_14814 = G__14815;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$map_indexed_$_mapi(idx + size, cljs.core.chunk_rest(s)));
          } else {
            return cljs.core.cons(function() {
              var G__14810 = idx;
              var G__14811 = cljs.core.first(s);
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14810, G__14811) : f.call(null, G__14810, G__14811);
            }(), cljs$core$map_indexed_$_mapi(idx + 1, cljs.core.rest(s)));
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return mapi(0, coll);
  };
  cljs$core$map_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$map_indexed__1.call(this, f);
      case 2:
        return cljs$core$map_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$map_indexed.cljs$core$IFn$_invoke$arity$1 = cljs$core$map_indexed__1;
  cljs$core$map_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$map_indexed__2;
  return cljs$core$map_indexed;
}();
cljs.core.keep = function() {
  var cljs$core$keep = null;
  var cljs$core$keep__1 = function(f) {
    return function(rf) {
      return function() {
        var G__14834 = null;
        var G__14834__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__14834__1 = function(result) {
          var G__14828 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14828) : rf.call(null, G__14828);
        };
        var G__14834__2 = function(result, input) {
          var v = function() {
            var G__14829 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14829) : f.call(null, G__14829);
          }();
          if (v == null) {
            return result;
          } else {
            var G__14830 = result;
            var G__14831 = v;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14830, G__14831) : rf.call(null, G__14830, G__14831);
          }
        };
        G__14834 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__14834__0.call(this);
            case 1:
              return G__14834__1.call(this, result);
            case 2:
              return G__14834__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__14834.cljs$core$IFn$_invoke$arity$0 = G__14834__0;
        G__14834.cljs$core$IFn$_invoke$arity$1 = G__14834__1;
        G__14834.cljs$core$IFn$_invoke$arity$2 = G__14834__2;
        return G__14834;
      }();
    };
  };
  var cljs$core$keep__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__5007__auto___14835 = size;
          var i_14836 = 0;
          while (true) {
            if (i_14836 < n__5007__auto___14835) {
              var x_14837 = function() {
                var G__14832 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_14836);
                return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14832) : f.call(null, G__14832);
              }();
              if (x_14837 == null) {
              } else {
                cljs.core.chunk_append(b, x_14837);
              }
              var G__14838 = i_14836 + 1;
              i_14836 = G__14838;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__14833 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14833) : f.call(null, G__14833);
          }();
          if (x == null) {
            return cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  cljs$core$keep = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$keep__1.call(this, f);
      case 2:
        return cljs$core$keep__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$keep.cljs$core$IFn$_invoke$arity$1 = cljs$core$keep__1;
  cljs$core$keep.cljs$core$IFn$_invoke$arity$2 = cljs$core$keep__2;
  return cljs$core$keep;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__14839 = this$__$1;
  return goog.getUid(G__14839);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__14840 = cljs.core.seq(self__.watches);
  var chunk__14841 = null;
  var count__14842 = 0;
  var i__14843 = 0;
  while (true) {
    if (i__14843 < count__14842) {
      var vec__14844 = chunk__14841.cljs$core$IIndexed$_nth$arity$2(null, i__14843);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14844, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14844, 1, null);
      var G__14845_14854 = key;
      var G__14846_14855 = this$__$1;
      var G__14847_14856 = oldval;
      var G__14848_14857 = newval;
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14845_14854, G__14846_14855, G__14847_14856, G__14848_14857) : f.call(null, G__14845_14854, G__14846_14855, G__14847_14856, G__14848_14857);
      var G__14858 = seq__14840;
      var G__14859 = chunk__14841;
      var G__14860 = count__14842;
      var G__14861 = i__14843 + 1;
      seq__14840 = G__14858;
      chunk__14841 = G__14859;
      count__14842 = G__14860;
      i__14843 = G__14861;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__14840);
      if (temp__4126__auto__) {
        var seq__14840__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__14840__$1)) {
          var c__4907__auto__ = cljs.core.chunk_first(seq__14840__$1);
          var G__14862 = cljs.core.chunk_rest(seq__14840__$1);
          var G__14863 = c__4907__auto__;
          var G__14864 = cljs.core.count(c__4907__auto__);
          var G__14865 = 0;
          seq__14840 = G__14862;
          chunk__14841 = G__14863;
          count__14842 = G__14864;
          i__14843 = G__14865;
          continue;
        } else {
          var vec__14849 = cljs.core.first(seq__14840__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14849, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14849, 1, null);
          var G__14850_14866 = key;
          var G__14851_14867 = this$__$1;
          var G__14852_14868 = oldval;
          var G__14853_14869 = newval;
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14850_14866, G__14851_14867, G__14852_14868, G__14853_14869) : f.call(null, G__14850_14866, G__14851_14867, G__14852_14868, G__14853_14869);
          var G__14870 = cljs.core.next(seq__14840__$1);
          var G__14871 = null;
          var G__14872 = 0;
          var G__14873 = 0;
          seq__14840 = G__14870;
          chunk__14841 = G__14871;
          count__14842 = G__14872;
          i__14843 = G__14873;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function cljs$core$__GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var cljs$core$atom = null;
  var cljs$core$atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var cljs$core$atom__2 = function() {
    var G__14877__delegate = function(x, p__14874) {
      var map__14876 = p__14874;
      var map__14876__$1 = cljs.core.seq_QMARK_(map__14876) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__14876) : map__14876;
      var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__14876__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
      var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__14876__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__14877 = function(x, var_args) {
      var p__14874 = null;
      if (arguments.length > 1) {
        var G__14878__i = 0, G__14878__a = new Array(arguments.length - 1);
        while (G__14878__i < G__14878__a.length) {
          G__14878__a[G__14878__i] = arguments[G__14878__i + 1];
          ++G__14878__i;
        }
        p__14874 = new cljs.core.IndexedSeq(G__14878__a, 0);
      }
      return G__14877__delegate.call(this, x, p__14874);
    };
    G__14877.cljs$lang$maxFixedArity = 1;
    G__14877.cljs$lang$applyTo = function(arglist__14879) {
      var x = cljs.core.first(arglist__14879);
      var p__14874 = cljs.core.rest(arglist__14879);
      return G__14877__delegate(x, p__14874);
    };
    G__14877.cljs$core$IFn$_invoke$arity$variadic = G__14877__delegate;
    return G__14877;
  }();
  cljs$core$atom = function(x, var_args) {
    var p__14874 = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$atom__1.call(this, x);
      default:
        var G__14880 = null;
        if (arguments.length > 1) {
          var G__14881__i = 0, G__14881__a = new Array(arguments.length - 1);
          while (G__14881__i < G__14881__a.length) {
            G__14881__a[G__14881__i] = arguments[G__14881__i + 1];
            ++G__14881__i;
          }
          G__14880 = new cljs.core.IndexedSeq(G__14881__a, 0);
        }
        return cljs$core$atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__14880);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$atom.cljs$lang$maxFixedArity = 1;
  cljs$core$atom.cljs$lang$applyTo = cljs$core$atom__2.cljs$lang$applyTo;
  cljs$core$atom.cljs$core$IFn$_invoke$arity$1 = cljs$core$atom__1;
  cljs$core$atom.cljs$core$IFn$_invoke$arity$variadic = cljs$core$atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$atom;
}();
cljs.core.reset_BANG_ = function cljs$core$reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(function() {
        var G__14884 = new_value;
        return validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__14884) : validate.call(null, G__14884);
      }())) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(function() {
          var G__14885 = cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null));
          return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__14885) : cljs.core.pr_str.call(null, G__14885);
        }())].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function() {
  var cljs$core$swap_BANG_ = null;
  var cljs$core$swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__14892 = a.state;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14892) : f.call(null, G__14892);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
    }
  };
  var cljs$core$swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__14893 = a.state;
        var G__14894 = x;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14893, G__14894) : f.call(null, G__14893, G__14894);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
    }
  };
  var cljs$core$swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__14895 = a.state;
        var G__14896 = x;
        var G__14897 = y;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14895, G__14896, G__14897) : f.call(null, G__14895, G__14896, G__14897);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
    }
  };
  var cljs$core$swap_BANG___5 = function() {
    var G__14898__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
      }
    };
    var G__14898 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__14899__i = 0, G__14899__a = new Array(arguments.length - 4);
        while (G__14899__i < G__14899__a.length) {
          G__14899__a[G__14899__i] = arguments[G__14899__i + 4];
          ++G__14899__i;
        }
        more = new cljs.core.IndexedSeq(G__14899__a, 0);
      }
      return G__14898__delegate.call(this, a, f, x, y, more);
    };
    G__14898.cljs$lang$maxFixedArity = 4;
    G__14898.cljs$lang$applyTo = function(arglist__14900) {
      var a = cljs.core.first(arglist__14900);
      arglist__14900 = cljs.core.next(arglist__14900);
      var f = cljs.core.first(arglist__14900);
      arglist__14900 = cljs.core.next(arglist__14900);
      var x = cljs.core.first(arglist__14900);
      arglist__14900 = cljs.core.next(arglist__14900);
      var y = cljs.core.first(arglist__14900);
      var more = cljs.core.rest(arglist__14900);
      return G__14898__delegate(a, f, x, y, more);
    };
    G__14898.cljs$core$IFn$_invoke$arity$variadic = G__14898__delegate;
    return G__14898;
  }();
  cljs$core$swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$swap_BANG___2.call(this, a, f);
      case 3:
        return cljs$core$swap_BANG___3.call(this, a, f, x);
      case 4:
        return cljs$core$swap_BANG___4.call(this, a, f, x, y);
      default:
        var G__14901 = null;
        if (arguments.length > 4) {
          var G__14902__i = 0, G__14902__a = new Array(arguments.length - 4);
          while (G__14902__i < G__14902__a.length) {
            G__14902__a[G__14902__i] = arguments[G__14902__i + 4];
            ++G__14902__i;
          }
          G__14901 = new cljs.core.IndexedSeq(G__14902__a, 0);
        }
        return cljs$core$swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, G__14901);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$swap_BANG_.cljs$lang$maxFixedArity = 4;
  cljs$core$swap_BANG_.cljs$lang$applyTo = cljs$core$swap_BANG___5.cljs$lang$applyTo;
  cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$swap_BANG___2;
  cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$swap_BANG___3;
  cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$4 = cljs$core$swap_BANG___4;
  cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function cljs$core$compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function cljs$core$set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function cljs$core$get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function cljs$core$__GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function cljs$core$volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function cljs$core$volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function cljs$core$vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function() {
  var cljs$core$keep_indexed = null;
  var cljs$core$keep_indexed__1 = function(f) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_(-1);
      return function(ia) {
        return function() {
          var G__14969 = null;
          var G__14969__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__14969__1 = function(result) {
            var G__14936 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14936) : rf.call(null, G__14936);
          };
          var G__14969__2 = function(result, input) {
            var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
            var v = function() {
              var G__14937 = i;
              var G__14938 = input;
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14937, G__14938) : f.call(null, G__14937, G__14938);
            }();
            if (v == null) {
              return result;
            } else {
              var G__14939 = result;
              var G__14940 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14939, G__14940) : rf.call(null, G__14939, G__14940);
            }
          };
          G__14969 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__14969__0.call(this);
              case 1:
                return G__14969__1.call(this, result);
              case 2:
                return G__14969__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__14969.cljs$core$IFn$_invoke$arity$0 = G__14969__0;
          G__14969.cljs$core$IFn$_invoke$arity$1 = G__14969__1;
          G__14969.cljs$core$IFn$_invoke$arity$2 = G__14969__2;
          return G__14969;
        }();
      }(ia);
    };
  };
  var cljs$core$keep_indexed__2 = function(f, coll) {
    var keepi = function cljs$core$keep_indexed_$_keepi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq(coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(s)) {
            var c = cljs.core.chunk_first(s);
            var size = cljs.core.count(c);
            var b = cljs.core.chunk_buffer(size);
            var n__5007__auto___14970 = size;
            var i_14971 = 0;
            while (true) {
              if (i_14971 < n__5007__auto___14970) {
                var x_14972 = function() {
                  var G__14965 = idx + i_14971;
                  var G__14966 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_14971);
                  return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14965, G__14966) : f.call(null, G__14965, G__14966);
                }();
                if (x_14972 == null) {
                } else {
                  cljs.core.chunk_append(b, x_14972);
                }
                var G__14973 = i_14971 + 1;
                i_14971 = G__14973;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$keep_indexed_$_keepi(idx + size, cljs.core.chunk_rest(s)));
          } else {
            var x = function() {
              var G__14967 = idx;
              var G__14968 = cljs.core.first(s);
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14967, G__14968) : f.call(null, G__14967, G__14968);
            }();
            if (x == null) {
              return cljs$core$keep_indexed_$_keepi(idx + 1, cljs.core.rest(s));
            } else {
              return cljs.core.cons(x, cljs$core$keep_indexed_$_keepi(idx + 1, cljs.core.rest(s)));
            }
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return keepi(0, coll);
  };
  cljs$core$keep_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$keep_indexed__1.call(this, f);
      case 2:
        return cljs$core$keep_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$keep_indexed.cljs$core$IFn$_invoke$arity$1 = cljs$core$keep_indexed__1;
  cljs$core$keep_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$keep_indexed__2;
  return cljs$core$keep_indexed;
}();
cljs.core.every_pred = function() {
  var cljs$core$every_pred = null;
  var cljs$core$every_pred__1 = function(p) {
    return function() {
      var cljs$core$every_pred_$_ep1 = null;
      var cljs$core$every_pred_$_ep1__0 = function() {
        return true;
      };
      var cljs$core$every_pred_$_ep1__1 = function(x) {
        return cljs.core.boolean$(function() {
          var G__15187 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15187) : p.call(null, G__15187);
        }());
      };
      var cljs$core$every_pred_$_ep1__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__4110__auto__ = function() {
            var G__15189 = x;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15189) : p.call(null, G__15189);
          }();
          if (cljs.core.truth_(and__4110__auto__)) {
            var G__15190 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15190) : p.call(null, G__15190);
          } else {
            return and__4110__auto__;
          }
        }());
      };
      var cljs$core$every_pred_$_ep1__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__4110__auto__ = function() {
            var G__15192 = x;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15192) : p.call(null, G__15192);
          }();
          if (cljs.core.truth_(and__4110__auto__)) {
            var and__4110__auto____$1 = function() {
              var G__15194 = y;
              return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15194) : p.call(null, G__15194);
            }();
            if (cljs.core.truth_(and__4110__auto____$1)) {
              var G__15195 = z;
              return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15195) : p.call(null, G__15195);
            } else {
              return and__4110__auto____$1;
            }
          } else {
            return and__4110__auto__;
          }
        }());
      };
      var cljs$core$every_pred_$_ep1__4 = function() {
        var G__15364__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(p, args));
        };
        var G__15364 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__15365__i = 0, G__15365__a = new Array(arguments.length - 3);
            while (G__15365__i < G__15365__a.length) {
              G__15365__a[G__15365__i] = arguments[G__15365__i + 3];
              ++G__15365__i;
            }
            args = new cljs.core.IndexedSeq(G__15365__a, 0);
          }
          return G__15364__delegate.call(this, x, y, z, args);
        };
        G__15364.cljs$lang$maxFixedArity = 3;
        G__15364.cljs$lang$applyTo = function(arglist__15366) {
          var x = cljs.core.first(arglist__15366);
          arglist__15366 = cljs.core.next(arglist__15366);
          var y = cljs.core.first(arglist__15366);
          arglist__15366 = cljs.core.next(arglist__15366);
          var z = cljs.core.first(arglist__15366);
          var args = cljs.core.rest(arglist__15366);
          return G__15364__delegate(x, y, z, args);
        };
        G__15364.cljs$core$IFn$_invoke$arity$variadic = G__15364__delegate;
        return G__15364;
      }();
      cljs$core$every_pred_$_ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$every_pred_$_ep1__0.call(this);
          case 1:
            return cljs$core$every_pred_$_ep1__1.call(this, x);
          case 2:
            return cljs$core$every_pred_$_ep1__2.call(this, x, y);
          case 3:
            return cljs$core$every_pred_$_ep1__3.call(this, x, y, z);
          default:
            var G__15367 = null;
            if (arguments.length > 3) {
              var G__15368__i = 0, G__15368__a = new Array(arguments.length - 3);
              while (G__15368__i < G__15368__a.length) {
                G__15368__a[G__15368__i] = arguments[G__15368__i + 3];
                ++G__15368__i;
              }
              G__15367 = new cljs.core.IndexedSeq(G__15368__a, 0);
            }
            return cljs$core$every_pred_$_ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15367);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$every_pred_$_ep1.cljs$lang$maxFixedArity = 3;
      cljs$core$every_pred_$_ep1.cljs$lang$applyTo = cljs$core$every_pred_$_ep1__4.cljs$lang$applyTo;
      cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep1__0;
      cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep1__1;
      cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep1__2;
      cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep1__3;
      cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$every_pred_$_ep1;
    }();
  };
  var cljs$core$every_pred__2 = function(p1, p2) {
    return function() {
      var cljs$core$every_pred_$_ep2 = null;
      var cljs$core$every_pred_$_ep2__0 = function() {
        return true;
      };
      var cljs$core$every_pred_$_ep2__1 = function(x) {
        return cljs.core.boolean$(function() {
          var and__4110__auto__ = function() {
            var G__15227 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15227) : p1.call(null, G__15227);
          }();
          if (cljs.core.truth_(and__4110__auto__)) {
            var G__15228 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15228) : p2.call(null, G__15228);
          } else {
            return and__4110__auto__;
          }
        }());
      };
      var cljs$core$every_pred_$_ep2__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__4110__auto__ = function() {
            var G__15230 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15230) : p1.call(null, G__15230);
          }();
          if (cljs.core.truth_(and__4110__auto__)) {
            var and__4110__auto____$1 = function() {
              var G__15232 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15232) : p1.call(null, G__15232);
            }();
            if (cljs.core.truth_(and__4110__auto____$1)) {
              var and__4110__auto____$2 = function() {
                var G__15234 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15234) : p2.call(null, G__15234);
              }();
              if (cljs.core.truth_(and__4110__auto____$2)) {
                var G__15235 = y;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15235) : p2.call(null, G__15235);
              } else {
                return and__4110__auto____$2;
              }
            } else {
              return and__4110__auto____$1;
            }
          } else {
            return and__4110__auto__;
          }
        }());
      };
      var cljs$core$every_pred_$_ep2__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__4110__auto__ = function() {
            var G__15237 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15237) : p1.call(null, G__15237);
          }();
          if (cljs.core.truth_(and__4110__auto__)) {
            var and__4110__auto____$1 = function() {
              var G__15239 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15239) : p1.call(null, G__15239);
            }();
            if (cljs.core.truth_(and__4110__auto____$1)) {
              var and__4110__auto____$2 = function() {
                var G__15241 = z;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15241) : p1.call(null, G__15241);
              }();
              if (cljs.core.truth_(and__4110__auto____$2)) {
                var and__4110__auto____$3 = function() {
                  var G__15243 = x;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15243) : p2.call(null, G__15243);
                }();
                if (cljs.core.truth_(and__4110__auto____$3)) {
                  var and__4110__auto____$4 = function() {
                    var G__15245 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15245) : p2.call(null, G__15245);
                  }();
                  if (cljs.core.truth_(and__4110__auto____$4)) {
                    var G__15246 = z;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15246) : p2.call(null, G__15246);
                  } else {
                    return and__4110__auto____$4;
                  }
                } else {
                  return and__4110__auto____$3;
                }
              } else {
                return and__4110__auto____$2;
              }
            } else {
              return and__4110__auto____$1;
            }
          } else {
            return and__4110__auto__;
          }
        }());
      };
      var cljs$core$every_pred_$_ep2__4 = function() {
        var G__15369__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__14974_SHARP_) {
            var and__4110__auto__ = function() {
              var G__15251 = p1__14974_SHARP_;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15251) : p1.call(null, G__15251);
            }();
            if (cljs.core.truth_(and__4110__auto__)) {
              var G__15252 = p1__14974_SHARP_;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15252) : p2.call(null, G__15252);
            } else {
              return and__4110__auto__;
            }
          }, args));
        };
        var G__15369 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__15370__i = 0, G__15370__a = new Array(arguments.length - 3);
            while (G__15370__i < G__15370__a.length) {
              G__15370__a[G__15370__i] = arguments[G__15370__i + 3];
              ++G__15370__i;
            }
            args = new cljs.core.IndexedSeq(G__15370__a, 0);
          }
          return G__15369__delegate.call(this, x, y, z, args);
        };
        G__15369.cljs$lang$maxFixedArity = 3;
        G__15369.cljs$lang$applyTo = function(arglist__15371) {
          var x = cljs.core.first(arglist__15371);
          arglist__15371 = cljs.core.next(arglist__15371);
          var y = cljs.core.first(arglist__15371);
          arglist__15371 = cljs.core.next(arglist__15371);
          var z = cljs.core.first(arglist__15371);
          var args = cljs.core.rest(arglist__15371);
          return G__15369__delegate(x, y, z, args);
        };
        G__15369.cljs$core$IFn$_invoke$arity$variadic = G__15369__delegate;
        return G__15369;
      }();
      cljs$core$every_pred_$_ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$every_pred_$_ep2__0.call(this);
          case 1:
            return cljs$core$every_pred_$_ep2__1.call(this, x);
          case 2:
            return cljs$core$every_pred_$_ep2__2.call(this, x, y);
          case 3:
            return cljs$core$every_pred_$_ep2__3.call(this, x, y, z);
          default:
            var G__15372 = null;
            if (arguments.length > 3) {
              var G__15373__i = 0, G__15373__a = new Array(arguments.length - 3);
              while (G__15373__i < G__15373__a.length) {
                G__15373__a[G__15373__i] = arguments[G__15373__i + 3];
                ++G__15373__i;
              }
              G__15372 = new cljs.core.IndexedSeq(G__15373__a, 0);
            }
            return cljs$core$every_pred_$_ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15372);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$every_pred_$_ep2.cljs$lang$maxFixedArity = 3;
      cljs$core$every_pred_$_ep2.cljs$lang$applyTo = cljs$core$every_pred_$_ep2__4.cljs$lang$applyTo;
      cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep2__0;
      cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep2__1;
      cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep2__2;
      cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep2__3;
      cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$every_pred_$_ep2;
    }();
  };
  var cljs$core$every_pred__3 = function(p1, p2, p3) {
    return function() {
      var cljs$core$every_pred_$_ep3 = null;
      var cljs$core$every_pred_$_ep3__0 = function() {
        return true;
      };
      var cljs$core$every_pred_$_ep3__1 = function(x) {
        return cljs.core.boolean$(function() {
          var and__4110__auto__ = function() {
            var G__15298 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15298) : p1.call(null, G__15298);
          }();
          if (cljs.core.truth_(and__4110__auto__)) {
            var and__4110__auto____$1 = function() {
              var G__15300 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15300) : p2.call(null, G__15300);
            }();
            if (cljs.core.truth_(and__4110__auto____$1)) {
              var G__15301 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15301) : p3.call(null, G__15301);
            } else {
              return and__4110__auto____$1;
            }
          } else {
            return and__4110__auto__;
          }
        }());
      };
      var cljs$core$every_pred_$_ep3__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__4110__auto__ = function() {
            var G__15303 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15303) : p1.call(null, G__15303);
          }();
          if (cljs.core.truth_(and__4110__auto__)) {
            var and__4110__auto____$1 = function() {
              var G__15305 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15305) : p2.call(null, G__15305);
            }();
            if (cljs.core.truth_(and__4110__auto____$1)) {
              var and__4110__auto____$2 = function() {
                var G__15307 = x;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15307) : p3.call(null, G__15307);
              }();
              if (cljs.core.truth_(and__4110__auto____$2)) {
                var and__4110__auto____$3 = function() {
                  var G__15309 = y;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15309) : p1.call(null, G__15309);
                }();
                if (cljs.core.truth_(and__4110__auto____$3)) {
                  var and__4110__auto____$4 = function() {
                    var G__15311 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15311) : p2.call(null, G__15311);
                  }();
                  if (cljs.core.truth_(and__4110__auto____$4)) {
                    var G__15312 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15312) : p3.call(null, G__15312);
                  } else {
                    return and__4110__auto____$4;
                  }
                } else {
                  return and__4110__auto____$3;
                }
              } else {
                return and__4110__auto____$2;
              }
            } else {
              return and__4110__auto____$1;
            }
          } else {
            return and__4110__auto__;
          }
        }());
      };
      var cljs$core$every_pred_$_ep3__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__4110__auto__ = function() {
            var G__15314 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15314) : p1.call(null, G__15314);
          }();
          if (cljs.core.truth_(and__4110__auto__)) {
            var and__4110__auto____$1 = function() {
              var G__15316 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15316) : p2.call(null, G__15316);
            }();
            if (cljs.core.truth_(and__4110__auto____$1)) {
              var and__4110__auto____$2 = function() {
                var G__15318 = x;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15318) : p3.call(null, G__15318);
              }();
              if (cljs.core.truth_(and__4110__auto____$2)) {
                var and__4110__auto____$3 = function() {
                  var G__15320 = y;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15320) : p1.call(null, G__15320);
                }();
                if (cljs.core.truth_(and__4110__auto____$3)) {
                  var and__4110__auto____$4 = function() {
                    var G__15322 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15322) : p2.call(null, G__15322);
                  }();
                  if (cljs.core.truth_(and__4110__auto____$4)) {
                    var and__4110__auto____$5 = function() {
                      var G__15324 = y;
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15324) : p3.call(null, G__15324);
                    }();
                    if (cljs.core.truth_(and__4110__auto____$5)) {
                      var and__4110__auto____$6 = function() {
                        var G__15326 = z;
                        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15326) : p1.call(null, G__15326);
                      }();
                      if (cljs.core.truth_(and__4110__auto____$6)) {
                        var and__4110__auto____$7 = function() {
                          var G__15328 = z;
                          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15328) : p2.call(null, G__15328);
                        }();
                        if (cljs.core.truth_(and__4110__auto____$7)) {
                          var G__15329 = z;
                          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15329) : p3.call(null, G__15329);
                        } else {
                          return and__4110__auto____$7;
                        }
                      } else {
                        return and__4110__auto____$6;
                      }
                    } else {
                      return and__4110__auto____$5;
                    }
                  } else {
                    return and__4110__auto____$4;
                  }
                } else {
                  return and__4110__auto____$3;
                }
              } else {
                return and__4110__auto____$2;
              }
            } else {
              return and__4110__auto____$1;
            }
          } else {
            return and__4110__auto__;
          }
        }());
      };
      var cljs$core$every_pred_$_ep3__4 = function() {
        var G__15374__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__14975_SHARP_) {
            var and__4110__auto__ = function() {
              var G__15336 = p1__14975_SHARP_;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15336) : p1.call(null, G__15336);
            }();
            if (cljs.core.truth_(and__4110__auto__)) {
              var and__4110__auto____$1 = function() {
                var G__15338 = p1__14975_SHARP_;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15338) : p2.call(null, G__15338);
              }();
              if (cljs.core.truth_(and__4110__auto____$1)) {
                var G__15339 = p1__14975_SHARP_;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15339) : p3.call(null, G__15339);
              } else {
                return and__4110__auto____$1;
              }
            } else {
              return and__4110__auto__;
            }
          }, args));
        };
        var G__15374 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__15375__i = 0, G__15375__a = new Array(arguments.length - 3);
            while (G__15375__i < G__15375__a.length) {
              G__15375__a[G__15375__i] = arguments[G__15375__i + 3];
              ++G__15375__i;
            }
            args = new cljs.core.IndexedSeq(G__15375__a, 0);
          }
          return G__15374__delegate.call(this, x, y, z, args);
        };
        G__15374.cljs$lang$maxFixedArity = 3;
        G__15374.cljs$lang$applyTo = function(arglist__15376) {
          var x = cljs.core.first(arglist__15376);
          arglist__15376 = cljs.core.next(arglist__15376);
          var y = cljs.core.first(arglist__15376);
          arglist__15376 = cljs.core.next(arglist__15376);
          var z = cljs.core.first(arglist__15376);
          var args = cljs.core.rest(arglist__15376);
          return G__15374__delegate(x, y, z, args);
        };
        G__15374.cljs$core$IFn$_invoke$arity$variadic = G__15374__delegate;
        return G__15374;
      }();
      cljs$core$every_pred_$_ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$every_pred_$_ep3__0.call(this);
          case 1:
            return cljs$core$every_pred_$_ep3__1.call(this, x);
          case 2:
            return cljs$core$every_pred_$_ep3__2.call(this, x, y);
          case 3:
            return cljs$core$every_pred_$_ep3__3.call(this, x, y, z);
          default:
            var G__15377 = null;
            if (arguments.length > 3) {
              var G__15378__i = 0, G__15378__a = new Array(arguments.length - 3);
              while (G__15378__i < G__15378__a.length) {
                G__15378__a[G__15378__i] = arguments[G__15378__i + 3];
                ++G__15378__i;
              }
              G__15377 = new cljs.core.IndexedSeq(G__15378__a, 0);
            }
            return cljs$core$every_pred_$_ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15377);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$every_pred_$_ep3.cljs$lang$maxFixedArity = 3;
      cljs$core$every_pred_$_ep3.cljs$lang$applyTo = cljs$core$every_pred_$_ep3__4.cljs$lang$applyTo;
      cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep3__0;
      cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep3__1;
      cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep3__2;
      cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep3__3;
      cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$every_pred_$_ep3;
    }();
  };
  var cljs$core$every_pred__4 = function() {
    var G__15379__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var cljs$core$every_pred_$_epn = null;
          var cljs$core$every_pred_$_epn__0 = function() {
            return true;
          };
          var cljs$core$every_pred_$_epn__1 = function(x) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__14976_SHARP_) {
                var G__15355 = x;
                return p1__14976_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14976_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15355) : p1__14976_SHARP_.call(null, G__15355);
              };
            }(ps__$1), ps__$1);
          };
          var cljs$core$every_pred_$_epn__2 = function(x, y) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__14977_SHARP_) {
                var and__4110__auto__ = function() {
                  var G__15357 = x;
                  return p1__14977_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14977_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15357) : p1__14977_SHARP_.call(null, G__15357);
                }();
                if (cljs.core.truth_(and__4110__auto__)) {
                  var G__15358 = y;
                  return p1__14977_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14977_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15358) : p1__14977_SHARP_.call(null, G__15358);
                } else {
                  return and__4110__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var cljs$core$every_pred_$_epn__3 = function(x, y, z) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__14978_SHARP_) {
                var and__4110__auto__ = function() {
                  var G__15360 = x;
                  return p1__14978_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14978_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15360) : p1__14978_SHARP_.call(null, G__15360);
                }();
                if (cljs.core.truth_(and__4110__auto__)) {
                  var and__4110__auto____$1 = function() {
                    var G__15362 = y;
                    return p1__14978_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14978_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15362) : p1__14978_SHARP_.call(null, G__15362);
                  }();
                  if (cljs.core.truth_(and__4110__auto____$1)) {
                    var G__15363 = z;
                    return p1__14978_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14978_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15363) : p1__14978_SHARP_.call(null, G__15363);
                  } else {
                    return and__4110__auto____$1;
                  }
                } else {
                  return and__4110__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var cljs$core$every_pred_$_epn__4 = function() {
            var G__15380__delegate = function(x, y, z, args) {
              return cljs.core.boolean$(cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(ps__$1) {
                return function(p1__14979_SHARP_) {
                  return cljs.core.every_QMARK_(p1__14979_SHARP_, args);
                };
              }(ps__$1), ps__$1));
            };
            var G__15380 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__15381__i = 0, G__15381__a = new Array(arguments.length - 3);
                while (G__15381__i < G__15381__a.length) {
                  G__15381__a[G__15381__i] = arguments[G__15381__i + 3];
                  ++G__15381__i;
                }
                args = new cljs.core.IndexedSeq(G__15381__a, 0);
              }
              return G__15380__delegate.call(this, x, y, z, args);
            };
            G__15380.cljs$lang$maxFixedArity = 3;
            G__15380.cljs$lang$applyTo = function(arglist__15382) {
              var x = cljs.core.first(arglist__15382);
              arglist__15382 = cljs.core.next(arglist__15382);
              var y = cljs.core.first(arglist__15382);
              arglist__15382 = cljs.core.next(arglist__15382);
              var z = cljs.core.first(arglist__15382);
              var args = cljs.core.rest(arglist__15382);
              return G__15380__delegate(x, y, z, args);
            };
            G__15380.cljs$core$IFn$_invoke$arity$variadic = G__15380__delegate;
            return G__15380;
          }();
          cljs$core$every_pred_$_epn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return cljs$core$every_pred_$_epn__0.call(this);
              case 1:
                return cljs$core$every_pred_$_epn__1.call(this, x);
              case 2:
                return cljs$core$every_pred_$_epn__2.call(this, x, y);
              case 3:
                return cljs$core$every_pred_$_epn__3.call(this, x, y, z);
              default:
                var G__15383 = null;
                if (arguments.length > 3) {
                  var G__15384__i = 0, G__15384__a = new Array(arguments.length - 3);
                  while (G__15384__i < G__15384__a.length) {
                    G__15384__a[G__15384__i] = arguments[G__15384__i + 3];
                    ++G__15384__i;
                  }
                  G__15383 = new cljs.core.IndexedSeq(G__15384__a, 0);
                }
                return cljs$core$every_pred_$_epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15383);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          cljs$core$every_pred_$_epn.cljs$lang$maxFixedArity = 3;
          cljs$core$every_pred_$_epn.cljs$lang$applyTo = cljs$core$every_pred_$_epn__4.cljs$lang$applyTo;
          cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_epn__0;
          cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_epn__1;
          cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_epn__2;
          cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_epn__3;
          cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_epn__4.cljs$core$IFn$_invoke$arity$variadic;
          return cljs$core$every_pred_$_epn;
        }();
      }(ps__$1);
    };
    var G__15379 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        var G__15385__i = 0, G__15385__a = new Array(arguments.length - 3);
        while (G__15385__i < G__15385__a.length) {
          G__15385__a[G__15385__i] = arguments[G__15385__i + 3];
          ++G__15385__i;
        }
        ps = new cljs.core.IndexedSeq(G__15385__a, 0);
      }
      return G__15379__delegate.call(this, p1, p2, p3, ps);
    };
    G__15379.cljs$lang$maxFixedArity = 3;
    G__15379.cljs$lang$applyTo = function(arglist__15386) {
      var p1 = cljs.core.first(arglist__15386);
      arglist__15386 = cljs.core.next(arglist__15386);
      var p2 = cljs.core.first(arglist__15386);
      arglist__15386 = cljs.core.next(arglist__15386);
      var p3 = cljs.core.first(arglist__15386);
      var ps = cljs.core.rest(arglist__15386);
      return G__15379__delegate(p1, p2, p3, ps);
    };
    G__15379.cljs$core$IFn$_invoke$arity$variadic = G__15379__delegate;
    return G__15379;
  }();
  cljs$core$every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$every_pred__1.call(this, p1);
      case 2:
        return cljs$core$every_pred__2.call(this, p1, p2);
      case 3:
        return cljs$core$every_pred__3.call(this, p1, p2, p3);
      default:
        var G__15387 = null;
        if (arguments.length > 3) {
          var G__15388__i = 0, G__15388__a = new Array(arguments.length - 3);
          while (G__15388__i < G__15388__a.length) {
            G__15388__a[G__15388__i] = arguments[G__15388__i + 3];
            ++G__15388__i;
          }
          G__15387 = new cljs.core.IndexedSeq(G__15388__a, 0);
        }
        return cljs$core$every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, G__15387);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$every_pred.cljs$lang$maxFixedArity = 3;
  cljs$core$every_pred.cljs$lang$applyTo = cljs$core$every_pred__4.cljs$lang$applyTo;
  cljs$core$every_pred.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred__1;
  cljs$core$every_pred.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred__2;
  cljs$core$every_pred.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred__3;
  cljs$core$every_pred.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$every_pred;
}();
cljs.core.some_fn = function() {
  var cljs$core$some_fn = null;
  var cljs$core$some_fn__1 = function(p) {
    return function() {
      var cljs$core$some_fn_$_sp1 = null;
      var cljs$core$some_fn_$_sp1__0 = function() {
        return null;
      };
      var cljs$core$some_fn_$_sp1__1 = function(x) {
        var G__15594 = x;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15594) : p.call(null, G__15594);
      };
      var cljs$core$some_fn_$_sp1__2 = function(x, y) {
        var or__4122__auto__ = function() {
          var G__15596 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15596) : p.call(null, G__15596);
        }();
        if (cljs.core.truth_(or__4122__auto__)) {
          return or__4122__auto__;
        } else {
          var G__15597 = y;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15597) : p.call(null, G__15597);
        }
      };
      var cljs$core$some_fn_$_sp1__3 = function(x, y, z) {
        var or__4122__auto__ = function() {
          var G__15599 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15599) : p.call(null, G__15599);
        }();
        if (cljs.core.truth_(or__4122__auto__)) {
          return or__4122__auto__;
        } else {
          var or__4122__auto____$1 = function() {
            var G__15601 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15601) : p.call(null, G__15601);
          }();
          if (cljs.core.truth_(or__4122__auto____$1)) {
            return or__4122__auto____$1;
          } else {
            var G__15602 = z;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15602) : p.call(null, G__15602);
          }
        }
      };
      var cljs$core$some_fn_$_sp1__4 = function() {
        var G__15763__delegate = function(x, y, z, args) {
          var or__4122__auto__ = cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__4122__auto__)) {
            return or__4122__auto__;
          } else {
            return cljs.core.some(p, args);
          }
        };
        var G__15763 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__15764__i = 0, G__15764__a = new Array(arguments.length - 3);
            while (G__15764__i < G__15764__a.length) {
              G__15764__a[G__15764__i] = arguments[G__15764__i + 3];
              ++G__15764__i;
            }
            args = new cljs.core.IndexedSeq(G__15764__a, 0);
          }
          return G__15763__delegate.call(this, x, y, z, args);
        };
        G__15763.cljs$lang$maxFixedArity = 3;
        G__15763.cljs$lang$applyTo = function(arglist__15765) {
          var x = cljs.core.first(arglist__15765);
          arglist__15765 = cljs.core.next(arglist__15765);
          var y = cljs.core.first(arglist__15765);
          arglist__15765 = cljs.core.next(arglist__15765);
          var z = cljs.core.first(arglist__15765);
          var args = cljs.core.rest(arglist__15765);
          return G__15763__delegate(x, y, z, args);
        };
        G__15763.cljs$core$IFn$_invoke$arity$variadic = G__15763__delegate;
        return G__15763;
      }();
      cljs$core$some_fn_$_sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$some_fn_$_sp1__0.call(this);
          case 1:
            return cljs$core$some_fn_$_sp1__1.call(this, x);
          case 2:
            return cljs$core$some_fn_$_sp1__2.call(this, x, y);
          case 3:
            return cljs$core$some_fn_$_sp1__3.call(this, x, y, z);
          default:
            var G__15766 = null;
            if (arguments.length > 3) {
              var G__15767__i = 0, G__15767__a = new Array(arguments.length - 3);
              while (G__15767__i < G__15767__a.length) {
                G__15767__a[G__15767__i] = arguments[G__15767__i + 3];
                ++G__15767__i;
              }
              G__15766 = new cljs.core.IndexedSeq(G__15767__a, 0);
            }
            return cljs$core$some_fn_$_sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15766);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$some_fn_$_sp1.cljs$lang$maxFixedArity = 3;
      cljs$core$some_fn_$_sp1.cljs$lang$applyTo = cljs$core$some_fn_$_sp1__4.cljs$lang$applyTo;
      cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp1__0;
      cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp1__1;
      cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp1__2;
      cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp1__3;
      cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$some_fn_$_sp1;
    }();
  };
  var cljs$core$some_fn__2 = function(p1, p2) {
    return function() {
      var cljs$core$some_fn_$_sp2 = null;
      var cljs$core$some_fn_$_sp2__0 = function() {
        return null;
      };
      var cljs$core$some_fn_$_sp2__1 = function(x) {
        var or__4122__auto__ = function() {
          var G__15634 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15634) : p1.call(null, G__15634);
        }();
        if (cljs.core.truth_(or__4122__auto__)) {
          return or__4122__auto__;
        } else {
          var G__15635 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15635) : p2.call(null, G__15635);
        }
      };
      var cljs$core$some_fn_$_sp2__2 = function(x, y) {
        var or__4122__auto__ = function() {
          var G__15637 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15637) : p1.call(null, G__15637);
        }();
        if (cljs.core.truth_(or__4122__auto__)) {
          return or__4122__auto__;
        } else {
          var or__4122__auto____$1 = function() {
            var G__15639 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15639) : p1.call(null, G__15639);
          }();
          if (cljs.core.truth_(or__4122__auto____$1)) {
            return or__4122__auto____$1;
          } else {
            var or__4122__auto____$2 = function() {
              var G__15641 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15641) : p2.call(null, G__15641);
            }();
            if (cljs.core.truth_(or__4122__auto____$2)) {
              return or__4122__auto____$2;
            } else {
              var G__15642 = y;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15642) : p2.call(null, G__15642);
            }
          }
        }
      };
      var cljs$core$some_fn_$_sp2__3 = function(x, y, z) {
        var or__4122__auto__ = function() {
          var G__15644 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15644) : p1.call(null, G__15644);
        }();
        if (cljs.core.truth_(or__4122__auto__)) {
          return or__4122__auto__;
        } else {
          var or__4122__auto____$1 = function() {
            var G__15646 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15646) : p1.call(null, G__15646);
          }();
          if (cljs.core.truth_(or__4122__auto____$1)) {
            return or__4122__auto____$1;
          } else {
            var or__4122__auto____$2 = function() {
              var G__15648 = z;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15648) : p1.call(null, G__15648);
            }();
            if (cljs.core.truth_(or__4122__auto____$2)) {
              return or__4122__auto____$2;
            } else {
              var or__4122__auto____$3 = function() {
                var G__15650 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15650) : p2.call(null, G__15650);
              }();
              if (cljs.core.truth_(or__4122__auto____$3)) {
                return or__4122__auto____$3;
              } else {
                var or__4122__auto____$4 = function() {
                  var G__15652 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15652) : p2.call(null, G__15652);
                }();
                if (cljs.core.truth_(or__4122__auto____$4)) {
                  return or__4122__auto____$4;
                } else {
                  var G__15653 = z;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15653) : p2.call(null, G__15653);
                }
              }
            }
          }
        }
      };
      var cljs$core$some_fn_$_sp2__4 = function() {
        var G__15768__delegate = function(x, y, z, args) {
          var or__4122__auto__ = cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__4122__auto__)) {
            return or__4122__auto__;
          } else {
            return cljs.core.some(function(or__4122__auto__) {
              return function(p1__15389_SHARP_) {
                var or__4122__auto____$1 = function() {
                  var G__15655 = p1__15389_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15655) : p1.call(null, G__15655);
                }();
                if (cljs.core.truth_(or__4122__auto____$1)) {
                  return or__4122__auto____$1;
                } else {
                  var G__15656 = p1__15389_SHARP_;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15656) : p2.call(null, G__15656);
                }
              };
            }(or__4122__auto__), args);
          }
        };
        var G__15768 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__15769__i = 0, G__15769__a = new Array(arguments.length - 3);
            while (G__15769__i < G__15769__a.length) {
              G__15769__a[G__15769__i] = arguments[G__15769__i + 3];
              ++G__15769__i;
            }
            args = new cljs.core.IndexedSeq(G__15769__a, 0);
          }
          return G__15768__delegate.call(this, x, y, z, args);
        };
        G__15768.cljs$lang$maxFixedArity = 3;
        G__15768.cljs$lang$applyTo = function(arglist__15770) {
          var x = cljs.core.first(arglist__15770);
          arglist__15770 = cljs.core.next(arglist__15770);
          var y = cljs.core.first(arglist__15770);
          arglist__15770 = cljs.core.next(arglist__15770);
          var z = cljs.core.first(arglist__15770);
          var args = cljs.core.rest(arglist__15770);
          return G__15768__delegate(x, y, z, args);
        };
        G__15768.cljs$core$IFn$_invoke$arity$variadic = G__15768__delegate;
        return G__15768;
      }();
      cljs$core$some_fn_$_sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$some_fn_$_sp2__0.call(this);
          case 1:
            return cljs$core$some_fn_$_sp2__1.call(this, x);
          case 2:
            return cljs$core$some_fn_$_sp2__2.call(this, x, y);
          case 3:
            return cljs$core$some_fn_$_sp2__3.call(this, x, y, z);
          default:
            var G__15771 = null;
            if (arguments.length > 3) {
              var G__15772__i = 0, G__15772__a = new Array(arguments.length - 3);
              while (G__15772__i < G__15772__a.length) {
                G__15772__a[G__15772__i] = arguments[G__15772__i + 3];
                ++G__15772__i;
              }
              G__15771 = new cljs.core.IndexedSeq(G__15772__a, 0);
            }
            return cljs$core$some_fn_$_sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15771);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$some_fn_$_sp2.cljs$lang$maxFixedArity = 3;
      cljs$core$some_fn_$_sp2.cljs$lang$applyTo = cljs$core$some_fn_$_sp2__4.cljs$lang$applyTo;
      cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp2__0;
      cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp2__1;
      cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp2__2;
      cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp2__3;
      cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$some_fn_$_sp2;
    }();
  };
  var cljs$core$some_fn__3 = function(p1, p2, p3) {
    return function() {
      var cljs$core$some_fn_$_sp3 = null;
      var cljs$core$some_fn_$_sp3__0 = function() {
        return null;
      };
      var cljs$core$some_fn_$_sp3__1 = function(x) {
        var or__4122__auto__ = function() {
          var G__15702 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15702) : p1.call(null, G__15702);
        }();
        if (cljs.core.truth_(or__4122__auto__)) {
          return or__4122__auto__;
        } else {
          var or__4122__auto____$1 = function() {
            var G__15704 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15704) : p2.call(null, G__15704);
          }();
          if (cljs.core.truth_(or__4122__auto____$1)) {
            return or__4122__auto____$1;
          } else {
            var G__15705 = x;
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15705) : p3.call(null, G__15705);
          }
        }
      };
      var cljs$core$some_fn_$_sp3__2 = function(x, y) {
        var or__4122__auto__ = function() {
          var G__15707 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15707) : p1.call(null, G__15707);
        }();
        if (cljs.core.truth_(or__4122__auto__)) {
          return or__4122__auto__;
        } else {
          var or__4122__auto____$1 = function() {
            var G__15709 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15709) : p2.call(null, G__15709);
          }();
          if (cljs.core.truth_(or__4122__auto____$1)) {
            return or__4122__auto____$1;
          } else {
            var or__4122__auto____$2 = function() {
              var G__15711 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15711) : p3.call(null, G__15711);
            }();
            if (cljs.core.truth_(or__4122__auto____$2)) {
              return or__4122__auto____$2;
            } else {
              var or__4122__auto____$3 = function() {
                var G__15713 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15713) : p1.call(null, G__15713);
              }();
              if (cljs.core.truth_(or__4122__auto____$3)) {
                return or__4122__auto____$3;
              } else {
                var or__4122__auto____$4 = function() {
                  var G__15715 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15715) : p2.call(null, G__15715);
                }();
                if (cljs.core.truth_(or__4122__auto____$4)) {
                  return or__4122__auto____$4;
                } else {
                  var G__15716 = y;
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15716) : p3.call(null, G__15716);
                }
              }
            }
          }
        }
      };
      var cljs$core$some_fn_$_sp3__3 = function(x, y, z) {
        var or__4122__auto__ = function() {
          var G__15718 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15718) : p1.call(null, G__15718);
        }();
        if (cljs.core.truth_(or__4122__auto__)) {
          return or__4122__auto__;
        } else {
          var or__4122__auto____$1 = function() {
            var G__15720 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15720) : p2.call(null, G__15720);
          }();
          if (cljs.core.truth_(or__4122__auto____$1)) {
            return or__4122__auto____$1;
          } else {
            var or__4122__auto____$2 = function() {
              var G__15722 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15722) : p3.call(null, G__15722);
            }();
            if (cljs.core.truth_(or__4122__auto____$2)) {
              return or__4122__auto____$2;
            } else {
              var or__4122__auto____$3 = function() {
                var G__15724 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15724) : p1.call(null, G__15724);
              }();
              if (cljs.core.truth_(or__4122__auto____$3)) {
                return or__4122__auto____$3;
              } else {
                var or__4122__auto____$4 = function() {
                  var G__15726 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15726) : p2.call(null, G__15726);
                }();
                if (cljs.core.truth_(or__4122__auto____$4)) {
                  return or__4122__auto____$4;
                } else {
                  var or__4122__auto____$5 = function() {
                    var G__15728 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15728) : p3.call(null, G__15728);
                  }();
                  if (cljs.core.truth_(or__4122__auto____$5)) {
                    return or__4122__auto____$5;
                  } else {
                    var or__4122__auto____$6 = function() {
                      var G__15730 = z;
                      return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15730) : p1.call(null, G__15730);
                    }();
                    if (cljs.core.truth_(or__4122__auto____$6)) {
                      return or__4122__auto____$6;
                    } else {
                      var or__4122__auto____$7 = function() {
                        var G__15732 = z;
                        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15732) : p2.call(null, G__15732);
                      }();
                      if (cljs.core.truth_(or__4122__auto____$7)) {
                        return or__4122__auto____$7;
                      } else {
                        var G__15733 = z;
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15733) : p3.call(null, G__15733);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var cljs$core$some_fn_$_sp3__4 = function() {
        var G__15773__delegate = function(x, y, z, args) {
          var or__4122__auto__ = cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__4122__auto__)) {
            return or__4122__auto__;
          } else {
            return cljs.core.some(function(or__4122__auto__) {
              return function(p1__15390_SHARP_) {
                var or__4122__auto____$1 = function() {
                  var G__15735 = p1__15390_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15735) : p1.call(null, G__15735);
                }();
                if (cljs.core.truth_(or__4122__auto____$1)) {
                  return or__4122__auto____$1;
                } else {
                  var or__4122__auto____$2 = function() {
                    var G__15737 = p1__15390_SHARP_;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15737) : p2.call(null, G__15737);
                  }();
                  if (cljs.core.truth_(or__4122__auto____$2)) {
                    return or__4122__auto____$2;
                  } else {
                    var G__15738 = p1__15390_SHARP_;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15738) : p3.call(null, G__15738);
                  }
                }
              };
            }(or__4122__auto__), args);
          }
        };
        var G__15773 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__15774__i = 0, G__15774__a = new Array(arguments.length - 3);
            while (G__15774__i < G__15774__a.length) {
              G__15774__a[G__15774__i] = arguments[G__15774__i + 3];
              ++G__15774__i;
            }
            args = new cljs.core.IndexedSeq(G__15774__a, 0);
          }
          return G__15773__delegate.call(this, x, y, z, args);
        };
        G__15773.cljs$lang$maxFixedArity = 3;
        G__15773.cljs$lang$applyTo = function(arglist__15775) {
          var x = cljs.core.first(arglist__15775);
          arglist__15775 = cljs.core.next(arglist__15775);
          var y = cljs.core.first(arglist__15775);
          arglist__15775 = cljs.core.next(arglist__15775);
          var z = cljs.core.first(arglist__15775);
          var args = cljs.core.rest(arglist__15775);
          return G__15773__delegate(x, y, z, args);
        };
        G__15773.cljs$core$IFn$_invoke$arity$variadic = G__15773__delegate;
        return G__15773;
      }();
      cljs$core$some_fn_$_sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$some_fn_$_sp3__0.call(this);
          case 1:
            return cljs$core$some_fn_$_sp3__1.call(this, x);
          case 2:
            return cljs$core$some_fn_$_sp3__2.call(this, x, y);
          case 3:
            return cljs$core$some_fn_$_sp3__3.call(this, x, y, z);
          default:
            var G__15776 = null;
            if (arguments.length > 3) {
              var G__15777__i = 0, G__15777__a = new Array(arguments.length - 3);
              while (G__15777__i < G__15777__a.length) {
                G__15777__a[G__15777__i] = arguments[G__15777__i + 3];
                ++G__15777__i;
              }
              G__15776 = new cljs.core.IndexedSeq(G__15777__a, 0);
            }
            return cljs$core$some_fn_$_sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15776);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$some_fn_$_sp3.cljs$lang$maxFixedArity = 3;
      cljs$core$some_fn_$_sp3.cljs$lang$applyTo = cljs$core$some_fn_$_sp3__4.cljs$lang$applyTo;
      cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp3__0;
      cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp3__1;
      cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp3__2;
      cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp3__3;
      cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$some_fn_$_sp3;
    }();
  };
  var cljs$core$some_fn__4 = function() {
    var G__15778__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var cljs$core$some_fn_$_spn = null;
          var cljs$core$some_fn_$_spn__0 = function() {
            return null;
          };
          var cljs$core$some_fn_$_spn__1 = function(x) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__15391_SHARP_) {
                var G__15754 = x;
                return p1__15391_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15391_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15754) : p1__15391_SHARP_.call(null, G__15754);
              };
            }(ps__$1), ps__$1);
          };
          var cljs$core$some_fn_$_spn__2 = function(x, y) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__15392_SHARP_) {
                var or__4122__auto__ = function() {
                  var G__15756 = x;
                  return p1__15392_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15392_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15756) : p1__15392_SHARP_.call(null, G__15756);
                }();
                if (cljs.core.truth_(or__4122__auto__)) {
                  return or__4122__auto__;
                } else {
                  var G__15757 = y;
                  return p1__15392_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15392_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15757) : p1__15392_SHARP_.call(null, G__15757);
                }
              };
            }(ps__$1), ps__$1);
          };
          var cljs$core$some_fn_$_spn__3 = function(x, y, z) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__15393_SHARP_) {
                var or__4122__auto__ = function() {
                  var G__15759 = x;
                  return p1__15393_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15393_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15759) : p1__15393_SHARP_.call(null, G__15759);
                }();
                if (cljs.core.truth_(or__4122__auto__)) {
                  return or__4122__auto__;
                } else {
                  var or__4122__auto____$1 = function() {
                    var G__15761 = y;
                    return p1__15393_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15393_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15761) : p1__15393_SHARP_.call(null, G__15761);
                  }();
                  if (cljs.core.truth_(or__4122__auto____$1)) {
                    return or__4122__auto____$1;
                  } else {
                    var G__15762 = z;
                    return p1__15393_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15393_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15762) : p1__15393_SHARP_.call(null, G__15762);
                  }
                }
              };
            }(ps__$1), ps__$1);
          };
          var cljs$core$some_fn_$_spn__4 = function() {
            var G__15779__delegate = function(x, y, z, args) {
              var or__4122__auto__ = cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
              if (cljs.core.truth_(or__4122__auto__)) {
                return or__4122__auto__;
              } else {
                return cljs.core.some(function(or__4122__auto__, ps__$1) {
                  return function(p1__15394_SHARP_) {
                    return cljs.core.some(p1__15394_SHARP_, args);
                  };
                }(or__4122__auto__, ps__$1), ps__$1);
              }
            };
            var G__15779 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__15780__i = 0, G__15780__a = new Array(arguments.length - 3);
                while (G__15780__i < G__15780__a.length) {
                  G__15780__a[G__15780__i] = arguments[G__15780__i + 3];
                  ++G__15780__i;
                }
                args = new cljs.core.IndexedSeq(G__15780__a, 0);
              }
              return G__15779__delegate.call(this, x, y, z, args);
            };
            G__15779.cljs$lang$maxFixedArity = 3;
            G__15779.cljs$lang$applyTo = function(arglist__15781) {
              var x = cljs.core.first(arglist__15781);
              arglist__15781 = cljs.core.next(arglist__15781);
              var y = cljs.core.first(arglist__15781);
              arglist__15781 = cljs.core.next(arglist__15781);
              var z = cljs.core.first(arglist__15781);
              var args = cljs.core.rest(arglist__15781);
              return G__15779__delegate(x, y, z, args);
            };
            G__15779.cljs$core$IFn$_invoke$arity$variadic = G__15779__delegate;
            return G__15779;
          }();
          cljs$core$some_fn_$_spn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return cljs$core$some_fn_$_spn__0.call(this);
              case 1:
                return cljs$core$some_fn_$_spn__1.call(this, x);
              case 2:
                return cljs$core$some_fn_$_spn__2.call(this, x, y);
              case 3:
                return cljs$core$some_fn_$_spn__3.call(this, x, y, z);
              default:
                var G__15782 = null;
                if (arguments.length > 3) {
                  var G__15783__i = 0, G__15783__a = new Array(arguments.length - 3);
                  while (G__15783__i < G__15783__a.length) {
                    G__15783__a[G__15783__i] = arguments[G__15783__i + 3];
                    ++G__15783__i;
                  }
                  G__15782 = new cljs.core.IndexedSeq(G__15783__a, 0);
                }
                return cljs$core$some_fn_$_spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15782);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          cljs$core$some_fn_$_spn.cljs$lang$maxFixedArity = 3;
          cljs$core$some_fn_$_spn.cljs$lang$applyTo = cljs$core$some_fn_$_spn__4.cljs$lang$applyTo;
          cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_spn__0;
          cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_spn__1;
          cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_spn__2;
          cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_spn__3;
          cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_spn__4.cljs$core$IFn$_invoke$arity$variadic;
          return cljs$core$some_fn_$_spn;
        }();
      }(ps__$1);
    };
    var G__15778 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        var G__15784__i = 0, G__15784__a = new Array(arguments.length - 3);
        while (G__15784__i < G__15784__a.length) {
          G__15784__a[G__15784__i] = arguments[G__15784__i + 3];
          ++G__15784__i;
        }
        ps = new cljs.core.IndexedSeq(G__15784__a, 0);
      }
      return G__15778__delegate.call(this, p1, p2, p3, ps);
    };
    G__15778.cljs$lang$maxFixedArity = 3;
    G__15778.cljs$lang$applyTo = function(arglist__15785) {
      var p1 = cljs.core.first(arglist__15785);
      arglist__15785 = cljs.core.next(arglist__15785);
      var p2 = cljs.core.first(arglist__15785);
      arglist__15785 = cljs.core.next(arglist__15785);
      var p3 = cljs.core.first(arglist__15785);
      var ps = cljs.core.rest(arglist__15785);
      return G__15778__delegate(p1, p2, p3, ps);
    };
    G__15778.cljs$core$IFn$_invoke$arity$variadic = G__15778__delegate;
    return G__15778;
  }();
  cljs$core$some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$some_fn__1.call(this, p1);
      case 2:
        return cljs$core$some_fn__2.call(this, p1, p2);
      case 3:
        return cljs$core$some_fn__3.call(this, p1, p2, p3);
      default:
        var G__15786 = null;
        if (arguments.length > 3) {
          var G__15787__i = 0, G__15787__a = new Array(arguments.length - 3);
          while (G__15787__i < G__15787__a.length) {
            G__15787__a[G__15787__i] = arguments[G__15787__i + 3];
            ++G__15787__i;
          }
          G__15786 = new cljs.core.IndexedSeq(G__15787__a, 0);
        }
        return cljs$core$some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, G__15786);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$some_fn.cljs$lang$maxFixedArity = 3;
  cljs$core$some_fn.cljs$lang$applyTo = cljs$core$some_fn__4.cljs$lang$applyTo;
  cljs$core$some_fn.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn__1;
  cljs$core$some_fn.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn__2;
  cljs$core$some_fn.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn__3;
  cljs$core$some_fn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$some_fn;
}();
cljs.core.map = function() {
  var cljs$core$map = null;
  var cljs$core$map__1 = function(f) {
    return function(rf) {
      return function() {
        var G__15842 = null;
        var G__15842__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__15842__1 = function(result) {
          var G__15828 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15828) : rf.call(null, G__15828);
        };
        var G__15842__2 = function(result, input) {
          var G__15829 = result;
          var G__15830 = function() {
            var G__15831 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15831) : f.call(null, G__15831);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15829, G__15830) : rf.call(null, G__15829, G__15830);
        };
        var G__15842__3 = function() {
          var G__15843__delegate = function(result, input, inputs) {
            var G__15832 = result;
            var G__15833 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15832, G__15833) : rf.call(null, G__15832, G__15833);
          };
          var G__15843 = function(result, input, var_args) {
            var inputs = null;
            if (arguments.length > 2) {
              var G__15844__i = 0, G__15844__a = new Array(arguments.length - 2);
              while (G__15844__i < G__15844__a.length) {
                G__15844__a[G__15844__i] = arguments[G__15844__i + 2];
                ++G__15844__i;
              }
              inputs = new cljs.core.IndexedSeq(G__15844__a, 0);
            }
            return G__15843__delegate.call(this, result, input, inputs);
          };
          G__15843.cljs$lang$maxFixedArity = 2;
          G__15843.cljs$lang$applyTo = function(arglist__15845) {
            var result = cljs.core.first(arglist__15845);
            arglist__15845 = cljs.core.next(arglist__15845);
            var input = cljs.core.first(arglist__15845);
            var inputs = cljs.core.rest(arglist__15845);
            return G__15843__delegate(result, input, inputs);
          };
          G__15843.cljs$core$IFn$_invoke$arity$variadic = G__15843__delegate;
          return G__15843;
        }();
        G__15842 = function(result, input, var_args) {
          var inputs = var_args;
          switch(arguments.length) {
            case 0:
              return G__15842__0.call(this);
            case 1:
              return G__15842__1.call(this, result);
            case 2:
              return G__15842__2.call(this, result, input);
            default:
              var G__15846 = null;
              if (arguments.length > 2) {
                var G__15847__i = 0, G__15847__a = new Array(arguments.length - 2);
                while (G__15847__i < G__15847__a.length) {
                  G__15847__a[G__15847__i] = arguments[G__15847__i + 2];
                  ++G__15847__i;
                }
                G__15846 = new cljs.core.IndexedSeq(G__15847__a, 0);
              }
              return G__15842__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__15846);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__15842.cljs$lang$maxFixedArity = 2;
        G__15842.cljs$lang$applyTo = G__15842__3.cljs$lang$applyTo;
        G__15842.cljs$core$IFn$_invoke$arity$0 = G__15842__0;
        G__15842.cljs$core$IFn$_invoke$arity$1 = G__15842__1;
        G__15842.cljs$core$IFn$_invoke$arity$2 = G__15842__2;
        G__15842.cljs$core$IFn$_invoke$arity$variadic = G__15842__3.cljs$core$IFn$_invoke$arity$variadic;
        return G__15842;
      }();
    };
  };
  var cljs$core$map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__5007__auto___15848 = size;
          var i_15849 = 0;
          while (true) {
            if (i_15849 < n__5007__auto___15848) {
              cljs.core.chunk_append(b, function() {
                var G__15834 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_15849);
                return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15834) : f.call(null, G__15834);
              }());
              var G__15850 = i_15849 + 1;
              i_15849 = G__15850;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__15835 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15835) : f.call(null, G__15835);
          }(), cljs$core$map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var cljs$core$map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      if (s1 && s2) {
        return cljs.core.cons(function() {
          var G__15836 = cljs.core.first(s1);
          var G__15837 = cljs.core.first(s2);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15836, G__15837) : f.call(null, G__15836, G__15837);
        }(), cljs$core$map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var cljs$core$map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      var s3 = cljs.core.seq(c3);
      if (s1 && s2 && s3) {
        return cljs.core.cons(function() {
          var G__15838 = cljs.core.first(s1);
          var G__15839 = cljs.core.first(s2);
          var G__15840 = cljs.core.first(s3);
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15838, G__15839, G__15840) : f.call(null, G__15838, G__15839, G__15840);
        }(), cljs$core$map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var cljs$core$map__5 = function() {
    var G__15851__delegate = function(f, c1, c2, c3, colls) {
      var step = function cljs$core$map_$_step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
          if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
            return cljs.core.cons(cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs$core$map_$_step(cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return cljs$core$map.cljs$core$IFn$_invoke$arity$2(function(step) {
        return function(p1__15788_SHARP_) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__15788_SHARP_);
        };
      }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
    };
    var G__15851 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        var G__15852__i = 0, G__15852__a = new Array(arguments.length - 4);
        while (G__15852__i < G__15852__a.length) {
          G__15852__a[G__15852__i] = arguments[G__15852__i + 4];
          ++G__15852__i;
        }
        colls = new cljs.core.IndexedSeq(G__15852__a, 0);
      }
      return G__15851__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__15851.cljs$lang$maxFixedArity = 4;
    G__15851.cljs$lang$applyTo = function(arglist__15853) {
      var f = cljs.core.first(arglist__15853);
      arglist__15853 = cljs.core.next(arglist__15853);
      var c1 = cljs.core.first(arglist__15853);
      arglist__15853 = cljs.core.next(arglist__15853);
      var c2 = cljs.core.first(arglist__15853);
      arglist__15853 = cljs.core.next(arglist__15853);
      var c3 = cljs.core.first(arglist__15853);
      var colls = cljs.core.rest(arglist__15853);
      return G__15851__delegate(f, c1, c2, c3, colls);
    };
    G__15851.cljs$core$IFn$_invoke$arity$variadic = G__15851__delegate;
    return G__15851;
  }();
  cljs$core$map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$map__1.call(this, f);
      case 2:
        return cljs$core$map__2.call(this, f, c1);
      case 3:
        return cljs$core$map__3.call(this, f, c1, c2);
      case 4:
        return cljs$core$map__4.call(this, f, c1, c2, c3);
      default:
        var G__15854 = null;
        if (arguments.length > 4) {
          var G__15855__i = 0, G__15855__a = new Array(arguments.length - 4);
          while (G__15855__i < G__15855__a.length) {
            G__15855__a[G__15855__i] = arguments[G__15855__i + 4];
            ++G__15855__i;
          }
          G__15854 = new cljs.core.IndexedSeq(G__15855__a, 0);
        }
        return cljs$core$map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, G__15854);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$map.cljs$lang$maxFixedArity = 4;
  cljs$core$map.cljs$lang$applyTo = cljs$core$map__5.cljs$lang$applyTo;
  cljs$core$map.cljs$core$IFn$_invoke$arity$1 = cljs$core$map__1;
  cljs$core$map.cljs$core$IFn$_invoke$arity$2 = cljs$core$map__2;
  cljs$core$map.cljs$core$IFn$_invoke$arity$3 = cljs$core$map__3;
  cljs$core$map.cljs$core$IFn$_invoke$arity$4 = cljs$core$map__4;
  cljs$core$map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$map__5.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$map;
}();
cljs.core.take = function() {
  var cljs$core$take = null;
  var cljs$core$take__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_(n);
      return function(na) {
        return function() {
          var G__15864 = null;
          var G__15864__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__15864__1 = function(result) {
            var G__15861 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15861) : rf.call(null, G__15861);
          };
          var G__15864__2 = function(result, input) {
            var n__$1 = cljs.core.deref(na);
            var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
            var result__$1 = n__$1 > 0 ? function() {
              var G__15862 = result;
              var G__15863 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15862, G__15863) : rf.call(null, G__15862, G__15863);
            }() : result;
            if (!(nn > 0)) {
              return cljs.core.ensure_reduced(result__$1);
            } else {
              return result__$1;
            }
          };
          G__15864 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__15864__0.call(this);
              case 1:
                return G__15864__1.call(this, result);
              case 2:
                return G__15864__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__15864.cljs$core$IFn$_invoke$arity$0 = G__15864__0;
          G__15864.cljs$core$IFn$_invoke$arity$1 = G__15864__1;
          G__15864.cljs$core$IFn$_invoke$arity$2 = G__15864__2;
          return G__15864;
        }();
      }(na);
    };
  };
  var cljs$core$take__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      if (n > 0) {
        var temp__4126__auto__ = cljs.core.seq(coll);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          return cljs.core.cons(cljs.core.first(s), cljs$core$take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  cljs$core$take = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$take__1.call(this, n);
      case 2:
        return cljs$core$take__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$take.cljs$core$IFn$_invoke$arity$1 = cljs$core$take__1;
  cljs$core$take.cljs$core$IFn$_invoke$arity$2 = cljs$core$take__2;
  return cljs$core$take;
}();
cljs.core.drop = function() {
  var cljs$core$drop = null;
  var cljs$core$drop__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_(n);
      return function(na) {
        return function() {
          var G__15871 = null;
          var G__15871__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__15871__1 = function(result) {
            var G__15868 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15868) : rf.call(null, G__15868);
          };
          var G__15871__2 = function(result, input) {
            var n__$1 = cljs.core.deref(na);
            na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
            if (n__$1 > 0) {
              return result;
            } else {
              var G__15869 = result;
              var G__15870 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15869, G__15870) : rf.call(null, G__15869, G__15870);
            }
          };
          G__15871 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__15871__0.call(this);
              case 1:
                return G__15871__1.call(this, result);
              case 2:
                return G__15871__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__15871.cljs$core$IFn$_invoke$arity$0 = G__15871__0;
          G__15871.cljs$core$IFn$_invoke$arity$1 = G__15871__1;
          G__15871.cljs$core$IFn$_invoke$arity$2 = G__15871__2;
          return G__15871;
        }();
      }(na);
    };
  };
  var cljs$core$drop__2 = function(n, coll) {
    var step = function(n__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq(coll__$1);
        if (n__$1 > 0 && s) {
          var G__15872 = n__$1 - 1;
          var G__15873 = cljs.core.rest(s);
          n__$1 = G__15872;
          coll__$1 = G__15873;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step(n, coll);
      };
    }(step), null, null);
  };
  cljs$core$drop = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$drop__1.call(this, n);
      case 2:
        return cljs$core$drop__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$drop.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop__1;
  cljs$core$drop.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop__2;
  return cljs$core$drop;
}();
cljs.core.drop_last = function() {
  var cljs$core$drop_last = null;
  var cljs$core$drop_last__1 = function(s) {
    return cljs$core$drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
  };
  var cljs$core$drop_last__2 = function(n, s) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
      return x;
    }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
  };
  cljs$core$drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return cljs$core$drop_last__1.call(this, n);
      case 2:
        return cljs$core$drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$drop_last.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop_last__1;
  cljs$core$drop_last.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop_last__2;
  return cljs$core$drop_last;
}();
cljs.core.take_last = function cljs$core$take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__15876 = cljs.core.next(s);
      var G__15877 = cljs.core.next(lead);
      s = G__15876;
      lead = G__15877;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function() {
  var cljs$core$drop_while = null;
  var cljs$core$drop_while__1 = function(pred) {
    return function(rf) {
      var da = cljs.core.volatile_BANG_(true);
      return function(da) {
        return function() {
          var G__15890 = null;
          var G__15890__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__15890__1 = function(result) {
            var G__15884 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15884) : rf.call(null, G__15884);
          };
          var G__15890__2 = function(result, input) {
            var drop_QMARK_ = cljs.core.deref(da);
            if (cljs.core.truth_(function() {
              var and__4110__auto__ = drop_QMARK_;
              if (cljs.core.truth_(and__4110__auto__)) {
                var G__15885 = input;
                return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15885) : pred.call(null, G__15885);
              } else {
                return and__4110__auto__;
              }
            }())) {
              return result;
            } else {
              cljs.core.vreset_BANG_(da, null);
              var G__15886 = result;
              var G__15887 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15886, G__15887) : rf.call(null, G__15886, G__15887);
            }
          };
          G__15890 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__15890__0.call(this);
              case 1:
                return G__15890__1.call(this, result);
              case 2:
                return G__15890__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__15890.cljs$core$IFn$_invoke$arity$0 = G__15890__0;
          G__15890.cljs$core$IFn$_invoke$arity$1 = G__15890__1;
          G__15890.cljs$core$IFn$_invoke$arity$2 = G__15890__2;
          return G__15890;
        }();
      }(da);
    };
  };
  var cljs$core$drop_while__2 = function(pred, coll) {
    var step = function(pred__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq(coll__$1);
        if (cljs.core.truth_(function() {
          var and__4110__auto__ = s;
          if (and__4110__auto__) {
            var G__15889 = cljs.core.first(s);
            return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__15889) : pred__$1.call(null, G__15889);
          } else {
            return and__4110__auto__;
          }
        }())) {
          var G__15891 = pred__$1;
          var G__15892 = cljs.core.rest(s);
          pred__$1 = G__15891;
          coll__$1 = G__15892;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step(pred, coll);
      };
    }(step), null, null);
  };
  cljs$core$drop_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$drop_while__1.call(this, pred);
      case 2:
        return cljs$core$drop_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$drop_while.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop_while__1;
  cljs$core$drop_while.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop_while__2;
  return cljs$core$drop_while;
}();
cljs.core.cycle = function cljs$core$cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq(coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cljs$core$cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function cljs$core$split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function() {
  var cljs$core$repeat = null;
  var cljs$core$repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(x, cljs$core$repeat.cljs$core$IFn$_invoke$arity$1(x));
    }, null, null);
  };
  var cljs$core$repeat__2 = function(n, x) {
    return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs$core$repeat.cljs$core$IFn$_invoke$arity$1(x));
  };
  cljs$core$repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return cljs$core$repeat__1.call(this, n);
      case 2:
        return cljs$core$repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$repeat.cljs$core$IFn$_invoke$arity$1 = cljs$core$repeat__1;
  cljs$core$repeat.cljs$core$IFn$_invoke$arity$2 = cljs$core$repeat__2;
  return cljs$core$repeat;
}();
cljs.core.replicate = function cljs$core$replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function() {
  var cljs$core$repeatedly = null;
  var cljs$core$repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }(), cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1(f));
    }, null, null);
  };
  var cljs$core$repeatedly__2 = function(n, f) {
    return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  };
  cljs$core$repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return cljs$core$repeatedly__1.call(this, n);
      case 2:
        return cljs$core$repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1 = cljs$core$repeatedly__1;
  cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$2 = cljs$core$repeatedly__2;
  return cljs$core$repeatedly;
}();
cljs.core.iterate = function cljs$core$iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return cljs$core$iterate(f, function() {
      var G__15901 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15901) : f.call(null, G__15901);
    }());
  }, null, null));
};
cljs.core.interleave = function() {
  var cljs$core$interleave = null;
  var cljs$core$interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      if (s1 && s2) {
        return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), cljs$core$interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var cljs$core$interleave__3 = function() {
    var G__15904__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
        if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
          return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs$core$interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__15904 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        var G__15905__i = 0, G__15905__a = new Array(arguments.length - 2);
        while (G__15905__i < G__15905__a.length) {
          G__15905__a[G__15905__i] = arguments[G__15905__i + 2];
          ++G__15905__i;
        }
        colls = new cljs.core.IndexedSeq(G__15905__a, 0);
      }
      return G__15904__delegate.call(this, c1, c2, colls);
    };
    G__15904.cljs$lang$maxFixedArity = 2;
    G__15904.cljs$lang$applyTo = function(arglist__15906) {
      var c1 = cljs.core.first(arglist__15906);
      arglist__15906 = cljs.core.next(arglist__15906);
      var c2 = cljs.core.first(arglist__15906);
      var colls = cljs.core.rest(arglist__15906);
      return G__15904__delegate(c1, c2, colls);
    };
    G__15904.cljs$core$IFn$_invoke$arity$variadic = G__15904__delegate;
    return G__15904;
  }();
  cljs$core$interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$interleave__2.call(this, c1, c2);
      default:
        var G__15907 = null;
        if (arguments.length > 2) {
          var G__15908__i = 0, G__15908__a = new Array(arguments.length - 2);
          while (G__15908__i < G__15908__a.length) {
            G__15908__a[G__15908__i] = arguments[G__15908__i + 2];
            ++G__15908__i;
          }
          G__15907 = new cljs.core.IndexedSeq(G__15908__a, 0);
        }
        return cljs$core$interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, G__15907);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$interleave.cljs$lang$maxFixedArity = 2;
  cljs$core$interleave.cljs$lang$applyTo = cljs$core$interleave__3.cljs$lang$applyTo;
  cljs$core$interleave.cljs$core$IFn$_invoke$arity$2 = cljs$core$interleave__2;
  cljs$core$interleave.cljs$core$IFn$_invoke$arity$variadic = cljs$core$interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$interleave;
}();
cljs.core.interpose = function() {
  var cljs$core$interpose = null;
  var cljs$core$interpose__1 = function(sep) {
    return function(rf) {
      var started = cljs.core.volatile_BANG_(false);
      return function(started) {
        return function() {
          var G__15923 = null;
          var G__15923__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__15923__1 = function(result) {
            var G__15916 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15916) : rf.call(null, G__15916);
          };
          var G__15923__2 = function(result, input) {
            if (cljs.core.truth_(cljs.core.deref(started))) {
              var sepr = function() {
                var G__15917 = result;
                var G__15918 = sep;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15917, G__15918) : rf.call(null, G__15917, G__15918);
              }();
              if (cljs.core.reduced_QMARK_(sepr)) {
                return sepr;
              } else {
                var G__15919 = sepr;
                var G__15920 = input;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15919, G__15920) : rf.call(null, G__15919, G__15920);
              }
            } else {
              cljs.core.vreset_BANG_(started, true);
              var G__15921 = result;
              var G__15922 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15921, G__15922) : rf.call(null, G__15921, G__15922);
            }
          };
          G__15923 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__15923__0.call(this);
              case 1:
                return G__15923__1.call(this, result);
              case 2:
                return G__15923__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__15923.cljs$core$IFn$_invoke$arity$0 = G__15923__0;
          G__15923.cljs$core$IFn$_invoke$arity$1 = G__15923__1;
          G__15923.cljs$core$IFn$_invoke$arity$2 = G__15923__2;
          return G__15923;
        }();
      }(started);
    };
  };
  var cljs$core$interpose__2 = function(sep, coll) {
    return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
  };
  cljs$core$interpose = function(sep, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$interpose__1.call(this, sep);
      case 2:
        return cljs$core$interpose__2.call(this, sep, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$interpose.cljs$core$IFn$_invoke$arity$1 = cljs$core$interpose__1;
  cljs$core$interpose.cljs$core$IFn$_invoke$arity$2 = cljs$core$interpose__2;
  return cljs$core$interpose;
}();
cljs.core.flatten1 = function cljs$core$flatten1(colls) {
  var cat = function cljs$core$flatten1_$_cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq(coll);
      if (temp__4124__auto__) {
        var coll__$1 = temp__4124__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function() {
  var cljs$core$mapcat = null;
  var cljs$core$mapcat__1 = function(f) {
    return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
  };
  var cljs$core$mapcat__2 = function() {
    var G__15932__delegate = function(f, colls) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
    };
    var G__15932 = function(f, var_args) {
      var colls = null;
      if (arguments.length > 1) {
        var G__15933__i = 0, G__15933__a = new Array(arguments.length - 1);
        while (G__15933__i < G__15933__a.length) {
          G__15933__a[G__15933__i] = arguments[G__15933__i + 1];
          ++G__15933__i;
        }
        colls = new cljs.core.IndexedSeq(G__15933__a, 0);
      }
      return G__15932__delegate.call(this, f, colls);
    };
    G__15932.cljs$lang$maxFixedArity = 1;
    G__15932.cljs$lang$applyTo = function(arglist__15934) {
      var f = cljs.core.first(arglist__15934);
      var colls = cljs.core.rest(arglist__15934);
      return G__15932__delegate(f, colls);
    };
    G__15932.cljs$core$IFn$_invoke$arity$variadic = G__15932__delegate;
    return G__15932;
  }();
  cljs$core$mapcat = function(f, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$mapcat__1.call(this, f);
      default:
        var G__15935 = null;
        if (arguments.length > 1) {
          var G__15936__i = 0, G__15936__a = new Array(arguments.length - 1);
          while (G__15936__i < G__15936__a.length) {
            G__15936__a[G__15936__i] = arguments[G__15936__i + 1];
            ++G__15936__i;
          }
          G__15935 = new cljs.core.IndexedSeq(G__15936__a, 0);
        }
        return cljs$core$mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__15935);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$mapcat.cljs$lang$maxFixedArity = 1;
  cljs$core$mapcat.cljs$lang$applyTo = cljs$core$mapcat__2.cljs$lang$applyTo;
  cljs$core$mapcat.cljs$core$IFn$_invoke$arity$1 = cljs$core$mapcat__1;
  cljs$core$mapcat.cljs$core$IFn$_invoke$arity$variadic = cljs$core$mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$mapcat;
}();
cljs.core.filter = function() {
  var cljs$core$filter = null;
  var cljs$core$filter__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__15955 = null;
        var G__15955__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__15955__1 = function(result) {
          var G__15949 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15949) : rf.call(null, G__15949);
        };
        var G__15955__2 = function(result, input) {
          if (cljs.core.truth_(function() {
            var G__15950 = input;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15950) : pred.call(null, G__15950);
          }())) {
            var G__15951 = result;
            var G__15952 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15951, G__15952) : rf.call(null, G__15951, G__15952);
          } else {
            return result;
          }
        };
        G__15955 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__15955__0.call(this);
            case 1:
              return G__15955__1.call(this, result);
            case 2:
              return G__15955__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__15955.cljs$core$IFn$_invoke$arity$0 = G__15955__0;
        G__15955.cljs$core$IFn$_invoke$arity$1 = G__15955__1;
        G__15955.cljs$core$IFn$_invoke$arity$2 = G__15955__2;
        return G__15955;
      }();
    };
  };
  var cljs$core$filter__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__5007__auto___15956 = size;
          var i_15957 = 0;
          while (true) {
            if (i_15957 < n__5007__auto___15956) {
              if (cljs.core.truth_(function() {
                var G__15953 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_15957);
                return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15953) : pred.call(null, G__15953);
              }())) {
                cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_15957));
              } else {
              }
              var G__15958 = i_15957 + 1;
              i_15957 = G__15958;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
        } else {
          var f = cljs.core.first(s);
          var r = cljs.core.rest(s);
          if (cljs.core.truth_(function() {
            var G__15954 = f;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15954) : pred.call(null, G__15954);
          }())) {
            return cljs.core.cons(f, cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred, r));
          } else {
            return cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred, r);
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  cljs$core$filter = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$filter__1.call(this, pred);
      case 2:
        return cljs$core$filter__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$filter.cljs$core$IFn$_invoke$arity$1 = cljs$core$filter__1;
  cljs$core$filter.cljs$core$IFn$_invoke$arity$2 = cljs$core$filter__2;
  return cljs$core$filter;
}();
cljs.core.remove = function() {
  var cljs$core$remove = null;
  var cljs$core$remove__1 = function(pred) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
  };
  var cljs$core$remove__2 = function(pred, coll) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
  };
  cljs$core$remove = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$remove__1.call(this, pred);
      case 2:
        return cljs$core$remove__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$remove.cljs$core$IFn$_invoke$arity$1 = cljs$core$remove__1;
  cljs$core$remove.cljs$core$IFn$_invoke$arity$2 = cljs$core$remove__2;
  return cljs$core$remove;
}();
cljs.core.tree_seq = function cljs$core$tree_seq(branch_QMARK_, children, root) {
  var walk = function cljs$core$tree_seq_$_walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(function() {
        var G__15965 = node;
        return branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__15965) : branch_QMARK_.call(null, G__15965);
      }()) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk, cljs.core.array_seq([function() {
        var G__15966 = node;
        return children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__15966) : children.call(null, G__15966);
      }()], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function cljs$core$flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__15967_SHARP_) {
    return!cljs.core.sequential_QMARK_(p1__15967_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function() {
  var cljs$core$into = null;
  var cljs$core$into__2 = function(to, from) {
    if (!(to == null)) {
      if (function() {
        var G__15970 = to;
        if (G__15970) {
          var bit__4789__auto__ = G__15970.cljs$lang$protocol_mask$partition1$ & 4;
          if (bit__4789__auto__ || G__15970.cljs$core$IEditableCollection$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
      } else {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
      }
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
    }
  };
  var cljs$core$into__3 = function(to, xform, from) {
    if (function() {
      var G__15971 = to;
      if (G__15971) {
        var bit__4789__auto__ = G__15971.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4789__auto__ || G__15971.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
    }
  };
  cljs$core$into = function(to, xform, from) {
    switch(arguments.length) {
      case 2:
        return cljs$core$into__2.call(this, to, xform);
      case 3:
        return cljs$core$into__3.call(this, to, xform, from);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$into.cljs$core$IFn$_invoke$arity$2 = cljs$core$into__2;
  cljs$core$into.cljs$core$IFn$_invoke$arity$3 = cljs$core$into__3;
  return cljs$core$into;
}();
cljs.core.mapv = function() {
  var cljs$core$mapv = null;
  var cljs$core$mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, function() {
        var G__15973 = o;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15973) : f.call(null, G__15973);
      }());
    }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
  };
  var cljs$core$mapv__3 = function(f, c1, c2) {
    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
  };
  var cljs$core$mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
  };
  var cljs$core$mapv__5 = function() {
    var G__15974__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
    };
    var G__15974 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        var G__15975__i = 0, G__15975__a = new Array(arguments.length - 4);
        while (G__15975__i < G__15975__a.length) {
          G__15975__a[G__15975__i] = arguments[G__15975__i + 4];
          ++G__15975__i;
        }
        colls = new cljs.core.IndexedSeq(G__15975__a, 0);
      }
      return G__15974__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__15974.cljs$lang$maxFixedArity = 4;
    G__15974.cljs$lang$applyTo = function(arglist__15976) {
      var f = cljs.core.first(arglist__15976);
      arglist__15976 = cljs.core.next(arglist__15976);
      var c1 = cljs.core.first(arglist__15976);
      arglist__15976 = cljs.core.next(arglist__15976);
      var c2 = cljs.core.first(arglist__15976);
      arglist__15976 = cljs.core.next(arglist__15976);
      var c3 = cljs.core.first(arglist__15976);
      var colls = cljs.core.rest(arglist__15976);
      return G__15974__delegate(f, c1, c2, c3, colls);
    };
    G__15974.cljs$core$IFn$_invoke$arity$variadic = G__15974__delegate;
    return G__15974;
  }();
  cljs$core$mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$mapv__2.call(this, f, c1);
      case 3:
        return cljs$core$mapv__3.call(this, f, c1, c2);
      case 4:
        return cljs$core$mapv__4.call(this, f, c1, c2, c3);
      default:
        var G__15977 = null;
        if (arguments.length > 4) {
          var G__15978__i = 0, G__15978__a = new Array(arguments.length - 4);
          while (G__15978__i < G__15978__a.length) {
            G__15978__a[G__15978__i] = arguments[G__15978__i + 4];
            ++G__15978__i;
          }
          G__15977 = new cljs.core.IndexedSeq(G__15978__a, 0);
        }
        return cljs$core$mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, G__15977);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$mapv.cljs$lang$maxFixedArity = 4;
  cljs$core$mapv.cljs$lang$applyTo = cljs$core$mapv__5.cljs$lang$applyTo;
  cljs$core$mapv.cljs$core$IFn$_invoke$arity$2 = cljs$core$mapv__2;
  cljs$core$mapv.cljs$core$IFn$_invoke$arity$3 = cljs$core$mapv__3;
  cljs$core$mapv.cljs$core$IFn$_invoke$arity$4 = cljs$core$mapv__4;
  cljs$core$mapv.cljs$core$IFn$_invoke$arity$variadic = cljs$core$mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$mapv;
}();
cljs.core.filterv = function cljs$core$filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(function() {
      var G__15980 = o;
      return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15980) : pred.call(null, G__15980);
    }())) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var cljs$core$partition = null;
  var cljs$core$partition__2 = function(n, coll) {
    return cljs$core$partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
  };
  var cljs$core$partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
        if (n === cljs.core.count(p)) {
          return cljs.core.cons(p, cljs$core$partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var cljs$core$partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
        if (n === cljs.core.count(p)) {
          return cljs.core.cons(p, cljs$core$partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
        } else {
          return cljs.core._conj(cljs.core.List.EMPTY, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  cljs$core$partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return cljs$core$partition__2.call(this, n, step);
      case 3:
        return cljs$core$partition__3.call(this, n, step, pad);
      case 4:
        return cljs$core$partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$partition.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition__2;
  cljs$core$partition.cljs$core$IFn$_invoke$arity$3 = cljs$core$partition__3;
  cljs$core$partition.cljs$core$IFn$_invoke$arity$4 = cljs$core$partition__4;
  return cljs$core$partition;
}();
cljs.core.get_in = function() {
  var cljs$core$get_in = null;
  var cljs$core$get_in__2 = function(m, ks) {
    return cljs$core$get_in.cljs$core$IFn$_invoke$arity$3(m, ks, null);
  };
  var cljs$core$get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq(ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__15995 = m__$1;
          if (G__15995) {
            var bit__4796__auto__ = G__15995.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4796__auto__ || G__15995.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__15995.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__15995);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__15995);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__15996 = sentinel;
            var G__15997 = m__$2;
            var G__15998 = cljs.core.next(ks__$1);
            sentinel = G__15996;
            m__$1 = G__15997;
            ks__$1 = G__15998;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  cljs$core$get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return cljs$core$get_in__2.call(this, m, ks);
      case 3:
        return cljs$core$get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$get_in.cljs$core$IFn$_invoke$arity$2 = cljs$core$get_in__2;
  cljs$core$get_in.cljs$core$IFn$_invoke$arity$3 = cljs$core$get_in__3;
  return cljs$core$get_in;
}();
cljs.core.assoc_in = function cljs$core$assoc_in(m, p__15999, v) {
  var vec__16004 = p__15999;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16004, 0, null);
  var ks = cljs.core.nthnext(vec__16004, 1);
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function() {
  var cljs$core$update_in = null;
  var cljs$core$update_in__3 = function(m, p__16005, f) {
    var vec__16043 = p__16005;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16043, 0, null);
    var ks = cljs.core.nthnext(vec__16043, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs$core$update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__16044 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16044) : f.call(null, G__16044);
      }());
    }
  };
  var cljs$core$update_in__4 = function(m, p__16006, f, a) {
    var vec__16045 = p__16006;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16045, 0, null);
    var ks = cljs.core.nthnext(vec__16045, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs$core$update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__16046 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__16047 = a;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16046, G__16047) : f.call(null, G__16046, G__16047);
      }());
    }
  };
  var cljs$core$update_in__5 = function(m, p__16007, f, a, b) {
    var vec__16048 = p__16007;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16048, 0, null);
    var ks = cljs.core.nthnext(vec__16048, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs$core$update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__16049 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__16050 = a;
        var G__16051 = b;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16049, G__16050, G__16051) : f.call(null, G__16049, G__16050, G__16051);
      }());
    }
  };
  var cljs$core$update_in__6 = function(m, p__16008, f, a, b, c) {
    var vec__16052 = p__16008;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16052, 0, null);
    var ks = cljs.core.nthnext(vec__16052, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs$core$update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__16053 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__16054 = a;
        var G__16055 = b;
        var G__16056 = c;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__16053, G__16054, G__16055, G__16056) : f.call(null, G__16053, G__16054, G__16055, G__16056);
      }());
    }
  };
  var cljs$core$update_in__7 = function() {
    var G__16058__delegate = function(m, p__16009, f, a, b, c, args) {
      var vec__16057 = p__16009;
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16057, 0, null);
      var ks = cljs.core.nthnext(vec__16057, 1);
      if (ks) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs$core$update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
      }
    };
    var G__16058 = function(m, p__16009, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        var G__16059__i = 0, G__16059__a = new Array(arguments.length - 6);
        while (G__16059__i < G__16059__a.length) {
          G__16059__a[G__16059__i] = arguments[G__16059__i + 6];
          ++G__16059__i;
        }
        args = new cljs.core.IndexedSeq(G__16059__a, 0);
      }
      return G__16058__delegate.call(this, m, p__16009, f, a, b, c, args);
    };
    G__16058.cljs$lang$maxFixedArity = 6;
    G__16058.cljs$lang$applyTo = function(arglist__16060) {
      var m = cljs.core.first(arglist__16060);
      arglist__16060 = cljs.core.next(arglist__16060);
      var p__16009 = cljs.core.first(arglist__16060);
      arglist__16060 = cljs.core.next(arglist__16060);
      var f = cljs.core.first(arglist__16060);
      arglist__16060 = cljs.core.next(arglist__16060);
      var a = cljs.core.first(arglist__16060);
      arglist__16060 = cljs.core.next(arglist__16060);
      var b = cljs.core.first(arglist__16060);
      arglist__16060 = cljs.core.next(arglist__16060);
      var c = cljs.core.first(arglist__16060);
      var args = cljs.core.rest(arglist__16060);
      return G__16058__delegate(m, p__16009, f, a, b, c, args);
    };
    G__16058.cljs$core$IFn$_invoke$arity$variadic = G__16058__delegate;
    return G__16058;
  }();
  cljs$core$update_in = function(m, p__16009, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return cljs$core$update_in__3.call(this, m, p__16009, f);
      case 4:
        return cljs$core$update_in__4.call(this, m, p__16009, f, a);
      case 5:
        return cljs$core$update_in__5.call(this, m, p__16009, f, a, b);
      case 6:
        return cljs$core$update_in__6.call(this, m, p__16009, f, a, b, c);
      default:
        var G__16061 = null;
        if (arguments.length > 6) {
          var G__16062__i = 0, G__16062__a = new Array(arguments.length - 6);
          while (G__16062__i < G__16062__a.length) {
            G__16062__a[G__16062__i] = arguments[G__16062__i + 6];
            ++G__16062__i;
          }
          G__16061 = new cljs.core.IndexedSeq(G__16062__a, 0);
        }
        return cljs$core$update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__16009, f, a, b, c, G__16061);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$update_in.cljs$lang$maxFixedArity = 6;
  cljs$core$update_in.cljs$lang$applyTo = cljs$core$update_in__7.cljs$lang$applyTo;
  cljs$core$update_in.cljs$core$IFn$_invoke$arity$3 = cljs$core$update_in__3;
  cljs$core$update_in.cljs$core$IFn$_invoke$arity$4 = cljs$core$update_in__4;
  cljs$core$update_in.cljs$core$IFn$_invoke$arity$5 = cljs$core$update_in__5;
  cljs$core$update_in.cljs$core$IFn$_invoke$arity$6 = cljs$core$update_in__6;
  cljs$core$update_in.cljs$core$IFn$_invoke$arity$variadic = cljs$core$update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$update_in;
}();
cljs.core.update = function() {
  var cljs$core$update = null;
  var cljs$core$update__3 = function(m, k, f) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__16073 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16073) : f.call(null, G__16073);
    }());
  };
  var cljs$core$update__4 = function(m, k, f, x) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__16074 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__16075 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16074, G__16075) : f.call(null, G__16074, G__16075);
    }());
  };
  var cljs$core$update__5 = function(m, k, f, x, y) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__16076 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__16077 = x;
      var G__16078 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16076, G__16077, G__16078) : f.call(null, G__16076, G__16077, G__16078);
    }());
  };
  var cljs$core$update__6 = function(m, k, f, x, y, z) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__16079 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__16080 = x;
      var G__16081 = y;
      var G__16082 = z;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__16079, G__16080, G__16081, G__16082) : f.call(null, G__16079, G__16080, G__16081, G__16082);
    }());
  };
  var cljs$core$update__7 = function() {
    var G__16083__delegate = function(m, k, f, x, y, z, more) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
    };
    var G__16083 = function(m, k, f, x, y, z, var_args) {
      var more = null;
      if (arguments.length > 6) {
        var G__16084__i = 0, G__16084__a = new Array(arguments.length - 6);
        while (G__16084__i < G__16084__a.length) {
          G__16084__a[G__16084__i] = arguments[G__16084__i + 6];
          ++G__16084__i;
        }
        more = new cljs.core.IndexedSeq(G__16084__a, 0);
      }
      return G__16083__delegate.call(this, m, k, f, x, y, z, more);
    };
    G__16083.cljs$lang$maxFixedArity = 6;
    G__16083.cljs$lang$applyTo = function(arglist__16085) {
      var m = cljs.core.first(arglist__16085);
      arglist__16085 = cljs.core.next(arglist__16085);
      var k = cljs.core.first(arglist__16085);
      arglist__16085 = cljs.core.next(arglist__16085);
      var f = cljs.core.first(arglist__16085);
      arglist__16085 = cljs.core.next(arglist__16085);
      var x = cljs.core.first(arglist__16085);
      arglist__16085 = cljs.core.next(arglist__16085);
      var y = cljs.core.first(arglist__16085);
      arglist__16085 = cljs.core.next(arglist__16085);
      var z = cljs.core.first(arglist__16085);
      var more = cljs.core.rest(arglist__16085);
      return G__16083__delegate(m, k, f, x, y, z, more);
    };
    G__16083.cljs$core$IFn$_invoke$arity$variadic = G__16083__delegate;
    return G__16083;
  }();
  cljs$core$update = function(m, k, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 3:
        return cljs$core$update__3.call(this, m, k, f);
      case 4:
        return cljs$core$update__4.call(this, m, k, f, x);
      case 5:
        return cljs$core$update__5.call(this, m, k, f, x, y);
      case 6:
        return cljs$core$update__6.call(this, m, k, f, x, y, z);
      default:
        var G__16086 = null;
        if (arguments.length > 6) {
          var G__16087__i = 0, G__16087__a = new Array(arguments.length - 6);
          while (G__16087__i < G__16087__a.length) {
            G__16087__a[G__16087__i] = arguments[G__16087__i + 6];
            ++G__16087__i;
          }
          G__16086 = new cljs.core.IndexedSeq(G__16087__a, 0);
        }
        return cljs$core$update__7.cljs$core$IFn$_invoke$arity$variadic(m, k, f, x, y, z, G__16086);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$update.cljs$lang$maxFixedArity = 6;
  cljs$core$update.cljs$lang$applyTo = cljs$core$update__7.cljs$lang$applyTo;
  cljs$core$update.cljs$core$IFn$_invoke$arity$3 = cljs$core$update__3;
  cljs$core$update.cljs$core$IFn$_invoke$arity$4 = cljs$core$update__4;
  cljs$core$update.cljs$core$IFn$_invoke$arity$5 = cljs$core$update__5;
  cljs$core$update.cljs$core$IFn$_invoke$arity$6 = cljs$core$update__6;
  cljs$core$update.cljs$core$IFn$_invoke$arity$variadic = cljs$core$update__7.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$update;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function cljs$core$__GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function cljs$core$pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function cljs$core$pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function cljs$core$pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function cljs$core$pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function cljs$core$tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function cljs$core$new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__16088 = ll - 5;
      var G__16089 = r;
      ll = G__16088;
      ret = G__16089;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function cljs$core$push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = cljs$core$push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function cljs$core$vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function cljs$core$first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__16094 = cljs.core.pv_aget(node, 0);
      var G__16095 = level - 5;
      node = G__16094;
      level = G__16095;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function cljs$core$unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__16096 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__16097 = level - 5;
        node = G__16096;
        level = G__16097;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function cljs$core$array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function cljs$core$do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, cljs$core$do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function cljs$core$pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function cljs$core$__GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function cljs$core$ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__16107 = init__$2;
              var G__16108 = j + i;
              var G__16109 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16107, G__16108, G__16109) : f.call(null, G__16107, G__16108, G__16109);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__16120 = j + 1;
              var G__16121 = init__$3;
              j = G__16120;
              init__$2 = G__16121;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__16110 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16110) : cljs.core.deref.call(null, G__16110);
      } else {
        var G__16122 = i + len;
        var G__16123 = init__$2;
        i = G__16122;
        init__$1 = G__16123;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4538__auto__ = self__.__hash;
  if (!(h__4538__auto__ == null)) {
    return h__4538__auto__;
  } else {
    var h__4538__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4538__auto____$1;
    return h__4538__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, function() {
    var G__16111 = self__.root;
    return cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__16111) : cljs.core.tv_editable_root.call(null, G__16111);
  }(), function() {
    var G__16112 = self__.tail;
    return cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__16112) : cljs.core.tv_editable_tail.call(null, G__16112);
  }());
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__16113 = init__$2;
              var G__16114 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16113, G__16114) : f.call(null, G__16113, G__16114);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__16124 = j + 1;
              var G__16125 = init__$3;
              j = G__16124;
              init__$2 = G__16125;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__16115 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16115) : cljs.core.deref.call(null, G__16115);
      } else {
        var G__16126 = i + len;
        var G__16127 = init__$2;
        i = G__16126;
        init__$1 = G__16127;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      var G__16116 = coll__$1;
      var G__16117 = cljs.core.first_array_for_longvec(coll__$1);
      var G__16118 = 0;
      var G__16119 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__16116, G__16117, G__16118, G__16119) : cljs.core.chunked_seq.call(null, G__16116, G__16117, G__16118, G__16119);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__5007__auto___16128 = len;
    var i_16129 = 0;
    while (true) {
      if (i_16129 < n__5007__auto___16128) {
        new_tail[i_16129] = self__.tail[i_16129];
        var G__16130 = i_16129 + 1;
        i_16129 = G__16130;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__16131 = null;
  var G__16131__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__16131__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__16131 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16131__2.call(this, self__, k);
      case 3:
        return G__16131__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16131.cljs$core$IFn$_invoke$arity$2 = G__16131__2;
  G__16131.cljs$core$IFn$_invoke$arity$3 = G__16131__3;
  return G__16131;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args16106) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16106)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function cljs$core$__GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__16132 = i + 1;
        var G__16133 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__16132;
        out = G__16133;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5098__auto__ = this;
  return cljs.core.es6_iterator(this__5098__auto__);
};
cljs.core.vec = function cljs$core$vec(coll) {
  if (cljs.core.array_QMARK_(coll)) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function() {
  var cljs$core$vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray(args.arr, true);
    } else {
      return cljs.core.vec(args);
    }
  };
  var cljs$core$vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      var G__16134__i = 0, G__16134__a = new Array(arguments.length - 0);
      while (G__16134__i < G__16134__a.length) {
        G__16134__a[G__16134__i] = arguments[G__16134__i + 0];
        ++G__16134__i;
      }
      args = new cljs.core.IndexedSeq(G__16134__a, 0);
    }
    return cljs$core$vector__delegate.call(this, args);
  };
  cljs$core$vector.cljs$lang$maxFixedArity = 0;
  cljs$core$vector.cljs$lang$applyTo = function(arglist__16135) {
    var args = cljs.core.seq(arglist__16135);
    return cljs$core$vector__delegate(args);
  };
  cljs$core$vector.cljs$core$IFn$_invoke$arity$variadic = cljs$core$vector__delegate;
  return cljs$core$vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__16136 = self__.vec;
      var G__16137 = self__.node;
      var G__16138 = self__.i;
      var G__16139 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__16136, G__16137, G__16138, G__16139) : cljs.core.chunked_seq.call(null, G__16136, G__16137, G__16138, G__16139);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4538__auto__ = self__.__hash;
  if (!(h__4538__auto__ == null)) {
    return h__4538__auto__;
  } else {
    var h__4538__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4538__auto____$1;
    return h__4538__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__16140 = self__.vec;
    var G__16141 = self__.i + self__.off;
    var G__16142 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__16140, G__16141, G__16142) : cljs.core.subvec.call(null, G__16140, G__16141, G__16142);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__16143 = self__.vec;
    var G__16144 = self__.i + self__.off;
    var G__16145 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__16143, G__16144, G__16145) : cljs.core.subvec.call(null, G__16143, G__16144, G__16145);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__16146 = self__.vec;
      var G__16147 = self__.node;
      var G__16148 = self__.i;
      var G__16149 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__16146, G__16147, G__16148, G__16149) : cljs.core.chunked_seq.call(null, G__16146, G__16147, G__16148, G__16149);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__16150 = self__.vec;
    var G__16151 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__16152 = end;
    var G__16153 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__16150, G__16151, G__16152, G__16153) : cljs.core.chunked_seq.call(null, G__16150, G__16151, G__16152, G__16153);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  var G__16154 = self__.vec;
  var G__16155 = self__.node;
  var G__16156 = self__.i;
  var G__16157 = self__.off;
  var G__16158 = m;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__16154, G__16155, G__16156, G__16157, G__16158) : cljs.core.chunked_seq.call(null, G__16154, G__16155, G__16156, G__16157, G__16158);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__16159 = self__.vec;
    var G__16160 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__16161 = end;
    var G__16162 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__16159, G__16160, G__16161, G__16162) : cljs.core.chunked_seq.call(null, G__16159, G__16160, G__16161, G__16162);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function cljs$core$__GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5098__auto__ = this;
  return cljs.core.es6_iterator(this__5098__auto__);
};
cljs.core.chunked_seq = function() {
  var cljs$core$chunked_seq = null;
  var cljs$core$chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
  };
  var cljs$core$chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var cljs$core$chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  cljs$core$chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return cljs$core$chunked_seq__3.call(this, vec, node, i);
      case 4:
        return cljs$core$chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return cljs$core$chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$3 = cljs$core$chunked_seq__3;
  cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$4 = cljs$core$chunked_seq__4;
  cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$5 = cljs$core$chunked_seq__5;
  return cljs$core$chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var i = self__.start;
  var j = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.end) {
      var init__$2 = function() {
        var G__16164 = init__$1;
        var G__16165 = j;
        var G__16166 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16164, G__16165, G__16166) : f.call(null, G__16164, G__16165, G__16166);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__16167 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16167) : cljs.core.deref.call(null, G__16167);
      } else {
        var G__16189 = i + 1;
        var G__16190 = j + 1;
        var G__16191 = init__$2;
        i = G__16189;
        j = G__16190;
        init__$1 = G__16191;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__16168 = self__.meta;
  var G__16169 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__16170 = self__.start;
  var G__16171 = function() {
    var x__4434__auto__ = self__.end;
    var y__4435__auto__ = v_pos + 1;
    return x__4434__auto__ > y__4435__auto__ ? x__4434__auto__ : y__4435__auto__;
  }();
  var G__16172 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__16168, G__16169, G__16170, G__16171, G__16172) : cljs.core.build_subvec.call(null, G__16168, G__16169, G__16170, G__16171, G__16172);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__16173 = self__.meta;
    var G__16174 = self__.v;
    var G__16175 = self__.start;
    var G__16176 = self__.end - 1;
    var G__16177 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__16173, G__16174, G__16175, G__16176, G__16177) : cljs.core.build_subvec.call(null, G__16173, G__16174, G__16175, G__16176, G__16177);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4538__auto__ = self__.__hash;
  if (!(h__4538__auto__ == null)) {
    return h__4538__auto__;
  } else {
    var h__4538__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4538__auto____$1;
    return h__4538__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function cljs$core$subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return cljs$core$subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  var G__16179 = meta__$1;
  var G__16180 = self__.v;
  var G__16181 = self__.start;
  var G__16182 = self__.end;
  var G__16183 = self__.__hash;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__16179, G__16180, G__16181, G__16182, G__16183) : cljs.core.build_subvec.call(null, G__16179, G__16180, G__16181, G__16182, G__16183);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__16184 = self__.meta;
  var G__16185 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__16186 = self__.start;
  var G__16187 = self__.end + 1;
  var G__16188 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__16184, G__16185, G__16186, G__16187, G__16188) : cljs.core.build_subvec.call(null, G__16184, G__16185, G__16186, G__16187, G__16188);
};
cljs.core.Subvec.prototype.call = function() {
  var G__16192 = null;
  var G__16192__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__16192__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__16192 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16192__2.call(this, self__, k);
      case 3:
        return G__16192__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16192.cljs$core$IFn$_invoke$arity$2 = G__16192__2;
  G__16192.cljs$core$IFn$_invoke$arity$3 = G__16192__3;
  return G__16192;
}();
cljs.core.Subvec.prototype.apply = function(self__, args16163) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16163)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function cljs$core$__GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5098__auto__ = this;
  return cljs.core.es6_iterator(this__5098__auto__);
};
cljs.core.build_subvec = function cljs$core$build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__16193 = meta;
      var G__16194 = v.v;
      var G__16195 = v.start + start;
      var G__16196 = v.start + end;
      var G__16197 = __hash;
      meta = G__16193;
      v = G__16194;
      start = G__16195;
      end = G__16196;
      __hash = G__16197;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var cljs$core$subvec = null;
  var cljs$core$subvec__2 = function(v, start) {
    return cljs$core$subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
  };
  var cljs$core$subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec(null, v, start, end, null);
  };
  cljs$core$subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return cljs$core$subvec__2.call(this, v, start);
      case 3:
        return cljs$core$subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$subvec.cljs$core$IFn$_invoke$arity$2 = cljs$core$subvec__2;
  cljs$core$subvec.cljs$core$IFn$_invoke$arity$3 = cljs$core$subvec__3;
  return cljs$core$subvec;
}();
cljs.core.tv_ensure_editable = function cljs$core$tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function cljs$core$tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj16204 = {};
    return obj16204;
  }(), cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function cljs$core$tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function cljs$core$tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return cljs$core$tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function cljs$core$tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function cljs$core$unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__16212 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__16213 = level - 5;
        node = G__16212;
        level = G__16213;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.prototype.call = function() {
  var G__16217 = null;
  var G__16217__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__16217__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__16217 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16217__2.call(this, self__, k);
      case 3:
        return G__16217__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16217.cljs$core$IFn$_invoke$arity$2 = G__16217__2;
  G__16217.cljs$core$IFn$_invoke$arity$3 = G__16217__3;
  return G__16217;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args16214) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16214)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function cljs$core$go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, cljs$core$go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function cljs$core$__GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4538__auto__ = self__.__hash;
  if (!(h__4538__auto__ == null)) {
    return h__4538__auto__;
  } else {
    var h__4538__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4538__auto____$1;
    return h__4538__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4124__auto__ = cljs.core.next(self__.front);
  if (temp__4124__auto__) {
    var f1 = temp__4124__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function cljs$core$__GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5098__auto__ = this;
  return cljs.core.es6_iterator(this__5098__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4124__auto__ = cljs.core.next(self__.front);
    if (temp__4124__auto__) {
      var f1 = temp__4124__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4538__auto__ = self__.__hash;
  if (!(h__4538__auto__ == null)) {
    return h__4538__auto__;
  } else {
    var h__4538__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4538__auto____$1;
    return h__4538__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__4122__auto__ = self__.front;
    if (cljs.core.truth_(or__4122__auto__)) {
      return or__4122__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__4122__auto__ = self__.rear;
      if (cljs.core.truth_(or__4122__auto__)) {
        return or__4122__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function cljs$core$__GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5098__auto__ = this;
  return cljs.core.es6_iterator(this__5098__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function cljs$core$__GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function cljs$core$equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function cljs$core$scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__16218 = i + incr;
        i = G__16218;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function cljs$core$obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function cljs$core$obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__16219 = i + 1;
      var G__16220 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__16219;
      out = G__16220;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function cljs$core$obj_clone(obj, ks) {
  var new_obj = function() {
    var obj16224 = {};
    return obj16224;
  }();
  var l = ks.length;
  var i_16225 = 0;
  while (true) {
    if (i_16225 < l) {
      var k_16226 = ks[i_16225];
      new_obj[k_16226] = obj[k_16226];
      var G__16227 = i_16225 + 1;
      i_16225 = G__16227;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__4110__auto__ = function() {
      var G__16231 = k;
      return goog.isString(G__16231);
    }();
    if (cljs.core.truth_(and__4110__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__4110__auto__;
    }
  }())) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__16232 = init__$1;
        var G__16233 = k;
        var G__16234 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16232, G__16233, G__16234) : f.call(null, G__16232, G__16233, G__16234);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__16235 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16235) : cljs.core.deref.call(null, G__16235);
      } else {
        var G__16241 = cljs.core.rest(keys__$1);
        var G__16242 = init__$2;
        keys__$1 = G__16241;
        init__$1 = G__16242;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4538__auto__ = self__.__hash;
  if (!(h__4538__auto__ == null)) {
    return h__4538__auto__;
  } else {
    var h__4538__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4538__auto____$1;
    return h__4538__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__4110__auto__ = function() {
      var G__16237 = k;
      return goog.isString(G__16237);
    }();
    if (cljs.core.truth_(and__4110__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__4110__auto__;
    }
  }())) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var G__16238 = k;
    return goog.isString(G__16238);
  }())) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__4110__auto__ = function() {
      var G__16240 = k;
      return goog.isString(G__16240);
    }();
    if (cljs.core.truth_(and__4110__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__4110__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__16228_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__16228_SHARP_, self__.strobj[p1__16228_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__16243 = null;
  var G__16243__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__16243__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__16243 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16243__2.call(this, self__, k);
      case 3:
        return G__16243__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16243.cljs$core$IFn$_invoke$arity$2 = G__16243__2;
  G__16243.cljs$core$IFn$_invoke$arity$3 = G__16243__3;
  return G__16243;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args16229) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16229)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function cljs$core$__GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj16245 = {};
  return obj16245;
}(), 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__16246 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16246, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16246, 1, null);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":[k, v]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function cljs$core$__GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function cljs$core$es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":[x, x]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function cljs$core$__GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function cljs$core$es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_map_index_of_nil_QMARK_ = function cljs$core$array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__16247 = i + 2;
        i = G__16247;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function cljs$core$array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        var G__16248 = i + 2;
        i = G__16248;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function cljs$core$array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        var G__16249 = i + 2;
        i = G__16249;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function cljs$core$array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__16250 = i + 2;
        i = G__16250;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function cljs$core$array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__16251 = i + 2;
        i = G__16251;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function cljs$core$array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_(arr, m, k);
  } else {
    if (cljs.core.truth_(function() {
      var or__4122__auto__ = function() {
        var G__16255 = k;
        return goog.isString(G__16255);
      }();
      if (cljs.core.truth_(or__4122__auto__)) {
        return or__4122__auto__;
      } else {
        return typeof k === "number";
      }
    }())) {
      return cljs.core.array_map_index_of_identical_QMARK_(arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_(arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_(arr, m, k);
        } else {
          return cljs.core.array_map_index_of_equiv_QMARK_(arr, m, k);
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function cljs$core$array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_16256 = 0;
  while (true) {
    if (i_16256 < l) {
      narr[i_16256] = arr[i_16256];
      var G__16257 = i_16256 + 1;
      i_16256 = G__16257;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function cljs$core$__GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5098__auto__ = this;
  return cljs.core.es6_iterator(this__5098__auto__);
};
cljs.core.persistent_array_map_seq = function cljs$core$persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function cljs$core$__GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__16259 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__16259) : cljs.core.keys.call(null, G__16259);
  }());
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__16260 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__16260) : cljs.core.vals.call(null, G__16260);
  }());
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__16261 = cljs.core.seq(coll);
  var chunk__16262 = null;
  var count__16263 = 0;
  var i__16264 = 0;
  while (true) {
    if (i__16264 < count__16263) {
      var vec__16265 = chunk__16262.cljs$core$IIndexed$_nth$arity$2(null, i__16264);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16265, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16265, 1, null);
      var G__16266_16279 = v;
      var G__16267_16280 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16266_16279, G__16267_16280) : f.call(null, G__16266_16279, G__16267_16280);
      var G__16281 = seq__16261;
      var G__16282 = chunk__16262;
      var G__16283 = count__16263;
      var G__16284 = i__16264 + 1;
      seq__16261 = G__16281;
      chunk__16262 = G__16282;
      count__16263 = G__16283;
      i__16264 = G__16284;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__16261);
      if (temp__4126__auto__) {
        var seq__16261__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__16261__$1)) {
          var c__4907__auto__ = cljs.core.chunk_first(seq__16261__$1);
          var G__16285 = cljs.core.chunk_rest(seq__16261__$1);
          var G__16286 = c__4907__auto__;
          var G__16287 = cljs.core.count(c__4907__auto__);
          var G__16288 = 0;
          seq__16261 = G__16285;
          chunk__16262 = G__16286;
          count__16263 = G__16287;
          i__16264 = G__16288;
          continue;
        } else {
          var vec__16268 = cljs.core.first(seq__16261__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16268, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16268, 1, null);
          var G__16269_16289 = v;
          var G__16270_16290 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16269_16289, G__16270_16290) : f.call(null, G__16269_16289, G__16270_16290);
          var G__16291 = cljs.core.next(seq__16261__$1);
          var G__16292 = null;
          var G__16293 = 0;
          var G__16294 = 0;
          seq__16261 = G__16291;
          chunk__16262 = G__16292;
          count__16263 = G__16293;
          i__16264 = G__16294;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__16271 = init__$1;
        var G__16272 = self__.arr[i];
        var G__16273 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16271, G__16272, G__16273) : f.call(null, G__16271, G__16272, G__16273);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__16274 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16274) : cljs.core.deref.call(null, G__16274);
      } else {
        var G__16295 = i + 2;
        var G__16296 = init__$2;
        i = G__16295;
        init__$1 = G__16296;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4538__auto__ = self__.__hash;
  if (!(h__4538__auto__ == null)) {
    return h__4538__auto__;
  } else {
    var h__4538__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4538__auto____$1;
    return h__4538__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (function() {
    var G__16275 = other;
    if (G__16275) {
      var bit__4789__auto__ = G__16275.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4789__auto__ || G__16275.cljs$core$IMap$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__16297 = i + 2;
              i = G__16297;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj16277 = {};
    return obj16277;
  }(), self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__16298 = s + 2;
            var G__16299 = d;
            s = G__16298;
            d = G__16299;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__16300 = s + 2;
            var G__16301 = d + 2;
            s = G__16300;
            d = G__16301;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__16278 = cljs.core.aclone(self__.arr);
        G__16278[idx + 1] = v;
        return G__16278;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__16302 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__16303 = cljs.core.next(es);
          ret = G__16302;
          es = G__16303;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__16304 = null;
  var G__16304__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__16304__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__16304 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16304__2.call(this, self__, k);
      case 3:
        return G__16304__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16304.cljs$core$IFn$_invoke$arity$2 = G__16304__2;
  G__16304.cljs$core$IFn$_invoke$arity$3 = G__16304__3;
  return G__16304;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args16258) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16258)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function cljs$core$__GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__16305 = i + 2;
        var G__16306 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
        i = G__16305;
        ret = G__16306;
        continue;
      } else {
        return cljs.core._persistent_BANG_(ret);
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5098__auto__ = this;
  return cljs.core.es6_iterator(this__5098__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__16307_16315 = self__.arr;
      G__16307_16315.pop();
      G__16307_16315.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(function() {
          var G__16308 = self__.len;
          var G__16309 = self__.arr;
          return cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__16308, G__16309) : cljs.core.array__GT_transient_hash_map.call(null, G__16308, G__16309);
        }(), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__16310 = o;
      if (G__16310) {
        var bit__4796__auto__ = G__16310.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4796__auto__ || G__16310.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__16310.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__16310);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__16310);
      }
    }()) {
      return cljs.core._assoc_BANG_(tcoll__$1, function() {
        var G__16311 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__16311) : cljs.core.key.call(null, G__16311);
      }(), function() {
        var G__16312 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__16312) : cljs.core.val.call(null, G__16312);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4124__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__16316 = cljs.core.next(es);
          var G__16317 = cljs.core._assoc_BANG_(tcoll__$2, function() {
            var G__16313 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__16313) : cljs.core.key.call(null, G__16313);
          }(), function() {
            var G__16314 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__16314) : cljs.core.val.call(null, G__16314);
          }());
          es = G__16316;
          tcoll__$2 = G__16317;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function cljs$core$__GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function cljs$core$array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__16318 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__16319 = i + 2;
      out = G__16318;
      i = G__16319;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function cljs$core$__GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function cljs$core$key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function cljs$core$mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var cljs$core$clone_and_set = null;
  var cljs$core$clone_and_set__3 = function(arr, i, a) {
    var G__16322 = cljs.core.aclone(arr);
    G__16322[i] = a;
    return G__16322;
  };
  var cljs$core$clone_and_set__5 = function(arr, i, a, j, b) {
    var G__16323 = cljs.core.aclone(arr);
    G__16323[i] = a;
    G__16323[j] = b;
    return G__16323;
  };
  cljs$core$clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return cljs$core$clone_and_set__3.call(this, arr, i, a);
      case 5:
        return cljs$core$clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$clone_and_set.cljs$core$IFn$_invoke$arity$3 = cljs$core$clone_and_set__3;
  cljs$core$clone_and_set.cljs$core$IFn$_invoke$arity$5 = cljs$core$clone_and_set__5;
  return cljs$core$clone_and_set;
}();
cljs.core.remove_pair = function cljs$core$remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function cljs$core$bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function cljs$core$bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var cljs$core$edit_and_set = null;
  var cljs$core$edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var cljs$core$edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  cljs$core$edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return cljs$core$edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return cljs$core$edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$edit_and_set.cljs$core$IFn$_invoke$arity$4 = cljs$core$edit_and_set__4;
  cljs$core$edit_and_set.cljs$core$IFn$_invoke$arity$6 = cljs$core$edit_and_set__6;
  return cljs$core$edit_and_set;
}();
cljs.core.inode_kv_reduce = function cljs$core$inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__16328 = init__$1;
          var G__16329 = k;
          var G__16330 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16328, G__16329, G__16330) : f.call(null, G__16328, G__16329, G__16330);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__16331 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16331) : cljs.core.deref.call(null, G__16331);
      } else {
        var G__16332 = i + 2;
        var G__16333 = init__$2;
        i = G__16332;
        init__$1 = G__16333;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__16334 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__16334) : cljs.core.create_inode_seq.call(null, G__16334);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_16348 = 0;
        var j_16349 = 0;
        while (true) {
          if (i_16348 < 32) {
            if ((self__.bitmap >>> i_16348 & 1) === 0) {
              var G__16350 = i_16348 + 1;
              var G__16351 = j_16349;
              i_16348 = G__16350;
              j_16349 = G__16351;
              continue;
            } else {
              nodes[i_16348] = !(self__.arr[j_16349] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_16349]), self__.arr[j_16349], self__.arr[j_16349 + 1], added_leaf_QMARK_) : self__.arr[j_16349 + 1];
              var G__16352 = i_16348 + 1;
              var G__16353 = j_16349 + 2;
              i_16348 = G__16352;
              j_16349 = G__16353;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__16335 = edit__$1;
          var G__16336 = shift + 5;
          var G__16337 = key_or_nil;
          var G__16338 = val_or_node;
          var G__16339 = hash;
          var G__16340 = key;
          var G__16341 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__16335, G__16336, G__16337, G__16338, G__16339, G__16340, G__16341) : cljs.core.create_node.call(null, G__16335, G__16336, G__16337, G__16338, G__16339, G__16340, G__16341);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_16354 = 0;
      var j_16355 = 0;
      while (true) {
        if (i_16354 < 32) {
          if ((self__.bitmap >>> i_16354 & 1) === 0) {
            var G__16356 = i_16354 + 1;
            var G__16357 = j_16355;
            i_16354 = G__16356;
            j_16355 = G__16357;
            continue;
          } else {
            nodes[i_16354] = !(self__.arr[j_16355] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_16355]), self__.arr[j_16355], self__.arr[j_16355 + 1], added_leaf_QMARK_) : self__.arr[j_16355 + 1];
            var G__16358 = i_16354 + 1;
            var G__16359 = j_16355 + 2;
            i_16354 = G__16358;
            j_16355 = G__16359;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__16342 = shift + 5;
          var G__16343 = key_or_nil;
          var G__16344 = val_or_node;
          var G__16345 = hash;
          var G__16346 = key;
          var G__16347 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__16342, G__16343, G__16344, G__16345, G__16346, G__16347) : cljs.core.create_node.call(null, G__16342, G__16343, G__16344, G__16345, G__16346, G__16347);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function cljs$core$__GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function cljs$core$pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__16360 = i + 1;
        var G__16361 = j + 2;
        var G__16362 = bitmap | 1 << i;
        i = G__16360;
        j = G__16361;
        bitmap = G__16362;
        continue;
      } else {
        var G__16363 = i + 1;
        var G__16364 = j;
        var G__16365 = bitmap;
        i = G__16363;
        j = G__16364;
        bitmap = G__16365;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__16366 = self__.arr;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__16366) : cljs.core.create_array_node_seq.call(null, G__16366);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          var G__16367 = init__$2;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16367) : cljs.core.deref.call(null, G__16367);
        } else {
          var G__16368 = i + 1;
          var G__16369 = init__$2;
          i = G__16368;
          init__$1 = G__16369;
          continue;
        }
      } else {
        var G__16370 = i + 1;
        var G__16371 = init__$1;
        i = G__16370;
        init__$1 = G__16371;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function cljs$core$__GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function cljs$core$hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__16372 = i + 2;
        i = G__16372;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__16373 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__16373) : cljs.core.create_inode_seq.call(null, G__16373);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function cljs$core$__GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var cljs$core$create_node = null;
  var cljs$core$create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash(key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var cljs$core$create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash(key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  cljs$core$create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return cljs$core$create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return cljs$core$create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$create_node.cljs$core$IFn$_invoke$arity$6 = cljs$core$create_node__6;
  cljs$core$create_node.cljs$core$IFn$_invoke$arity$7 = cljs$core$create_node__7;
  return cljs$core$create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4538__auto__ = self__.__hash;
  if (!(h__4538__auto__ == null)) {
    return h__4538__auto__;
  } else {
    var h__4538__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4538__auto____$1;
    return h__4538__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    var G__16374 = self__.nodes;
    var G__16375 = self__.i + 2;
    var G__16376 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__16374, G__16375, G__16376) : cljs.core.create_inode_seq.call(null, G__16374, G__16375, G__16376);
  } else {
    var G__16377 = self__.nodes;
    var G__16378 = self__.i;
    var G__16379 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__16377, G__16378, G__16379) : cljs.core.create_inode_seq.call(null, G__16377, G__16378, G__16379);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function cljs$core$__GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5098__auto__ = this;
  return cljs.core.es6_iterator(this__5098__auto__);
};
cljs.core.create_inode_seq = function() {
  var cljs$core$create_inode_seq = null;
  var cljs$core$create_inode_seq__1 = function(nodes) {
    return cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
  };
  var cljs$core$create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4124__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var node = temp__4124__auto__;
              var temp__4124__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4124__auto____$1)) {
                var node_seq = temp__4124__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__16383 = j + 2;
                j = G__16383;
                continue;
              }
            } else {
              var G__16384 = j + 2;
              j = G__16384;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  cljs$core$create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return cljs$core$create_inode_seq__1.call(this, nodes);
      case 3:
        return cljs$core$create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$create_inode_seq__1;
  cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$3 = cljs$core$create_inode_seq__3;
  return cljs$core$create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4538__auto__ = self__.__hash;
  if (!(h__4538__auto__ == null)) {
    return h__4538__auto__;
  } else {
    var h__4538__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4538__auto____$1;
    return h__4538__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__16385 = null;
  var G__16386 = self__.nodes;
  var G__16387 = self__.i;
  var G__16388 = cljs.core.next(self__.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__16385, G__16386, G__16387, G__16388) : cljs.core.create_array_node_seq.call(null, G__16385, G__16386, G__16387, G__16388);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function cljs$core$__GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5098__auto__ = this;
  return cljs.core.es6_iterator(this__5098__auto__);
};
cljs.core.create_array_node_seq = function() {
  var cljs$core$create_array_node_seq = null;
  var cljs$core$create_array_node_seq__1 = function(nodes) {
    return cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
  };
  var cljs$core$create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4124__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var nj = temp__4124__auto__;
            var temp__4124__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4124__auto____$1)) {
              var ns = temp__4124__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__16393 = j + 1;
              j = G__16393;
              continue;
            }
          } else {
            var G__16394 = j + 1;
            j = G__16394;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  cljs$core$create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return cljs$core$create_array_node_seq__1.call(this, meta);
      case 4:
        return cljs$core$create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$create_array_node_seq__1;
  cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = cljs$core$create_array_node_seq__4;
  return cljs$core$create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__16396 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__16396) : cljs.core.keys.call(null, G__16396);
  }());
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__16397 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__16397) : cljs.core.vals.call(null, G__16397);
  }());
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__16398 = cljs.core.seq(coll);
  var chunk__16399 = null;
  var count__16400 = 0;
  var i__16401 = 0;
  while (true) {
    if (i__16401 < count__16400) {
      var vec__16402 = chunk__16399.cljs$core$IIndexed$_nth$arity$2(null, i__16401);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16402, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16402, 1, null);
      var G__16403_16414 = v;
      var G__16404_16415 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16403_16414, G__16404_16415) : f.call(null, G__16403_16414, G__16404_16415);
      var G__16416 = seq__16398;
      var G__16417 = chunk__16399;
      var G__16418 = count__16400;
      var G__16419 = i__16401 + 1;
      seq__16398 = G__16416;
      chunk__16399 = G__16417;
      count__16400 = G__16418;
      i__16401 = G__16419;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__16398);
      if (temp__4126__auto__) {
        var seq__16398__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__16398__$1)) {
          var c__4907__auto__ = cljs.core.chunk_first(seq__16398__$1);
          var G__16420 = cljs.core.chunk_rest(seq__16398__$1);
          var G__16421 = c__4907__auto__;
          var G__16422 = cljs.core.count(c__4907__auto__);
          var G__16423 = 0;
          seq__16398 = G__16420;
          chunk__16399 = G__16421;
          count__16400 = G__16422;
          i__16401 = G__16423;
          continue;
        } else {
          var vec__16405 = cljs.core.first(seq__16398__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16405, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16405, 1, null);
          var G__16406_16424 = v;
          var G__16407_16425 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16406_16424, G__16407_16425) : f.call(null, G__16406_16424, G__16407_16425);
          var G__16426 = cljs.core.next(seq__16398__$1);
          var G__16427 = null;
          var G__16428 = 0;
          var G__16429 = 0;
          seq__16398 = G__16426;
          chunk__16399 = G__16427;
          count__16400 = G__16428;
          i__16401 = G__16429;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? function() {
    var G__16408 = init;
    var G__16409 = null;
    var G__16410 = self__.nil_val;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16408, G__16409, G__16410) : f.call(null, G__16408, G__16409, G__16410);
  }() : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__16411 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16411) : cljs.core.deref.call(null, G__16411);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4538__auto__ = self__.__hash;
  if (!(h__4538__auto__ == null)) {
    return h__4538__auto__;
  } else {
    var h__4538__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4538__auto____$1;
    return h__4538__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj16413 = {};
    return obj16413;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return!(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__16430 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__16431 = cljs.core.next(es);
          ret = G__16430;
          es = G__16431;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__16432 = null;
  var G__16432__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__16432__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__16432 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16432__2.call(this, self__, k);
      case 3:
        return G__16432__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16432.cljs$core$IFn$_invoke$arity$2 = G__16432__2;
  G__16432.cljs$core$IFn$_invoke$arity$3 = G__16432__3;
  return G__16432;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args16395) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16395)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function cljs$core$__GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__16433 = i + 2;
      var G__16434 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__16433;
      ret = G__16434;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__16435 = i + 1;
      var G__16436 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__16435;
      out = G__16436;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5098__auto__ = this;
  return cljs.core.es6_iterator(this__5098__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__16437 = o;
      if (G__16437) {
        var bit__4796__auto__ = G__16437.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4796__auto__ || G__16437.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__16437.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__16437);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__16437);
      }
    }()) {
      return tcoll.assoc_BANG_(function() {
        var G__16438 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__16438) : cljs.core.key.call(null, G__16438);
      }(), function() {
        var G__16439 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__16439) : cljs.core.val.call(null, G__16439);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4124__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__16442 = cljs.core.next(es);
          var G__16443 = tcoll__$1.assoc_BANG_(function() {
            var G__16440 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__16440) : cljs.core.key.call(null, G__16440);
          }(), function() {
            var G__16441 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__16441) : cljs.core.val.call(null, G__16441);
          }());
          es = G__16442;
          tcoll__$1 = G__16443;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function cljs$core$__GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function cljs$core$tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__16444 = ascending_QMARK_ ? t.left : t.right;
      var G__16445 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__16444;
      stack__$1 = G__16445;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4538__auto__ = self__.__hash;
  if (!(h__4538__auto__ == null)) {
    return h__4538__auto__;
  } else {
    var h__4538__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4538__auto____$1;
    return h__4538__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function cljs$core$__GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5098__auto__ = this;
  return cljs.core.es6_iterator(this__5098__auto__);
};
cljs.core.create_tree_map_seq = function cljs$core$create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function cljs$core$balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function cljs$core$balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function cljs$core$balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function cljs$core$balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function cljs$core$tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? cljs$core$tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__16458 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16458) : cljs.core.deref.call(null, G__16458);
  } else {
    var init__$2 = function() {
      var G__16459 = init__$1;
      var G__16460 = node.key;
      var G__16461 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16459, G__16460, G__16461) : f.call(null, G__16459, G__16460, G__16461);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      var G__16462 = init__$2;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16462) : cljs.core.deref.call(null, G__16462);
    } else {
      var init__$3 = !(node.right == null) ? cljs$core$tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        var G__16463 = init__$3;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16463) : cljs.core.deref.call(null, G__16463);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4538__auto__ = self__.__hash;
  if (!(h__4538__auto__ == null)) {
    return h__4538__auto__;
  } else {
    var h__4538__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4538__auto____$1;
    return h__4538__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__16465 = null;
  var G__16465__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__16465__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__16465 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16465__2.call(this, self__, k);
      case 3:
        return G__16465__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16465.cljs$core$IFn$_invoke$arity$2 = G__16465__2;
  G__16465.cljs$core$IFn$_invoke$arity$3 = G__16465__3;
  return G__16465;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args16464) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16464)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function cljs$core$__GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5098__auto__ = this;
  return cljs.core.es6_iterator(this__5098__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4538__auto__ = self__.__hash;
  if (!(h__4538__auto__ == null)) {
    return h__4538__auto__;
  } else {
    var h__4538__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4538__auto____$1;
    return h__4538__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__16467 = null;
  var G__16467__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__16467__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__16467 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16467__2.call(this, self__, k);
      case 3:
        return G__16467__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16467.cljs$core$IFn$_invoke$arity$2 = G__16467__2;
  G__16467.cljs$core$IFn$_invoke$arity$3 = G__16467__3;
  return G__16467;
}();
cljs.core.RedNode.prototype.apply = function(self__, args16466) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16466)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function cljs$core$__GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5098__auto__ = this;
  return cljs.core.es6_iterator(this__5098__auto__);
};
cljs.core.tree_map_add = function cljs$core$tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__16480 = k;
      var G__16481 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__16480, G__16481) : comp.call(null, G__16480, G__16481);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = cljs$core$tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = cljs$core$tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function cljs$core$tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, cljs$core$tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, cljs$core$tree_map_append(left, right.left), right.right, null);
        } else {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function cljs$core$tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__16500 = k;
      var G__16501 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__16500, G__16501) : comp.call(null, G__16500, G__16501);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = cljs$core$tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = cljs$core$tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function cljs$core$tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = function() {
    var G__16512 = k;
    var G__16513 = tk;
    return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__16512, G__16513) : comp.call(null, G__16512, G__16513);
  }();
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, cljs$core$tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, cljs$core$tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__16515 = cljs.core.seq(coll);
  var chunk__16516 = null;
  var count__16517 = 0;
  var i__16518 = 0;
  while (true) {
    if (i__16518 < count__16517) {
      var vec__16519 = chunk__16516.cljs$core$IIndexed$_nth$arity$2(null, i__16518);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16519, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16519, 1, null);
      var G__16520_16532 = v;
      var G__16521_16533 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16520_16532, G__16521_16533) : f.call(null, G__16520_16532, G__16521_16533);
      var G__16534 = seq__16515;
      var G__16535 = chunk__16516;
      var G__16536 = count__16517;
      var G__16537 = i__16518 + 1;
      seq__16515 = G__16534;
      chunk__16516 = G__16535;
      count__16517 = G__16536;
      i__16518 = G__16537;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__16515);
      if (temp__4126__auto__) {
        var seq__16515__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__16515__$1)) {
          var c__4907__auto__ = cljs.core.chunk_first(seq__16515__$1);
          var G__16538 = cljs.core.chunk_rest(seq__16515__$1);
          var G__16539 = c__4907__auto__;
          var G__16540 = cljs.core.count(c__4907__auto__);
          var G__16541 = 0;
          seq__16515 = G__16538;
          chunk__16516 = G__16539;
          count__16517 = G__16540;
          i__16518 = G__16541;
          continue;
        } else {
          var vec__16522 = cljs.core.first(seq__16515__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16522, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16522, 1, null);
          var G__16523_16542 = v;
          var G__16524_16543 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16523_16542, G__16524_16543) : f.call(null, G__16523_16542, G__16524_16543);
          var G__16544 = cljs.core.next(seq__16515__$1);
          var G__16545 = null;
          var G__16546 = 0;
          var G__16547 = 0;
          seq__16515 = G__16544;
          chunk__16516 = G__16545;
          count__16517 = G__16546;
          i__16518 = G__16547;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__16525 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__16525) : cljs.core.keys.call(null, G__16525);
  }());
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__16526 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__16526) : cljs.core.vals.call(null, G__16526);
  }());
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__16527 = k;
        var G__16528 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__16527, G__16528) : self__.comp.call(null, G__16527, G__16528);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__16548 = t.left;
          t = G__16548;
          continue;
        } else {
          var G__16549 = t.right;
          t = G__16549;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4538__auto__ = self__.__hash;
  if (!(h__4538__auto__ == null)) {
    return h__4538__auto__;
  } else {
    var h__4538__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4538__auto____$1;
    return h__4538__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__16550 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__16551 = cljs.core.next(es);
          ret = G__16550;
          es = G__16551;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__16552 = null;
  var G__16552__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__16552__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__16552 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16552__2.call(this, self__, k);
      case 3:
        return G__16552__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16552.cljs$core$IFn$_invoke$arity$2 = G__16552__2;
  G__16552.cljs$core$IFn$_invoke$arity$3 = G__16552__3;
  return G__16552;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args16514) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16514)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__16529 = k;
          var G__16530 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__16529, G__16530) : self__.comp.call(null, G__16529, G__16530);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__16553 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__16554 = t.left;
              stack = G__16553;
              t = G__16554;
              continue;
            } else {
              var G__16555 = stack;
              var G__16556 = t.right;
              stack = G__16555;
              t = G__16556;
              continue;
            }
          } else {
            if (c > 0) {
              var G__16557 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__16558 = t.right;
              stack = G__16557;
              t = G__16558;
              continue;
            } else {
              var G__16559 = stack;
              var G__16560 = t.left;
              stack = G__16559;
              t = G__16560;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  var G__16531 = entry;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__16531) : cljs.core.key.call(null, G__16531);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function cljs$core$__GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5098__auto__ = this;
  return cljs.core.es6_iterator(this__5098__auto__);
};
cljs.core.hash_map = function() {
  var cljs$core$hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__16561 = cljs.core.nnext(in$);
        var G__16562 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__16561;
        out = G__16562;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  };
  var cljs$core$hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__16563__i = 0, G__16563__a = new Array(arguments.length - 0);
      while (G__16563__i < G__16563__a.length) {
        G__16563__a[G__16563__i] = arguments[G__16563__i + 0];
        ++G__16563__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__16563__a, 0);
    }
    return cljs$core$hash_map__delegate.call(this, keyvals);
  };
  cljs$core$hash_map.cljs$lang$maxFixedArity = 0;
  cljs$core$hash_map.cljs$lang$applyTo = function(arglist__16564) {
    var keyvals = cljs.core.seq(arglist__16564);
    return cljs$core$hash_map__delegate(keyvals);
  };
  cljs$core$hash_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$hash_map__delegate;
  return cljs$core$hash_map;
}();
cljs.core.array_map = function() {
  var cljs$core$array_map__delegate = function(keyvals) {
    return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array, keyvals), true, false);
  };
  var cljs$core$array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__16565__i = 0, G__16565__a = new Array(arguments.length - 0);
      while (G__16565__i < G__16565__a.length) {
        G__16565__a[G__16565__i] = arguments[G__16565__i + 0];
        ++G__16565__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__16565__a, 0);
    }
    return cljs$core$array_map__delegate.call(this, keyvals);
  };
  cljs$core$array_map.cljs$lang$maxFixedArity = 0;
  cljs$core$array_map.cljs$lang$applyTo = function(arglist__16566) {
    var keyvals = cljs.core.seq(arglist__16566);
    return cljs$core$array_map__delegate(keyvals);
  };
  cljs$core$array_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$array_map__delegate;
  return cljs$core$array_map;
}();
cljs.core.obj_map = function() {
  var cljs$core$obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj16570 = {};
      return obj16570;
    }();
    var kvs = cljs.core.seq(keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first(kvs));
        obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
        var G__16571 = cljs.core.nnext(kvs);
        kvs = G__16571;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject(ks, obj);
      }
      break;
    }
  };
  var cljs$core$obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__16572__i = 0, G__16572__a = new Array(arguments.length - 0);
      while (G__16572__i < G__16572__a.length) {
        G__16572__a[G__16572__i] = arguments[G__16572__i + 0];
        ++G__16572__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__16572__a, 0);
    }
    return cljs$core$obj_map__delegate.call(this, keyvals);
  };
  cljs$core$obj_map.cljs$lang$maxFixedArity = 0;
  cljs$core$obj_map.cljs$lang$applyTo = function(arglist__16573) {
    var keyvals = cljs.core.seq(arglist__16573);
    return cljs$core$obj_map__delegate(keyvals);
  };
  cljs$core$obj_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$obj_map__delegate;
  return cljs$core$obj_map;
}();
cljs.core.sorted_map = function() {
  var cljs$core$sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__16574 = cljs.core.nnext(in$);
        var G__16575 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__16574;
        out = G__16575;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var cljs$core$sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__16576__i = 0, G__16576__a = new Array(arguments.length - 0);
      while (G__16576__i < G__16576__a.length) {
        G__16576__a[G__16576__i] = arguments[G__16576__i + 0];
        ++G__16576__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__16576__a, 0);
    }
    return cljs$core$sorted_map__delegate.call(this, keyvals);
  };
  cljs$core$sorted_map.cljs$lang$maxFixedArity = 0;
  cljs$core$sorted_map.cljs$lang$applyTo = function(arglist__16577) {
    var keyvals = cljs.core.seq(arglist__16577);
    return cljs$core$sorted_map__delegate(keyvals);
  };
  cljs$core$sorted_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_map__delegate;
  return cljs$core$sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var cljs$core$sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__16578 = cljs.core.nnext(in$);
        var G__16579 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__16578;
        out = G__16579;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var cljs$core$sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      var G__16580__i = 0, G__16580__a = new Array(arguments.length - 1);
      while (G__16580__i < G__16580__a.length) {
        G__16580__a[G__16580__i] = arguments[G__16580__i + 1];
        ++G__16580__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__16580__a, 0);
    }
    return cljs$core$sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  cljs$core$sorted_map_by.cljs$lang$maxFixedArity = 1;
  cljs$core$sorted_map_by.cljs$lang$applyTo = function(arglist__16581) {
    var comparator = cljs.core.first(arglist__16581);
    var keyvals = cljs.core.rest(arglist__16581);
    return cljs$core$sorted_map_by__delegate(comparator, keyvals);
  };
  cljs$core$sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_map_by__delegate;
  return cljs$core$sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__16582 = self__.mseq;
    if (G__16582) {
      var bit__4796__auto__ = G__16582.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4796__auto__ || G__16582.cljs$core$INext$) {
        return true;
      } else {
        if (!G__16582.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__16582);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__16582);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__16583 = self__.mseq;
    if (G__16583) {
      var bit__4796__auto__ = G__16583.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4796__auto__ || G__16583.cljs$core$INext$) {
        return true;
      } else {
        if (!G__16583.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__16583);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__16583);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function cljs$core$__GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5098__auto__ = this;
  return cljs.core.es6_iterator(this__5098__auto__);
};
cljs.core.keys = function cljs$core$keys(hash_map) {
  var temp__4126__auto__ = cljs.core.seq(hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function cljs$core$key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__16584 = self__.mseq;
    if (G__16584) {
      var bit__4796__auto__ = G__16584.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4796__auto__ || G__16584.cljs$core$INext$) {
        return true;
      } else {
        if (!G__16584.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__16584);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__16584);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__16585 = self__.mseq;
    if (G__16585) {
      var bit__4796__auto__ = G__16585.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4796__auto__ || G__16585.cljs$core$INext$) {
        return true;
      } else {
        if (!G__16585.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__16585);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__16585);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function cljs$core$__GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5098__auto__ = this;
  return cljs.core.es6_iterator(this__5098__auto__);
};
cljs.core.vals = function cljs$core$vals(hash_map) {
  var temp__4126__auto__ = cljs.core.seq(hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function cljs$core$val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function() {
  var cljs$core$merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__16586_SHARP_, p2__16587_SHARP_) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
          var or__4122__auto__ = p1__16586_SHARP_;
          if (cljs.core.truth_(or__4122__auto__)) {
            return or__4122__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__16587_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var cljs$core$merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      var G__16588__i = 0, G__16588__a = new Array(arguments.length - 0);
      while (G__16588__i < G__16588__a.length) {
        G__16588__a[G__16588__i] = arguments[G__16588__i + 0];
        ++G__16588__i;
      }
      maps = new cljs.core.IndexedSeq(G__16588__a, 0);
    }
    return cljs$core$merge__delegate.call(this, maps);
  };
  cljs$core$merge.cljs$lang$maxFixedArity = 0;
  cljs$core$merge.cljs$lang$applyTo = function(arglist__16589) {
    var maps = cljs.core.seq(arglist__16589);
    return cljs$core$merge__delegate(maps);
  };
  cljs$core$merge.cljs$core$IFn$_invoke$arity$variadic = cljs$core$merge__delegate;
  return cljs$core$merge;
}();
cljs.core.merge_with = function() {
  var cljs$core$merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first(e);
        var v = cljs.core.second(e);
        if (cljs.core.contains_QMARK_(m, k)) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
            var G__16592 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
            var G__16593 = v;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16592, G__16593) : f.call(null, G__16592, G__16593);
          }());
        } else {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
            var or__4122__auto__ = m1;
            if (cljs.core.truth_(or__4122__auto__)) {
              return or__4122__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq(m2));
        };
      }(merge_entry);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
    } else {
      return null;
    }
  };
  var cljs$core$merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      var G__16594__i = 0, G__16594__a = new Array(arguments.length - 1);
      while (G__16594__i < G__16594__a.length) {
        G__16594__a[G__16594__i] = arguments[G__16594__i + 1];
        ++G__16594__i;
      }
      maps = new cljs.core.IndexedSeq(G__16594__a, 0);
    }
    return cljs$core$merge_with__delegate.call(this, f, maps);
  };
  cljs$core$merge_with.cljs$lang$maxFixedArity = 1;
  cljs$core$merge_with.cljs$lang$applyTo = function(arglist__16595) {
    var f = cljs.core.first(arglist__16595);
    var maps = cljs.core.rest(arglist__16595);
    return cljs$core$merge_with__delegate(f, maps);
  };
  cljs$core$merge_with.cljs$core$IFn$_invoke$arity$variadic = cljs$core$merge_with__delegate;
  return cljs$core$merge_with;
}();
cljs.core.select_keys = function cljs$core$select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__16596 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__16597 = cljs.core.next(keys);
      ret = G__16596;
      keys = G__16597;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__16600 = cljs.core.seq(coll);
  var chunk__16601 = null;
  var count__16602 = 0;
  var i__16603 = 0;
  while (true) {
    if (i__16603 < count__16602) {
      var vec__16604 = chunk__16601.cljs$core$IIndexed$_nth$arity$2(null, i__16603);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16604, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16604, 1, null);
      var G__16605_16610 = v;
      var G__16606_16611 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16605_16610, G__16606_16611) : f.call(null, G__16605_16610, G__16606_16611);
      var G__16612 = seq__16600;
      var G__16613 = chunk__16601;
      var G__16614 = count__16602;
      var G__16615 = i__16603 + 1;
      seq__16600 = G__16612;
      chunk__16601 = G__16613;
      count__16602 = G__16614;
      i__16603 = G__16615;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__16600);
      if (temp__4126__auto__) {
        var seq__16600__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__16600__$1)) {
          var c__4907__auto__ = cljs.core.chunk_first(seq__16600__$1);
          var G__16616 = cljs.core.chunk_rest(seq__16600__$1);
          var G__16617 = c__4907__auto__;
          var G__16618 = cljs.core.count(c__4907__auto__);
          var G__16619 = 0;
          seq__16600 = G__16616;
          chunk__16601 = G__16617;
          count__16602 = G__16618;
          i__16603 = G__16619;
          continue;
        } else {
          var vec__16607 = cljs.core.first(seq__16600__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16607, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16607, 1, null);
          var G__16608_16620 = v;
          var G__16609_16621 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16608_16620, G__16609_16621) : f.call(null, G__16608_16620, G__16609_16621);
          var G__16622 = cljs.core.next(seq__16600__$1);
          var G__16623 = null;
          var G__16624 = 0;
          var G__16625 = 0;
          seq__16600 = G__16622;
          chunk__16601 = G__16623;
          count__16602 = G__16624;
          i__16603 = G__16625;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4538__auto__ = self__.__hash;
  if (!(h__4538__auto__ == null)) {
    return h__4538__auto__;
  } else {
    var h__4538__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4538__auto____$1;
    return h__4538__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__16598_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__16598_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__16626 = null;
  var G__16626__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__16626__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__16626 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16626__2.call(this, self__, k);
      case 3:
        return G__16626__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16626.cljs$core$IFn$_invoke$arity$2 = G__16626__2;
  G__16626.cljs$core$IFn$_invoke$arity$3 = G__16626__3;
  return G__16626;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args16599) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16599)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function cljs$core$__GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__16627 = i + 1;
        var G__16628 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__16627;
        out = G__16628;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__16629 = i + 1;
        var G__16630 = cljs.core._conj_BANG_(out, items[i]);
        i = G__16629;
        out = G__16630;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5098__auto__ = this;
  return cljs.core.es6_iterator(this__5098__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__16632 = null;
  var G__16632__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__16632__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__16632 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16632__2.call(this, self__, k);
      case 3:
        return G__16632__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16632.cljs$core$IFn$_invoke$arity$2 = G__16632__2;
  G__16632.cljs$core$IFn$_invoke$arity$3 = G__16632__3;
  return G__16632;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args16631) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16631)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function cljs$core$__GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__16635 = cljs.core.seq(coll);
  var chunk__16636 = null;
  var count__16637 = 0;
  var i__16638 = 0;
  while (true) {
    if (i__16638 < count__16637) {
      var vec__16639 = chunk__16636.cljs$core$IIndexed$_nth$arity$2(null, i__16638);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16639, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16639, 1, null);
      var G__16640_16645 = v;
      var G__16641_16646 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16640_16645, G__16641_16646) : f.call(null, G__16640_16645, G__16641_16646);
      var G__16647 = seq__16635;
      var G__16648 = chunk__16636;
      var G__16649 = count__16637;
      var G__16650 = i__16638 + 1;
      seq__16635 = G__16647;
      chunk__16636 = G__16648;
      count__16637 = G__16649;
      i__16638 = G__16650;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__16635);
      if (temp__4126__auto__) {
        var seq__16635__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__16635__$1)) {
          var c__4907__auto__ = cljs.core.chunk_first(seq__16635__$1);
          var G__16651 = cljs.core.chunk_rest(seq__16635__$1);
          var G__16652 = c__4907__auto__;
          var G__16653 = cljs.core.count(c__4907__auto__);
          var G__16654 = 0;
          seq__16635 = G__16651;
          chunk__16636 = G__16652;
          count__16637 = G__16653;
          i__16638 = G__16654;
          continue;
        } else {
          var vec__16642 = cljs.core.first(seq__16635__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16642, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16642, 1, null);
          var G__16643_16655 = v;
          var G__16644_16656 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16643_16655, G__16644_16656) : f.call(null, G__16643_16655, G__16644_16656);
          var G__16657 = cljs.core.next(seq__16635__$1);
          var G__16658 = null;
          var G__16659 = 0;
          var G__16660 = 0;
          seq__16635 = G__16657;
          chunk__16636 = G__16658;
          count__16637 = G__16659;
          i__16638 = G__16660;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4538__auto__ = self__.__hash;
  if (!(h__4538__auto__ == null)) {
    return h__4538__auto__;
  } else {
    var h__4538__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4538__auto____$1;
    return h__4538__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__16633_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__16633_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__16661 = null;
  var G__16661__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__16661__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__16661 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16661__2.call(this, self__, k);
      case 3:
        return G__16661__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16661.cljs$core$IFn$_invoke$arity$2 = G__16661__2;
  G__16661.cljs$core$IFn$_invoke$arity$3 = G__16661__3;
  return G__16661;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args16634) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16634)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function cljs$core$__GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5098__auto__ = this;
  return cljs.core.es6_iterator(this__5098__auto__);
};
cljs.core.set_from_indexed_seq = function cljs$core$set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__5001__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__5001__auto__.length) {
        var G__16662 = i + 1;
        var G__16663 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__16662;
        res = G__16663;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function cljs$core$set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__16664 = in$__$1.cljs$core$INext$_next$arity$1(null);
          var G__16665 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__16664;
          out = G__16665;
          continue;
        } else {
          return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var cljs$core$hash_set = null;
  var cljs$core$hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var cljs$core$hash_set__1 = function() {
    var G__16666__delegate = function(keys) {
      return cljs.core.set(keys);
    };
    var G__16666 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        var G__16667__i = 0, G__16667__a = new Array(arguments.length - 0);
        while (G__16667__i < G__16667__a.length) {
          G__16667__a[G__16667__i] = arguments[G__16667__i + 0];
          ++G__16667__i;
        }
        keys = new cljs.core.IndexedSeq(G__16667__a, 0);
      }
      return G__16666__delegate.call(this, keys);
    };
    G__16666.cljs$lang$maxFixedArity = 0;
    G__16666.cljs$lang$applyTo = function(arglist__16668) {
      var keys = cljs.core.seq(arglist__16668);
      return G__16666__delegate(keys);
    };
    G__16666.cljs$core$IFn$_invoke$arity$variadic = G__16666__delegate;
    return G__16666;
  }();
  cljs$core$hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return cljs$core$hash_set__0.call(this);
      default:
        var G__16669 = null;
        if (arguments.length > 0) {
          var G__16670__i = 0, G__16670__a = new Array(arguments.length - 0);
          while (G__16670__i < G__16670__a.length) {
            G__16670__a[G__16670__i] = arguments[G__16670__i + 0];
            ++G__16670__i;
          }
          G__16669 = new cljs.core.IndexedSeq(G__16670__a, 0);
        }
        return cljs$core$hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__16669);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$hash_set.cljs$lang$maxFixedArity = 0;
  cljs$core$hash_set.cljs$lang$applyTo = cljs$core$hash_set__1.cljs$lang$applyTo;
  cljs$core$hash_set.cljs$core$IFn$_invoke$arity$0 = cljs$core$hash_set__0;
  cljs$core$hash_set.cljs$core$IFn$_invoke$arity$variadic = cljs$core$hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$hash_set;
}();
cljs.core.sorted_set = function() {
  var cljs$core$sorted_set__delegate = function(keys) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var cljs$core$sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      var G__16671__i = 0, G__16671__a = new Array(arguments.length - 0);
      while (G__16671__i < G__16671__a.length) {
        G__16671__a[G__16671__i] = arguments[G__16671__i + 0];
        ++G__16671__i;
      }
      keys = new cljs.core.IndexedSeq(G__16671__a, 0);
    }
    return cljs$core$sorted_set__delegate.call(this, keys);
  };
  cljs$core$sorted_set.cljs$lang$maxFixedArity = 0;
  cljs$core$sorted_set.cljs$lang$applyTo = function(arglist__16672) {
    var keys = cljs.core.seq(arglist__16672);
    return cljs$core$sorted_set__delegate(keys);
  };
  cljs$core$sorted_set.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_set__delegate;
  return cljs$core$sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var cljs$core$sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
  };
  var cljs$core$sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      var G__16673__i = 0, G__16673__a = new Array(arguments.length - 1);
      while (G__16673__i < G__16673__a.length) {
        G__16673__a[G__16673__i] = arguments[G__16673__i + 1];
        ++G__16673__i;
      }
      keys = new cljs.core.IndexedSeq(G__16673__a, 0);
    }
    return cljs$core$sorted_set_by__delegate.call(this, comparator, keys);
  };
  cljs$core$sorted_set_by.cljs$lang$maxFixedArity = 1;
  cljs$core$sorted_set_by.cljs$lang$applyTo = function(arglist__16674) {
    var comparator = cljs.core.first(arglist__16674);
    var keys = cljs.core.rest(arglist__16674);
    return cljs$core$sorted_set_by__delegate(comparator, keys);
  };
  cljs$core$sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_set_by__delegate;
  return cljs$core$sorted_set_by;
}();
cljs.core.replace = function() {
  var cljs$core$replace = null;
  var cljs$core$replace__1 = function(smap) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__16675_SHARP_) {
      var temp__4124__auto__ = cljs.core.find(smap, p1__16675_SHARP_);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var e = temp__4124__auto__;
        return cljs.core.val(e);
      } else {
        return p1__16675_SHARP_;
      }
    });
  };
  var cljs$core$replace__2 = function(smap, coll) {
    if (cljs.core.vector_QMARK_(coll)) {
      var n = cljs.core.count(coll);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
        return function(v, i) {
          var temp__4124__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
          if (cljs.core.truth_(temp__4124__auto__)) {
            var e = temp__4124__auto__;
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
          } else {
            return v;
          }
        };
      }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
    } else {
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__16676_SHARP_) {
        var temp__4124__auto__ = cljs.core.find(smap, p1__16676_SHARP_);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          return cljs.core.second(e);
        } else {
          return p1__16676_SHARP_;
        }
      }, coll);
    }
  };
  cljs$core$replace = function(smap, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$replace__1.call(this, smap);
      case 2:
        return cljs$core$replace__2.call(this, smap, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$replace.cljs$core$IFn$_invoke$arity$1 = cljs$core$replace__1;
  cljs$core$replace.cljs$core$IFn$_invoke$arity$2 = cljs$core$replace__2;
  return cljs$core$replace;
}();
cljs.core.distinct = function() {
  var cljs$core$distinct = null;
  var cljs$core$distinct__0 = function() {
    return function(rf) {
      var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
      return function(seen) {
        return function() {
          var G__16697 = null;
          var G__16697__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__16697__1 = function(result) {
            var G__16687 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16687) : rf.call(null, G__16687);
          };
          var G__16697__2 = function(result, input) {
            if (cljs.core.contains_QMARK_(function() {
              var G__16688 = seen;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16688) : cljs.core.deref.call(null, G__16688);
            }(), input)) {
              return result;
            } else {
              seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null), input));
              var G__16689 = result;
              var G__16690 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16689, G__16690) : rf.call(null, G__16689, G__16690);
            }
          };
          G__16697 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__16697__0.call(this);
              case 1:
                return G__16697__1.call(this, result);
              case 2:
                return G__16697__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__16697.cljs$core$IFn$_invoke$arity$0 = G__16697__0;
          G__16697.cljs$core$IFn$_invoke$arity$1 = G__16697__1;
          G__16697.cljs$core$IFn$_invoke$arity$2 = G__16697__2;
          return G__16697;
        }();
      }(seen);
    };
  };
  var cljs$core$distinct__1 = function(coll) {
    var step = function cljs$core$distinct_$_step(xs, seen) {
      return new cljs.core.LazySeq(null, function() {
        return function(p__16695, seen__$1) {
          while (true) {
            var vec__16696 = p__16695;
            var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16696, 0, null);
            var xs__$1 = vec__16696;
            var temp__4126__auto__ = cljs.core.seq(xs__$1);
            if (temp__4126__auto__) {
              var s = temp__4126__auto__;
              if (cljs.core.contains_QMARK_(seen__$1, f)) {
                var G__16698 = cljs.core.rest(s);
                var G__16699 = seen__$1;
                p__16695 = G__16698;
                seen__$1 = G__16699;
                continue;
              } else {
                return cljs.core.cons(f, cljs$core$distinct_$_step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
              }
            } else {
              return null;
            }
            break;
          }
        }.call(null, xs, seen);
      }, null, null);
    };
    return step(coll, cljs.core.PersistentHashSet.EMPTY);
  };
  cljs$core$distinct = function(coll) {
    switch(arguments.length) {
      case 0:
        return cljs$core$distinct__0.call(this);
      case 1:
        return cljs$core$distinct__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$distinct.cljs$core$IFn$_invoke$arity$0 = cljs$core$distinct__0;
  cljs$core$distinct.cljs$core$IFn$_invoke$arity$1 = cljs$core$distinct__1;
  return cljs$core$distinct;
}();
cljs.core.butlast = function cljs$core$butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__16700 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__16701 = cljs.core.next(s__$1);
      ret = G__16700;
      s__$1 = G__16701;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function cljs$core$name(x) {
  if (function() {
    var G__16703 = x;
    if (G__16703) {
      var bit__4789__auto__ = G__16703.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4789__auto__ || G__16703.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function cljs$core$zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__16704 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__16705 = cljs.core.next(ks);
      var G__16706 = cljs.core.next(vs);
      map = G__16704;
      ks = G__16705;
      vs = G__16706;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var cljs$core$max_key = null;
  var cljs$core$max_key__2 = function(k, x) {
    return x;
  };
  var cljs$core$max_key__3 = function(k, x, y) {
    if (function() {
      var G__16717 = x;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__16717) : k.call(null, G__16717);
    }() > function() {
      var G__16718 = y;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__16718) : k.call(null, G__16718);
    }()) {
      return x;
    } else {
      return y;
    }
  };
  var cljs$core$max_key__4 = function() {
    var G__16719__delegate = function(k, x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__16707_SHARP_, p2__16708_SHARP_) {
        return cljs$core$max_key.cljs$core$IFn$_invoke$arity$3(k, p1__16707_SHARP_, p2__16708_SHARP_);
      }, cljs$core$max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
    };
    var G__16719 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        var G__16720__i = 0, G__16720__a = new Array(arguments.length - 3);
        while (G__16720__i < G__16720__a.length) {
          G__16720__a[G__16720__i] = arguments[G__16720__i + 3];
          ++G__16720__i;
        }
        more = new cljs.core.IndexedSeq(G__16720__a, 0);
      }
      return G__16719__delegate.call(this, k, x, y, more);
    };
    G__16719.cljs$lang$maxFixedArity = 3;
    G__16719.cljs$lang$applyTo = function(arglist__16721) {
      var k = cljs.core.first(arglist__16721);
      arglist__16721 = cljs.core.next(arglist__16721);
      var x = cljs.core.first(arglist__16721);
      arglist__16721 = cljs.core.next(arglist__16721);
      var y = cljs.core.first(arglist__16721);
      var more = cljs.core.rest(arglist__16721);
      return G__16719__delegate(k, x, y, more);
    };
    G__16719.cljs$core$IFn$_invoke$arity$variadic = G__16719__delegate;
    return G__16719;
  }();
  cljs$core$max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$max_key__2.call(this, k, x);
      case 3:
        return cljs$core$max_key__3.call(this, k, x, y);
      default:
        var G__16722 = null;
        if (arguments.length > 3) {
          var G__16723__i = 0, G__16723__a = new Array(arguments.length - 3);
          while (G__16723__i < G__16723__a.length) {
            G__16723__a[G__16723__i] = arguments[G__16723__i + 3];
            ++G__16723__i;
          }
          G__16722 = new cljs.core.IndexedSeq(G__16723__a, 0);
        }
        return cljs$core$max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, G__16722);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$max_key.cljs$lang$maxFixedArity = 3;
  cljs$core$max_key.cljs$lang$applyTo = cljs$core$max_key__4.cljs$lang$applyTo;
  cljs$core$max_key.cljs$core$IFn$_invoke$arity$2 = cljs$core$max_key__2;
  cljs$core$max_key.cljs$core$IFn$_invoke$arity$3 = cljs$core$max_key__3;
  cljs$core$max_key.cljs$core$IFn$_invoke$arity$variadic = cljs$core$max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$max_key;
}();
cljs.core.min_key = function() {
  var cljs$core$min_key = null;
  var cljs$core$min_key__2 = function(k, x) {
    return x;
  };
  var cljs$core$min_key__3 = function(k, x, y) {
    if (function() {
      var G__16734 = x;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__16734) : k.call(null, G__16734);
    }() < function() {
      var G__16735 = y;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__16735) : k.call(null, G__16735);
    }()) {
      return x;
    } else {
      return y;
    }
  };
  var cljs$core$min_key__4 = function() {
    var G__16736__delegate = function(k, x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__16724_SHARP_, p2__16725_SHARP_) {
        return cljs$core$min_key.cljs$core$IFn$_invoke$arity$3(k, p1__16724_SHARP_, p2__16725_SHARP_);
      }, cljs$core$min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
    };
    var G__16736 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        var G__16737__i = 0, G__16737__a = new Array(arguments.length - 3);
        while (G__16737__i < G__16737__a.length) {
          G__16737__a[G__16737__i] = arguments[G__16737__i + 3];
          ++G__16737__i;
        }
        more = new cljs.core.IndexedSeq(G__16737__a, 0);
      }
      return G__16736__delegate.call(this, k, x, y, more);
    };
    G__16736.cljs$lang$maxFixedArity = 3;
    G__16736.cljs$lang$applyTo = function(arglist__16738) {
      var k = cljs.core.first(arglist__16738);
      arglist__16738 = cljs.core.next(arglist__16738);
      var x = cljs.core.first(arglist__16738);
      arglist__16738 = cljs.core.next(arglist__16738);
      var y = cljs.core.first(arglist__16738);
      var more = cljs.core.rest(arglist__16738);
      return G__16736__delegate(k, x, y, more);
    };
    G__16736.cljs$core$IFn$_invoke$arity$variadic = G__16736__delegate;
    return G__16736;
  }();
  cljs$core$min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return cljs$core$min_key__2.call(this, k, x);
      case 3:
        return cljs$core$min_key__3.call(this, k, x, y);
      default:
        var G__16739 = null;
        if (arguments.length > 3) {
          var G__16740__i = 0, G__16740__a = new Array(arguments.length - 3);
          while (G__16740__i < G__16740__a.length) {
            G__16740__a[G__16740__i] = arguments[G__16740__i + 3];
            ++G__16740__i;
          }
          G__16739 = new cljs.core.IndexedSeq(G__16740__a, 0);
        }
        return cljs$core$min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, G__16739);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$min_key.cljs$lang$maxFixedArity = 3;
  cljs$core$min_key.cljs$lang$applyTo = cljs$core$min_key__4.cljs$lang$applyTo;
  cljs$core$min_key.cljs$core$IFn$_invoke$arity$2 = cljs$core$min_key__2;
  cljs$core$min_key.cljs$core$IFn$_invoke$arity$3 = cljs$core$min_key__3;
  cljs$core$min_key.cljs$core$IFn$_invoke$arity$variadic = cljs$core$min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$min_key;
}();
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function cljs$core$__GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function cljs$core$array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function() {
  var cljs$core$partition_all = null;
  var cljs$core$partition_all__1 = function(n) {
    return function(rf) {
      var a = cljs.core.array_list();
      return function(a) {
        return function() {
          var G__16757 = null;
          var G__16757__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__16757__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              return cljs.core.unreduced(function() {
                var G__16752 = result;
                var G__16753 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16752, G__16753) : rf.call(null, G__16752, G__16753);
              }());
            }();
            var G__16754 = result__$1;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16754) : rf.call(null, G__16754);
          };
          var G__16757__2 = function(result, input) {
            a.add(input);
            if (n === a.size()) {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              var G__16755 = result;
              var G__16756 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16755, G__16756) : rf.call(null, G__16755, G__16756);
            } else {
              return result;
            }
          };
          G__16757 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__16757__0.call(this);
              case 1:
                return G__16757__1.call(this, result);
              case 2:
                return G__16757__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__16757.cljs$core$IFn$_invoke$arity$0 = G__16757__0;
          G__16757.cljs$core$IFn$_invoke$arity$1 = G__16757__1;
          G__16757.cljs$core$IFn$_invoke$arity$2 = G__16757__2;
          return G__16757;
        }();
      }(a);
    };
  };
  var cljs$core$partition_all__2 = function(n, coll) {
    return cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
  };
  var cljs$core$partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  cljs$core$partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$partition_all__1.call(this, n);
      case 2:
        return cljs$core$partition_all__2.call(this, n, step);
      case 3:
        return cljs$core$partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$partition_all.cljs$core$IFn$_invoke$arity$1 = cljs$core$partition_all__1;
  cljs$core$partition_all.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition_all__2;
  cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3 = cljs$core$partition_all__3;
  return cljs$core$partition_all;
}();
cljs.core.take_while = function() {
  var cljs$core$take_while = null;
  var cljs$core$take_while__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__16770 = null;
        var G__16770__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__16770__1 = function(result) {
          var G__16765 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16765) : rf.call(null, G__16765);
        };
        var G__16770__2 = function(result, input) {
          if (cljs.core.truth_(function() {
            var G__16766 = input;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16766) : pred.call(null, G__16766);
          }())) {
            var G__16767 = result;
            var G__16768 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16767, G__16768) : rf.call(null, G__16767, G__16768);
          } else {
            return cljs.core.reduced(result);
          }
        };
        G__16770 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__16770__0.call(this);
            case 1:
              return G__16770__1.call(this, result);
            case 2:
              return G__16770__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__16770.cljs$core$IFn$_invoke$arity$0 = G__16770__0;
        G__16770.cljs$core$IFn$_invoke$arity$1 = G__16770__1;
        G__16770.cljs$core$IFn$_invoke$arity$2 = G__16770__2;
        return G__16770;
      }();
    };
  };
  var cljs$core$take_while__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.truth_(function() {
          var G__16769 = cljs.core.first(s);
          return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16769) : pred.call(null, G__16769);
        }())) {
          return cljs.core.cons(cljs.core.first(s), cljs$core$take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  cljs$core$take_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$take_while__1.call(this, pred);
      case 2:
        return cljs$core$take_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$take_while.cljs$core$IFn$_invoke$arity$1 = cljs$core$take_while__1;
  cljs$core$take_while.cljs$core$IFn$_invoke$arity$2 = cljs$core$take_while__2;
  return cljs$core$take_while;
}();
cljs.core.mk_bound_fn = function cljs$core$mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__16775 = function() {
      var G__16777 = cljs.core._entry_key(sc, e);
      var G__16778 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__16777, G__16778) : comp.call(null, G__16777, G__16778);
    }();
    var G__16776 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__16775, G__16776) : test.call(null, G__16775, G__16776);
  };
};
cljs.core.subseq = function() {
  var cljs$core$subseq = null;
  var cljs$core$subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn(sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, key, true);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__16782 = temp__4126__auto__;
        var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16782, 0, null);
        var s = vec__16782;
        if (cljs.core.truth_(function() {
          var G__16783 = e;
          return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__16783) : include.call(null, G__16783);
        }())) {
          return s;
        } else {
          return cljs.core.next(s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
    }
  };
  var cljs$core$subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__16784 = temp__4126__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16784, 0, null);
      var s = vec__16784;
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
    } else {
      return null;
    }
  };
  cljs$core$subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return cljs$core$subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return cljs$core$subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$subseq.cljs$core$IFn$_invoke$arity$3 = cljs$core$subseq__3;
  cljs$core$subseq.cljs$core$IFn$_invoke$arity$5 = cljs$core$subseq__5;
  return cljs$core$subseq;
}();
cljs.core.rsubseq = function() {
  var cljs$core$rsubseq = null;
  var cljs$core$rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn(sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, key, false);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__16788 = temp__4126__auto__;
        var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16788, 0, null);
        var s = vec__16788;
        if (cljs.core.truth_(function() {
          var G__16789 = e;
          return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__16789) : include.call(null, G__16789);
        }())) {
          return s;
        } else {
          return cljs.core.next(s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
    }
  };
  var cljs$core$rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__16790 = temp__4126__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16790, 0, null);
      var s = vec__16790;
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
    } else {
      return null;
    }
  };
  cljs$core$rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return cljs$core$rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return cljs$core$rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$rsubseq.cljs$core$IFn$_invoke$arity$3 = cljs$core$rsubseq__3;
  cljs$core$rsubseq.cljs$core$IFn$_invoke$arity$5 = cljs$core$rsubseq__5;
  return cljs$core$rsubseq;
}();
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function cljs$core$__GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__16791 = (self__.end - self__.start) / self__.step;
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__16791) : Math.ceil.call(null, G__16791);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4538__auto__ = self__.__hash;
  if (!(h__4538__auto__ == null)) {
    return h__4538__auto__;
  } else {
    var h__4538__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__4538__auto____$1;
    return h__4538__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = function() {
        var G__16792 = ret;
        var G__16793 = i;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16792, G__16793) : f.call(null, G__16792, G__16793);
      }();
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        var G__16794 = ret__$1;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16794) : cljs.core.deref.call(null, G__16794);
      } else {
        var G__16795 = i + self__.step;
        var G__16796 = ret__$1;
        i = G__16795;
        ret = G__16796;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function cljs$core$__GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5098__auto__ = this;
  return cljs.core.es6_iterator(this__5098__auto__);
};
cljs.core.range = function() {
  var cljs$core$range = null;
  var cljs$core$range__0 = function() {
    return cljs$core$range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
  };
  var cljs$core$range__1 = function(end) {
    return cljs$core$range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
  };
  var cljs$core$range__2 = function(start, end) {
    return cljs$core$range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
  };
  var cljs$core$range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  cljs$core$range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return cljs$core$range__0.call(this);
      case 1:
        return cljs$core$range__1.call(this, start);
      case 2:
        return cljs$core$range__2.call(this, start, end);
      case 3:
        return cljs$core$range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$range.cljs$core$IFn$_invoke$arity$0 = cljs$core$range__0;
  cljs$core$range.cljs$core$IFn$_invoke$arity$1 = cljs$core$range__1;
  cljs$core$range.cljs$core$IFn$_invoke$arity$2 = cljs$core$range__2;
  cljs$core$range.cljs$core$IFn$_invoke$arity$3 = cljs$core$range__3;
  return cljs$core$range;
}();
cljs.core.take_nth = function() {
  var cljs$core$take_nth = null;
  var cljs$core$take_nth__1 = function(n) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_(-1);
      return function(ia) {
        return function() {
          var G__16814 = null;
          var G__16814__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__16814__1 = function(result) {
            var G__16811 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16811) : rf.call(null, G__16811);
          };
          var G__16814__2 = function(result, input) {
            var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
            if (cljs.core.rem(i, n) === 0) {
              var G__16812 = result;
              var G__16813 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16812, G__16813) : rf.call(null, G__16812, G__16813);
            } else {
              return result;
            }
          };
          G__16814 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__16814__0.call(this);
              case 1:
                return G__16814__1.call(this, result);
              case 2:
                return G__16814__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__16814.cljs$core$IFn$_invoke$arity$0 = G__16814__0;
          G__16814.cljs$core$IFn$_invoke$arity$1 = G__16814__1;
          G__16814.cljs$core$IFn$_invoke$arity$2 = G__16814__2;
          return G__16814;
        }();
      }(ia);
    };
  };
  var cljs$core$take_nth__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons(cljs.core.first(s), cljs$core$take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  cljs$core$take_nth = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$take_nth__1.call(this, n);
      case 2:
        return cljs$core$take_nth__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$take_nth.cljs$core$IFn$_invoke$arity$1 = cljs$core$take_nth__1;
  cljs$core$take_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$take_nth__2;
  return cljs$core$take_nth;
}();
cljs.core.split_with = function cljs$core$split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function() {
  var cljs$core$partition_by = null;
  var cljs$core$partition_by__1 = function(f) {
    return function(rf) {
      var a = cljs.core.array_list();
      var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(a, pa) {
        return function() {
          var G__16836 = null;
          var G__16836__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__16836__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              return cljs.core.unreduced(function() {
                var G__16827 = result;
                var G__16828 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16827, G__16828) : rf.call(null, G__16827, G__16828);
              }());
            }();
            var G__16829 = result__$1;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16829) : rf.call(null, G__16829);
          };
          var G__16836__2 = function(result, input) {
            var pval = function() {
              var G__16830 = pa;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16830) : cljs.core.deref.call(null, G__16830);
            }();
            var val = function() {
              var G__16831 = input;
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16831) : f.call(null, G__16831);
            }();
            cljs.core.vreset_BANG_(pa, val);
            if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
              a.add(input);
              return result;
            } else {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              var ret = function() {
                var G__16832 = result;
                var G__16833 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16832, G__16833) : rf.call(null, G__16832, G__16833);
              }();
              if (cljs.core.reduced_QMARK_(ret)) {
              } else {
                a.add(input);
              }
              return ret;
            }
          };
          G__16836 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__16836__0.call(this);
              case 1:
                return G__16836__1.call(this, result);
              case 2:
                return G__16836__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__16836.cljs$core$IFn$_invoke$arity$0 = G__16836__0;
          G__16836.cljs$core$IFn$_invoke$arity$1 = G__16836__1;
          G__16836.cljs$core$IFn$_invoke$arity$2 = G__16836__2;
          return G__16836;
        }();
      }(a, pa);
    };
  };
  var cljs$core$partition_by__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var fst = cljs.core.first(s);
        var fv = function() {
          var G__16834 = fst;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16834) : f.call(null, G__16834);
        }();
        var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4126__auto__) {
          return function(p1__16815_SHARP_) {
            return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, function() {
              var G__16835 = p1__16815_SHARP_;
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16835) : f.call(null, G__16835);
            }());
          };
        }(fst, fv, s, temp__4126__auto__), cljs.core.next(s)));
        return cljs.core.cons(run, cljs$core$partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
      } else {
        return null;
      }
    }, null, null);
  };
  cljs$core$partition_by = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$partition_by__1.call(this, f);
      case 2:
        return cljs$core$partition_by__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$partition_by.cljs$core$IFn$_invoke$arity$1 = cljs$core$partition_by__1;
  cljs$core$partition_by.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition_by__2;
  return cljs$core$partition_by;
}();
cljs.core.frequencies = function cljs$core$frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var cljs$core$reductions = null;
  var cljs$core$reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq(coll);
      if (temp__4124__auto__) {
        var s = temp__4124__auto__;
        return cljs$core$reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
      } else {
        return cljs.core._conj(cljs.core.List.EMPTY, function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }());
      }
    }, null, null);
  };
  var cljs$core$reductions__3 = function(f, init, coll) {
    return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs$core$reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
          var G__16845 = init;
          var G__16846 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16845, G__16846) : f.call(null, G__16845, G__16846);
        }(), cljs.core.rest(s));
      } else {
        return null;
      }
    }, null, null));
  };
  cljs$core$reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return cljs$core$reductions__2.call(this, f, init);
      case 3:
        return cljs$core$reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$reductions.cljs$core$IFn$_invoke$arity$2 = cljs$core$reductions__2;
  cljs$core$reductions.cljs$core$IFn$_invoke$arity$3 = cljs$core$reductions__3;
  return cljs$core$reductions;
}();
cljs.core.juxt = function() {
  var cljs$core$juxt = null;
  var cljs$core$juxt__1 = function(f) {
    return function() {
      var G__16941 = null;
      var G__16941__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }()], null);
      };
      var G__16941__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__16899 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16899) : f.call(null, G__16899);
        }()], null);
      };
      var G__16941__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__16900 = x;
          var G__16901 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16900, G__16901) : f.call(null, G__16900, G__16901);
        }()], null);
      };
      var G__16941__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__16902 = x;
          var G__16903 = y;
          var G__16904 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16902, G__16903, G__16904) : f.call(null, G__16902, G__16903, G__16904);
        }()], null);
      };
      var G__16941__4 = function() {
        var G__16942__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
        };
        var G__16942 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__16943__i = 0, G__16943__a = new Array(arguments.length - 3);
            while (G__16943__i < G__16943__a.length) {
              G__16943__a[G__16943__i] = arguments[G__16943__i + 3];
              ++G__16943__i;
            }
            args = new cljs.core.IndexedSeq(G__16943__a, 0);
          }
          return G__16942__delegate.call(this, x, y, z, args);
        };
        G__16942.cljs$lang$maxFixedArity = 3;
        G__16942.cljs$lang$applyTo = function(arglist__16944) {
          var x = cljs.core.first(arglist__16944);
          arglist__16944 = cljs.core.next(arglist__16944);
          var y = cljs.core.first(arglist__16944);
          arglist__16944 = cljs.core.next(arglist__16944);
          var z = cljs.core.first(arglist__16944);
          var args = cljs.core.rest(arglist__16944);
          return G__16942__delegate(x, y, z, args);
        };
        G__16942.cljs$core$IFn$_invoke$arity$variadic = G__16942__delegate;
        return G__16942;
      }();
      G__16941 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__16941__0.call(this);
          case 1:
            return G__16941__1.call(this, x);
          case 2:
            return G__16941__2.call(this, x, y);
          case 3:
            return G__16941__3.call(this, x, y, z);
          default:
            var G__16945 = null;
            if (arguments.length > 3) {
              var G__16946__i = 0, G__16946__a = new Array(arguments.length - 3);
              while (G__16946__i < G__16946__a.length) {
                G__16946__a[G__16946__i] = arguments[G__16946__i + 3];
                ++G__16946__i;
              }
              G__16945 = new cljs.core.IndexedSeq(G__16946__a, 0);
            }
            return G__16941__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__16945);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__16941.cljs$lang$maxFixedArity = 3;
      G__16941.cljs$lang$applyTo = G__16941__4.cljs$lang$applyTo;
      G__16941.cljs$core$IFn$_invoke$arity$0 = G__16941__0;
      G__16941.cljs$core$IFn$_invoke$arity$1 = G__16941__1;
      G__16941.cljs$core$IFn$_invoke$arity$2 = G__16941__2;
      G__16941.cljs$core$IFn$_invoke$arity$3 = G__16941__3;
      G__16941.cljs$core$IFn$_invoke$arity$variadic = G__16941__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__16941;
    }();
  };
  var cljs$core$juxt__2 = function(f, g) {
    return function() {
      var G__16947 = null;
      var G__16947__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }(), function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }()], null);
      };
      var G__16947__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__16905 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16905) : f.call(null, G__16905);
        }(), function() {
          var G__16906 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__16906) : g.call(null, G__16906);
        }()], null);
      };
      var G__16947__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__16907 = x;
          var G__16908 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16907, G__16908) : f.call(null, G__16907, G__16908);
        }(), function() {
          var G__16909 = x;
          var G__16910 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__16909, G__16910) : g.call(null, G__16909, G__16910);
        }()], null);
      };
      var G__16947__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__16911 = x;
          var G__16912 = y;
          var G__16913 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16911, G__16912, G__16913) : f.call(null, G__16911, G__16912, G__16913);
        }(), function() {
          var G__16914 = x;
          var G__16915 = y;
          var G__16916 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__16914, G__16915, G__16916) : g.call(null, G__16914, G__16915, G__16916);
        }()], null);
      };
      var G__16947__4 = function() {
        var G__16948__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
        };
        var G__16948 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__16949__i = 0, G__16949__a = new Array(arguments.length - 3);
            while (G__16949__i < G__16949__a.length) {
              G__16949__a[G__16949__i] = arguments[G__16949__i + 3];
              ++G__16949__i;
            }
            args = new cljs.core.IndexedSeq(G__16949__a, 0);
          }
          return G__16948__delegate.call(this, x, y, z, args);
        };
        G__16948.cljs$lang$maxFixedArity = 3;
        G__16948.cljs$lang$applyTo = function(arglist__16950) {
          var x = cljs.core.first(arglist__16950);
          arglist__16950 = cljs.core.next(arglist__16950);
          var y = cljs.core.first(arglist__16950);
          arglist__16950 = cljs.core.next(arglist__16950);
          var z = cljs.core.first(arglist__16950);
          var args = cljs.core.rest(arglist__16950);
          return G__16948__delegate(x, y, z, args);
        };
        G__16948.cljs$core$IFn$_invoke$arity$variadic = G__16948__delegate;
        return G__16948;
      }();
      G__16947 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__16947__0.call(this);
          case 1:
            return G__16947__1.call(this, x);
          case 2:
            return G__16947__2.call(this, x, y);
          case 3:
            return G__16947__3.call(this, x, y, z);
          default:
            var G__16951 = null;
            if (arguments.length > 3) {
              var G__16952__i = 0, G__16952__a = new Array(arguments.length - 3);
              while (G__16952__i < G__16952__a.length) {
                G__16952__a[G__16952__i] = arguments[G__16952__i + 3];
                ++G__16952__i;
              }
              G__16951 = new cljs.core.IndexedSeq(G__16952__a, 0);
            }
            return G__16947__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__16951);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__16947.cljs$lang$maxFixedArity = 3;
      G__16947.cljs$lang$applyTo = G__16947__4.cljs$lang$applyTo;
      G__16947.cljs$core$IFn$_invoke$arity$0 = G__16947__0;
      G__16947.cljs$core$IFn$_invoke$arity$1 = G__16947__1;
      G__16947.cljs$core$IFn$_invoke$arity$2 = G__16947__2;
      G__16947.cljs$core$IFn$_invoke$arity$3 = G__16947__3;
      G__16947.cljs$core$IFn$_invoke$arity$variadic = G__16947__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__16947;
    }();
  };
  var cljs$core$juxt__3 = function(f, g, h) {
    return function() {
      var G__16953 = null;
      var G__16953__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }(), function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }(), function() {
          return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        }()], null);
      };
      var G__16953__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__16917 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16917) : f.call(null, G__16917);
        }(), function() {
          var G__16918 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__16918) : g.call(null, G__16918);
        }(), function() {
          var G__16919 = x;
          return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__16919) : h.call(null, G__16919);
        }()], null);
      };
      var G__16953__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__16920 = x;
          var G__16921 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16920, G__16921) : f.call(null, G__16920, G__16921);
        }(), function() {
          var G__16922 = x;
          var G__16923 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__16922, G__16923) : g.call(null, G__16922, G__16923);
        }(), function() {
          var G__16924 = x;
          var G__16925 = y;
          return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__16924, G__16925) : h.call(null, G__16924, G__16925);
        }()], null);
      };
      var G__16953__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__16926 = x;
          var G__16927 = y;
          var G__16928 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16926, G__16927, G__16928) : f.call(null, G__16926, G__16927, G__16928);
        }(), function() {
          var G__16929 = x;
          var G__16930 = y;
          var G__16931 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__16929, G__16930, G__16931) : g.call(null, G__16929, G__16930, G__16931);
        }(), function() {
          var G__16932 = x;
          var G__16933 = y;
          var G__16934 = z;
          return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__16932, G__16933, G__16934) : h.call(null, G__16932, G__16933, G__16934);
        }()], null);
      };
      var G__16953__4 = function() {
        var G__16954__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
        };
        var G__16954 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__16955__i = 0, G__16955__a = new Array(arguments.length - 3);
            while (G__16955__i < G__16955__a.length) {
              G__16955__a[G__16955__i] = arguments[G__16955__i + 3];
              ++G__16955__i;
            }
            args = new cljs.core.IndexedSeq(G__16955__a, 0);
          }
          return G__16954__delegate.call(this, x, y, z, args);
        };
        G__16954.cljs$lang$maxFixedArity = 3;
        G__16954.cljs$lang$applyTo = function(arglist__16956) {
          var x = cljs.core.first(arglist__16956);
          arglist__16956 = cljs.core.next(arglist__16956);
          var y = cljs.core.first(arglist__16956);
          arglist__16956 = cljs.core.next(arglist__16956);
          var z = cljs.core.first(arglist__16956);
          var args = cljs.core.rest(arglist__16956);
          return G__16954__delegate(x, y, z, args);
        };
        G__16954.cljs$core$IFn$_invoke$arity$variadic = G__16954__delegate;
        return G__16954;
      }();
      G__16953 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__16953__0.call(this);
          case 1:
            return G__16953__1.call(this, x);
          case 2:
            return G__16953__2.call(this, x, y);
          case 3:
            return G__16953__3.call(this, x, y, z);
          default:
            var G__16957 = null;
            if (arguments.length > 3) {
              var G__16958__i = 0, G__16958__a = new Array(arguments.length - 3);
              while (G__16958__i < G__16958__a.length) {
                G__16958__a[G__16958__i] = arguments[G__16958__i + 3];
                ++G__16958__i;
              }
              G__16957 = new cljs.core.IndexedSeq(G__16958__a, 0);
            }
            return G__16953__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__16957);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__16953.cljs$lang$maxFixedArity = 3;
      G__16953.cljs$lang$applyTo = G__16953__4.cljs$lang$applyTo;
      G__16953.cljs$core$IFn$_invoke$arity$0 = G__16953__0;
      G__16953.cljs$core$IFn$_invoke$arity$1 = G__16953__1;
      G__16953.cljs$core$IFn$_invoke$arity$2 = G__16953__2;
      G__16953.cljs$core$IFn$_invoke$arity$3 = G__16953__3;
      G__16953.cljs$core$IFn$_invoke$arity$variadic = G__16953__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__16953;
    }();
  };
  var cljs$core$juxt__4 = function() {
    var G__16959__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
      return function(fs__$1) {
        return function() {
          var G__16960 = null;
          var G__16960__0 = function() {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__16847_SHARP_, p2__16848_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16847_SHARP_, function() {
                  return p2__16848_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__16848_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__16848_SHARP_.call(null);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__16960__1 = function(x) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__16849_SHARP_, p2__16850_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16849_SHARP_, function() {
                  var G__16935 = x;
                  return p2__16850_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__16850_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16935) : p2__16850_SHARP_.call(null, G__16935);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__16960__2 = function(x, y) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__16851_SHARP_, p2__16852_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16851_SHARP_, function() {
                  var G__16936 = x;
                  var G__16937 = y;
                  return p2__16852_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__16852_SHARP_.cljs$core$IFn$_invoke$arity$2(G__16936, G__16937) : p2__16852_SHARP_.call(null, G__16936, G__16937);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__16960__3 = function(x, y, z) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__16853_SHARP_, p2__16854_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16853_SHARP_, function() {
                  var G__16938 = x;
                  var G__16939 = y;
                  var G__16940 = z;
                  return p2__16854_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__16854_SHARP_.cljs$core$IFn$_invoke$arity$3(G__16938, G__16939, G__16940) : p2__16854_SHARP_.call(null, G__16938, G__16939, G__16940);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__16960__4 = function() {
            var G__16961__delegate = function(x, y, z, args) {
              return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
                return function(p1__16855_SHARP_, p2__16856_SHARP_) {
                  return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16855_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__16856_SHARP_, x, y, z, args));
                };
              }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
            };
            var G__16961 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__16962__i = 0, G__16962__a = new Array(arguments.length - 3);
                while (G__16962__i < G__16962__a.length) {
                  G__16962__a[G__16962__i] = arguments[G__16962__i + 3];
                  ++G__16962__i;
                }
                args = new cljs.core.IndexedSeq(G__16962__a, 0);
              }
              return G__16961__delegate.call(this, x, y, z, args);
            };
            G__16961.cljs$lang$maxFixedArity = 3;
            G__16961.cljs$lang$applyTo = function(arglist__16963) {
              var x = cljs.core.first(arglist__16963);
              arglist__16963 = cljs.core.next(arglist__16963);
              var y = cljs.core.first(arglist__16963);
              arglist__16963 = cljs.core.next(arglist__16963);
              var z = cljs.core.first(arglist__16963);
              var args = cljs.core.rest(arglist__16963);
              return G__16961__delegate(x, y, z, args);
            };
            G__16961.cljs$core$IFn$_invoke$arity$variadic = G__16961__delegate;
            return G__16961;
          }();
          G__16960 = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return G__16960__0.call(this);
              case 1:
                return G__16960__1.call(this, x);
              case 2:
                return G__16960__2.call(this, x, y);
              case 3:
                return G__16960__3.call(this, x, y, z);
              default:
                var G__16964 = null;
                if (arguments.length > 3) {
                  var G__16965__i = 0, G__16965__a = new Array(arguments.length - 3);
                  while (G__16965__i < G__16965__a.length) {
                    G__16965__a[G__16965__i] = arguments[G__16965__i + 3];
                    ++G__16965__i;
                  }
                  G__16964 = new cljs.core.IndexedSeq(G__16965__a, 0);
                }
                return G__16960__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__16964);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__16960.cljs$lang$maxFixedArity = 3;
          G__16960.cljs$lang$applyTo = G__16960__4.cljs$lang$applyTo;
          G__16960.cljs$core$IFn$_invoke$arity$0 = G__16960__0;
          G__16960.cljs$core$IFn$_invoke$arity$1 = G__16960__1;
          G__16960.cljs$core$IFn$_invoke$arity$2 = G__16960__2;
          G__16960.cljs$core$IFn$_invoke$arity$3 = G__16960__3;
          G__16960.cljs$core$IFn$_invoke$arity$variadic = G__16960__4.cljs$core$IFn$_invoke$arity$variadic;
          return G__16960;
        }();
      }(fs__$1);
    };
    var G__16959 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        var G__16966__i = 0, G__16966__a = new Array(arguments.length - 3);
        while (G__16966__i < G__16966__a.length) {
          G__16966__a[G__16966__i] = arguments[G__16966__i + 3];
          ++G__16966__i;
        }
        fs = new cljs.core.IndexedSeq(G__16966__a, 0);
      }
      return G__16959__delegate.call(this, f, g, h, fs);
    };
    G__16959.cljs$lang$maxFixedArity = 3;
    G__16959.cljs$lang$applyTo = function(arglist__16967) {
      var f = cljs.core.first(arglist__16967);
      arglist__16967 = cljs.core.next(arglist__16967);
      var g = cljs.core.first(arglist__16967);
      arglist__16967 = cljs.core.next(arglist__16967);
      var h = cljs.core.first(arglist__16967);
      var fs = cljs.core.rest(arglist__16967);
      return G__16959__delegate(f, g, h, fs);
    };
    G__16959.cljs$core$IFn$_invoke$arity$variadic = G__16959__delegate;
    return G__16959;
  }();
  cljs$core$juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$juxt__1.call(this, f);
      case 2:
        return cljs$core$juxt__2.call(this, f, g);
      case 3:
        return cljs$core$juxt__3.call(this, f, g, h);
      default:
        var G__16968 = null;
        if (arguments.length > 3) {
          var G__16969__i = 0, G__16969__a = new Array(arguments.length - 3);
          while (G__16969__i < G__16969__a.length) {
            G__16969__a[G__16969__i] = arguments[G__16969__i + 3];
            ++G__16969__i;
          }
          G__16968 = new cljs.core.IndexedSeq(G__16969__a, 0);
        }
        return cljs$core$juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, G__16968);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$juxt.cljs$lang$maxFixedArity = 3;
  cljs$core$juxt.cljs$lang$applyTo = cljs$core$juxt__4.cljs$lang$applyTo;
  cljs$core$juxt.cljs$core$IFn$_invoke$arity$1 = cljs$core$juxt__1;
  cljs$core$juxt.cljs$core$IFn$_invoke$arity$2 = cljs$core$juxt__2;
  cljs$core$juxt.cljs$core$IFn$_invoke$arity$3 = cljs$core$juxt__3;
  cljs$core$juxt.cljs$core$IFn$_invoke$arity$variadic = cljs$core$juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$juxt;
}();
cljs.core.dorun = function() {
  var cljs$core$dorun = null;
  var cljs$core$dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq(coll)) {
        var G__16970 = cljs.core.next(coll);
        coll = G__16970;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var cljs$core$dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq(coll) && n > 0) {
        var G__16971 = n - 1;
        var G__16972 = cljs.core.next(coll);
        n = G__16971;
        coll = G__16972;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  cljs$core$dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$dorun__1.call(this, n);
      case 2:
        return cljs$core$dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$dorun.cljs$core$IFn$_invoke$arity$1 = cljs$core$dorun__1;
  cljs$core$dorun.cljs$core$IFn$_invoke$arity$2 = cljs$core$dorun__2;
  return cljs$core$dorun;
}();
cljs.core.doall = function() {
  var cljs$core$doall = null;
  var cljs$core$doall__1 = function(coll) {
    cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
    return coll;
  };
  var cljs$core$doall__2 = function(n, coll) {
    cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
    return coll;
  };
  cljs$core$doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$doall__1.call(this, n);
      case 2:
        return cljs$core$doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$doall.cljs$core$IFn$_invoke$arity$1 = cljs$core$doall__1;
  cljs$core$doall.cljs$core$IFn$_invoke$arity$2 = cljs$core$doall__2;
  return cljs$core$doall;
}();
cljs.core.regexp_QMARK_ = function cljs$core$regexp_QMARK_(x) {
  return x instanceof RegExp;
};
cljs.core.re_matches = function cljs$core$re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function cljs$core$re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function cljs$core$re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? cljs$core$re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function cljs$core$re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__16976 = cljs.core.re_find(/^\(\?([idmsux]*)\)/, s);
    var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16976, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16976, 1, null);
    var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, cljs.core.count(prefix));
    return new RegExp(pattern, function() {
      var or__4122__auto__ = flags;
      if (cljs.core.truth_(or__4122__auto__)) {
        return or__4122__auto__;
      } else {
        return "";
      }
    }());
  }
};
cljs.core.pr_sequential_writer = function cljs$core$pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_16984 = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__4122__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__4122__auto__)) {
              return or__4122__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__16985_16991 = cljs.core.first(coll);
          var G__16986_16992 = writer;
          var G__16987_16993 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16985_16991, G__16986_16992, G__16987_16993) : print_one.call(null, G__16985_16991, G__16986_16992, G__16987_16993);
        } else {
        }
        var coll_16994__$1 = cljs.core.next(coll);
        var n_16995 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_16994__$1 && (n_16995 == null || !(n_16995 === 0))) {
            cljs.core._write(writer, sep);
            var G__16988_16996 = cljs.core.first(coll_16994__$1);
            var G__16989_16997 = writer;
            var G__16990_16998 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16988_16996, G__16989_16997, G__16990_16998) : print_one.call(null, G__16988_16996, G__16989_16997, G__16990_16998);
            var G__16999 = cljs.core.next(coll_16994__$1);
            var G__17000 = n_16995 - 1;
            coll_16994__$1 = G__16999;
            n_16995 = G__17000;
            continue;
          } else {
            if (cljs.core.seq(coll_16994__$1) && n_16995 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__4122__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__4122__auto__)) {
                  return or__4122__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_16984;
  }
};
cljs.core.write_all = function() {
  var cljs$core$write_all__delegate = function(writer, ss) {
    var seq__17005 = cljs.core.seq(ss);
    var chunk__17006 = null;
    var count__17007 = 0;
    var i__17008 = 0;
    while (true) {
      if (i__17008 < count__17007) {
        var s = chunk__17006.cljs$core$IIndexed$_nth$arity$2(null, i__17008);
        cljs.core._write(writer, s);
        var G__17009 = seq__17005;
        var G__17010 = chunk__17006;
        var G__17011 = count__17007;
        var G__17012 = i__17008 + 1;
        seq__17005 = G__17009;
        chunk__17006 = G__17010;
        count__17007 = G__17011;
        i__17008 = G__17012;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq(seq__17005);
        if (temp__4126__auto__) {
          var seq__17005__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__17005__$1)) {
            var c__4907__auto__ = cljs.core.chunk_first(seq__17005__$1);
            var G__17013 = cljs.core.chunk_rest(seq__17005__$1);
            var G__17014 = c__4907__auto__;
            var G__17015 = cljs.core.count(c__4907__auto__);
            var G__17016 = 0;
            seq__17005 = G__17013;
            chunk__17006 = G__17014;
            count__17007 = G__17015;
            i__17008 = G__17016;
            continue;
          } else {
            var s = cljs.core.first(seq__17005__$1);
            cljs.core._write(writer, s);
            var G__17017 = cljs.core.next(seq__17005__$1);
            var G__17018 = null;
            var G__17019 = 0;
            var G__17020 = 0;
            seq__17005 = G__17017;
            chunk__17006 = G__17018;
            count__17007 = G__17019;
            i__17008 = G__17020;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var cljs$core$write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      var G__17021__i = 0, G__17021__a = new Array(arguments.length - 1);
      while (G__17021__i < G__17021__a.length) {
        G__17021__a[G__17021__i] = arguments[G__17021__i + 1];
        ++G__17021__i;
      }
      ss = new cljs.core.IndexedSeq(G__17021__a, 0);
    }
    return cljs$core$write_all__delegate.call(this, writer, ss);
  };
  cljs$core$write_all.cljs$lang$maxFixedArity = 1;
  cljs$core$write_all.cljs$lang$applyTo = function(arglist__17022) {
    var writer = cljs.core.first(arglist__17022);
    var ss = cljs.core.rest(arglist__17022);
    return cljs$core$write_all__delegate(writer, ss);
  };
  cljs$core$write_all.cljs$core$IFn$_invoke$arity$variadic = cljs$core$write_all__delegate;
  return cljs$core$write_all;
}();
cljs.core.string_print = function cljs$core$string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function cljs$core$flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj17024 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj17024;
}();
cljs.core.quote_string = function cljs$core$quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(function() {
    var G__17027 = '[\\\\"\b\f\n\r\t]';
    var G__17028 = "g";
    return RegExp(G__17027, G__17028);
  }(), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer_impl = function cljs$core$pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write(writer, "#\x3cundefined\x3e");
    } else {
      if (cljs.core.truth_(function() {
        var and__4110__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
        if (cljs.core.truth_(and__4110__auto__)) {
          var and__4110__auto____$1 = function() {
            var G__17042 = obj;
            if (G__17042) {
              var bit__4796__auto__ = G__17042.cljs$lang$protocol_mask$partition0$ & 131072;
              if (bit__4796__auto__ || G__17042.cljs$core$IMeta$) {
                return true;
              } else {
                if (!G__17042.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__17042);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__17042);
            }
          }();
          if (and__4110__auto____$1) {
            return cljs.core.meta(obj);
          } else {
            return and__4110__auto____$1;
          }
        } else {
          return and__4110__auto__;
        }
      }())) {
        cljs.core._write(writer, "^");
        var G__17043_17053 = cljs.core.meta(obj);
        var G__17044_17054 = writer;
        var G__17045_17055 = opts;
        cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__17043_17053, G__17044_17054, G__17045_17055) : cljs.core.pr_writer.call(null, G__17043_17053, G__17044_17054, G__17045_17055);
        cljs.core._write(writer, " ");
      } else {
      }
      if (obj == null) {
        return cljs.core._write(writer, "nil");
      } else {
        if (obj.cljs$lang$type) {
          return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
        } else {
          if (function() {
            var G__17046 = obj;
            if (G__17046) {
              var bit__4789__auto__ = G__17046.cljs$lang$protocol_mask$partition0$ & 2147483648;
              if (bit__4789__auto__ || G__17046.cljs$core$IPrintWithWriter$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
          } else {
            if (cljs.core.type(obj) === Boolean || typeof obj === "number") {
              return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
            } else {
              if (cljs.core.object_QMARK_(obj)) {
                cljs.core._write(writer, "#js ");
                var G__17047 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
                }, cljs.core.js_keys(obj));
                var G__17048 = cljs.core.pr_writer;
                var G__17049 = writer;
                var G__17050 = opts;
                return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__17047, G__17048, G__17049, G__17050) : cljs.core.print_map.call(null, G__17047, G__17048, G__17049, G__17050);
              } else {
                if (cljs.core.array_QMARK_(obj)) {
                  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
                } else {
                  if (cljs.core.truth_(function() {
                    var G__17051 = obj;
                    return goog.isString(G__17051);
                  }())) {
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write(writer, cljs.core.quote_string(obj));
                    } else {
                      return cljs.core._write(writer, obj);
                    }
                  } else {
                    if (cljs.core.fn_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                    } else {
                      if (obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while (true) {
                            if (cljs.core.count(ns) < len) {
                              var G__17056 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__17056;
                              continue;
                            } else {
                              return ns;
                            }
                            break;
                          }
                        };
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                      } else {
                        if (cljs.core.regexp_QMARK_(obj)) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                        } else {
                          if (function() {
                            var G__17052 = obj;
                            if (G__17052) {
                              var bit__4796__auto__ = G__17052.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if (bit__4796__auto__ || G__17052.cljs$core$IPrintWithWriter$) {
                                return true;
                              } else {
                                if (!G__17052.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__17052);
                                } else {
                                  return false;
                                }
                              }
                            } else {
                              return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__17052);
                            }
                          }()) {
                            return cljs.core._pr_writer(obj, writer, opts);
                          } else {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function cljs$core$pr_writer(obj, writer, opts) {
  var temp__4124__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var alt_impl = temp__4124__auto__;
    var G__17060 = obj;
    var G__17061 = writer;
    var G__17062 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__17060, G__17061, G__17062) : alt_impl.call(null, G__17060, G__17061, G__17062);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function cljs$core$pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__17067 = cljs.core.seq(cljs.core.next(objs));
  var chunk__17068 = null;
  var count__17069 = 0;
  var i__17070 = 0;
  while (true) {
    if (i__17070 < count__17069) {
      var obj = chunk__17068.cljs$core$IIndexed$_nth$arity$2(null, i__17070);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__17071 = seq__17067;
      var G__17072 = chunk__17068;
      var G__17073 = count__17069;
      var G__17074 = i__17070 + 1;
      seq__17067 = G__17071;
      chunk__17068 = G__17072;
      count__17069 = G__17073;
      i__17070 = G__17074;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__17067);
      if (temp__4126__auto__) {
        var seq__17067__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__17067__$1)) {
          var c__4907__auto__ = cljs.core.chunk_first(seq__17067__$1);
          var G__17075 = cljs.core.chunk_rest(seq__17067__$1);
          var G__17076 = c__4907__auto__;
          var G__17077 = cljs.core.count(c__4907__auto__);
          var G__17078 = 0;
          seq__17067 = G__17075;
          chunk__17068 = G__17076;
          count__17069 = G__17077;
          i__17070 = G__17078;
          continue;
        } else {
          var obj = cljs.core.first(seq__17067__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__17079 = cljs.core.next(seq__17067__$1);
          var G__17080 = null;
          var G__17081 = 0;
          var G__17082 = 0;
          seq__17067 = G__17079;
          chunk__17068 = G__17080;
          count__17069 = G__17081;
          i__17070 = G__17082;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function cljs$core$pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function cljs$core$pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function cljs$core$prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function cljs$core$pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function cljs$core$newline(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var cljs$core$pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
  };
  var cljs$core$pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__17083__i = 0, G__17083__a = new Array(arguments.length - 0);
      while (G__17083__i < G__17083__a.length) {
        G__17083__a[G__17083__i] = arguments[G__17083__i + 0];
        ++G__17083__i;
      }
      objs = new cljs.core.IndexedSeq(G__17083__a, 0);
    }
    return cljs$core$pr_str__delegate.call(this, objs);
  };
  cljs$core$pr_str.cljs$lang$maxFixedArity = 0;
  cljs$core$pr_str.cljs$lang$applyTo = function(arglist__17084) {
    var objs = cljs.core.seq(arglist__17084);
    return cljs$core$pr_str__delegate(objs);
  };
  cljs$core$pr_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$pr_str__delegate;
  return cljs$core$pr_str;
}();
cljs.core.prn_str = function() {
  var cljs$core$prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
  };
  var cljs$core$prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__17085__i = 0, G__17085__a = new Array(arguments.length - 0);
      while (G__17085__i < G__17085__a.length) {
        G__17085__a[G__17085__i] = arguments[G__17085__i + 0];
        ++G__17085__i;
      }
      objs = new cljs.core.IndexedSeq(G__17085__a, 0);
    }
    return cljs$core$prn_str__delegate.call(this, objs);
  };
  cljs$core$prn_str.cljs$lang$maxFixedArity = 0;
  cljs$core$prn_str.cljs$lang$applyTo = function(arglist__17086) {
    var objs = cljs.core.seq(arglist__17086);
    return cljs$core$prn_str__delegate(objs);
  };
  cljs$core$prn_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$prn_str__delegate;
  return cljs$core$prn_str;
}();
cljs.core.pr = function() {
  var cljs$core$pr__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  };
  var cljs$core$pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__17087__i = 0, G__17087__a = new Array(arguments.length - 0);
      while (G__17087__i < G__17087__a.length) {
        G__17087__a[G__17087__i] = arguments[G__17087__i + 0];
        ++G__17087__i;
      }
      objs = new cljs.core.IndexedSeq(G__17087__a, 0);
    }
    return cljs$core$pr__delegate.call(this, objs);
  };
  cljs$core$pr.cljs$lang$maxFixedArity = 0;
  cljs$core$pr.cljs$lang$applyTo = function(arglist__17088) {
    var objs = cljs.core.seq(arglist__17088);
    return cljs$core$pr__delegate(objs);
  };
  cljs$core$pr.cljs$core$IFn$_invoke$arity$variadic = cljs$core$pr__delegate;
  return cljs$core$pr;
}();
cljs.core.print = function() {
  var cljs$core$cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__17089__i = 0, G__17089__a = new Array(arguments.length - 0);
      while (G__17089__i < G__17089__a.length) {
        G__17089__a[G__17089__i] = arguments[G__17089__i + 0];
        ++G__17089__i;
      }
      objs = new cljs.core.IndexedSeq(G__17089__a, 0);
    }
    return cljs$core$cljs_core_print__delegate.call(this, objs);
  };
  cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs$core$cljs_core_print.cljs$lang$applyTo = function(arglist__17090) {
    var objs = cljs.core.seq(arglist__17090);
    return cljs$core$cljs_core_print__delegate(objs);
  };
  cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
  return cljs$core$cljs_core_print;
}();
cljs.core.print_str = function() {
  var cljs$core$print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__17091__i = 0, G__17091__a = new Array(arguments.length - 0);
      while (G__17091__i < G__17091__a.length) {
        G__17091__a[G__17091__i] = arguments[G__17091__i + 0];
        ++G__17091__i;
      }
      objs = new cljs.core.IndexedSeq(G__17091__a, 0);
    }
    return cljs$core$print_str__delegate.call(this, objs);
  };
  cljs$core$print_str.cljs$lang$maxFixedArity = 0;
  cljs$core$print_str.cljs$lang$applyTo = function(arglist__17092) {
    var objs = cljs.core.seq(arglist__17092);
    return cljs$core$print_str__delegate(objs);
  };
  cljs$core$print_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$print_str__delegate;
  return cljs$core$print_str;
}();
cljs.core.println = function() {
  var cljs$core$println__delegate = function(objs) {
    cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline(cljs.core.pr_opts());
    } else {
      return null;
    }
  };
  var cljs$core$println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__17093__i = 0, G__17093__a = new Array(arguments.length - 0);
      while (G__17093__i < G__17093__a.length) {
        G__17093__a[G__17093__i] = arguments[G__17093__i + 0];
        ++G__17093__i;
      }
      objs = new cljs.core.IndexedSeq(G__17093__a, 0);
    }
    return cljs$core$println__delegate.call(this, objs);
  };
  cljs$core$println.cljs$lang$maxFixedArity = 0;
  cljs$core$println.cljs$lang$applyTo = function(arglist__17094) {
    var objs = cljs.core.seq(arglist__17094);
    return cljs$core$println__delegate(objs);
  };
  cljs$core$println.cljs$core$IFn$_invoke$arity$variadic = cljs$core$println__delegate;
  return cljs$core$println;
}();
cljs.core.println_str = function() {
  var cljs$core$println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__17095__i = 0, G__17095__a = new Array(arguments.length - 0);
      while (G__17095__i < G__17095__a.length) {
        G__17095__a[G__17095__i] = arguments[G__17095__i + 0];
        ++G__17095__i;
      }
      objs = new cljs.core.IndexedSeq(G__17095__a, 0);
    }
    return cljs$core$println_str__delegate.call(this, objs);
  };
  cljs$core$println_str.cljs$lang$maxFixedArity = 0;
  cljs$core$println_str.cljs$lang$applyTo = function(arglist__17096) {
    var objs = cljs.core.seq(arglist__17096);
    return cljs$core$println_str__delegate(objs);
  };
  cljs$core$println_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$println_str__delegate;
  return cljs$core$println_str;
}();
cljs.core.prn = function() {
  var cljs$core$prn__delegate = function(objs) {
    cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline(cljs.core.pr_opts());
    } else {
      return null;
    }
  };
  var cljs$core$prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__17097__i = 0, G__17097__a = new Array(arguments.length - 0);
      while (G__17097__i < G__17097__a.length) {
        G__17097__a[G__17097__i] = arguments[G__17097__i + 0];
        ++G__17097__i;
      }
      objs = new cljs.core.IndexedSeq(G__17097__a, 0);
    }
    return cljs$core$prn__delegate.call(this, objs);
  };
  cljs$core$prn.cljs$lang$maxFixedArity = 0;
  cljs$core$prn.cljs$lang$applyTo = function(arglist__17098) {
    var objs = cljs.core.seq(arglist__17098);
    return cljs$core$prn__delegate(objs);
  };
  cljs$core$prn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$prn__delegate;
  return cljs$core$prn;
}();
cljs.core.print_map = function cljs$core$print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__17105_17111 = cljs.core.key(e);
    var G__17106_17112 = w;
    var G__17107_17113 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__17105_17111, G__17106_17112, G__17107_17113) : print_one.call(null, G__17105_17111, G__17106_17112, G__17107_17113);
    cljs.core._write(w, " ");
    var G__17108 = cljs.core.val(e);
    var G__17109 = w;
    var G__17110 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__17108, G__17109, G__17110) : print_one.call(null, G__17108, G__17109, G__17110);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cVolatile: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cAtom: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_keywords(x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols(x__$1, y);
};
cljs.core.alter_meta_BANG_ = function() {
  var cljs$core$alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
  };
  var cljs$core$alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__17114__i = 0, G__17114__a = new Array(arguments.length - 2);
      while (G__17114__i < G__17114__a.length) {
        G__17114__a[G__17114__i] = arguments[G__17114__i + 2];
        ++G__17114__i;
      }
      args = new cljs.core.IndexedSeq(G__17114__a, 0);
    }
    return cljs$core$alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  cljs$core$alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  cljs$core$alter_meta_BANG_.cljs$lang$applyTo = function(arglist__17115) {
    var iref = cljs.core.first(arglist__17115);
    arglist__17115 = cljs.core.next(arglist__17115);
    var f = cljs.core.first(arglist__17115);
    var args = cljs.core.rest(arglist__17115);
    return cljs$core$alter_meta_BANG___delegate(iref, f, args);
  };
  cljs$core$alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$alter_meta_BANG___delegate;
  return cljs$core$alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function cljs$core$reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function cljs$core$add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function cljs$core$remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var cljs$core$gensym = null;
  var cljs$core$gensym__0 = function() {
    return cljs$core$gensym.cljs$core$IFn$_invoke$arity$1("G__");
  };
  var cljs$core$gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = function() {
        var G__17118 = 0;
        return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__17118) : cljs.core.atom.call(null, G__17118);
      }();
    } else {
    }
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
  };
  cljs$core$gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return cljs$core$gensym__0.call(this);
      case 1:
        return cljs$core$gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$gensym.cljs$core$IFn$_invoke$arity$0 = cljs$core$gensym__0;
  cljs$core$gensym.cljs$core$IFn$_invoke$arity$1 = cljs$core$gensym__1;
  return cljs$core$gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = function() {
      return self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    }();
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function cljs$core$__GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function cljs$core$delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function cljs$core$force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    var G__17120 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17120) : cljs.core.deref.call(null, G__17120);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function cljs$core$realized_QMARK_(d) {
  return cljs.core._realized_QMARK_(d);
};
cljs.core.preserving_reduced = function cljs$core$preserving_reduced(rf) {
  return function(p1__17121_SHARP_, p2__17122_SHARP_) {
    var ret = function() {
      var G__17125 = p1__17121_SHARP_;
      var G__17126 = p2__17122_SHARP_;
      return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17125, G__17126) : rf.call(null, G__17125, G__17126);
    }();
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cljs$core$cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__17129 = null;
      var G__17129__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__17129__1 = function(result) {
        var G__17128 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17128) : rf.call(null, G__17128);
      };
      var G__17129__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__17129 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__17129__0.call(this);
          case 1:
            return G__17129__1.call(this, result);
          case 2:
            return G__17129__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__17129.cljs$core$IFn$_invoke$arity$0 = G__17129__0;
      G__17129.cljs$core$IFn$_invoke$arity$1 = G__17129__1;
      G__17129.cljs$core$IFn$_invoke$arity$2 = G__17129__2;
      return G__17129;
    }();
  }(rf1);
};
cljs.core.dedupe = function() {
  var cljs$core$dedupe = null;
  var cljs$core$dedupe__0 = function() {
    return function(rf) {
      var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(pa) {
        return function() {
          var G__17138 = null;
          var G__17138__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__17138__1 = function(result) {
            var G__17134 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17134) : rf.call(null, G__17134);
          };
          var G__17138__2 = function(result, input) {
            var prior = function() {
              var G__17135 = pa;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17135) : cljs.core.deref.call(null, G__17135);
            }();
            cljs.core.vreset_BANG_(pa, input);
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
              return result;
            } else {
              var G__17136 = result;
              var G__17137 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17136, G__17137) : rf.call(null, G__17136, G__17137);
            }
          };
          G__17138 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__17138__0.call(this);
              case 1:
                return G__17138__1.call(this, result);
              case 2:
                return G__17138__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__17138.cljs$core$IFn$_invoke$arity$0 = G__17138__0;
          G__17138.cljs$core$IFn$_invoke$arity$1 = G__17138__1;
          G__17138.cljs$core$IFn$_invoke$arity$2 = G__17138__2;
          return G__17138;
        }();
      }(pa);
    };
  };
  var cljs$core$dedupe__1 = function(coll) {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs$core$dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
  };
  cljs$core$dedupe = function(coll) {
    switch(arguments.length) {
      case 0:
        return cljs$core$dedupe__0.call(this);
      case 1:
        return cljs$core$dedupe__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$dedupe.cljs$core$IFn$_invoke$arity$0 = cljs$core$dedupe__0;
  cljs$core$dedupe.cljs$core$IFn$_invoke$arity$1 = cljs$core$dedupe__1;
  return cljs$core$dedupe;
}();
cljs.core.random_sample = function() {
  var cljs$core$random_sample = null;
  var cljs$core$random_sample__1 = function(prob) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
      return function() {
        return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
      }() < prob;
    });
  };
  var cljs$core$random_sample__2 = function(prob, coll) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
      return function() {
        return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
      }() < prob;
    }, coll);
  };
  cljs$core$random_sample = function(prob, coll) {
    switch(arguments.length) {
      case 1:
        return cljs$core$random_sample__1.call(this, prob);
      case 2:
        return cljs$core$random_sample__2.call(this, prob, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$random_sample.cljs$core$IFn$_invoke$arity$1 = cljs$core$random_sample__1;
  cljs$core$random_sample.cljs$core$IFn$_invoke$arity$2 = cljs$core$random_sample__2;
  return cljs$core$random_sample;
}();
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, f, init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function cljs$core$__GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5098__auto__ = this;
  return cljs.core.es6_iterator(this__5098__auto__);
};
cljs.core.eduction = function cljs$core$eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.run_BANG_ = function cljs$core$run_BANG_(proc, coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__17140_SHARP_, p2__17139_SHARP_) {
    var G__17142 = p2__17139_SHARP_;
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__17142) : proc.call(null, G__17142);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
  var obj17144 = {};
  return obj17144;
}();
cljs.core._clj__GT_js = function cljs$core$_clj__GT_js(x) {
  if (function() {
    var and__4110__auto__ = x;
    if (and__4110__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4758__auto__ = x == null ? null : x;
    return function() {
      var or__4122__auto__ = cljs.core._clj__GT_js[function() {
        var G__17148 = x__4758__auto__;
        return goog.typeOf(G__17148);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function cljs$core$_key__GT_js(x) {
  if (function() {
    var and__4110__auto__ = x;
    if (and__4110__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4758__auto__ = x == null ? null : x;
    return function() {
      var or__4122__auto__ = cljs.core._key__GT_js[function() {
        var G__17152 = x__4758__auto__;
        return goog.typeOf(G__17152);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function cljs$core$key__GT_js(k) {
  if (function() {
    var G__17155 = k;
    if (G__17155) {
      var bit__4796__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__4122__auto__ = bit__4796__auto__;
        if (cljs.core.truth_(or__4122__auto__)) {
          return or__4122__auto__;
        } else {
          return G__17155.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__17155.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__17155);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__17155);
    }
  }()) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      var G__17156 = k;
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__17156) : cljs.core.clj__GT_js.call(null, G__17156);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function cljs$core$clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__17172 = x;
      if (G__17172) {
        var bit__4796__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__4122__auto__ = bit__4796__auto__;
          if (cljs.core.truth_(or__4122__auto__)) {
            return or__4122__auto__;
          } else {
            return G__17172.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__17172.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__17172);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__17172);
      }
    }()) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = function() {
              var obj17174 = {};
              return obj17174;
            }();
            var seq__17175_17185 = cljs.core.seq(x);
            var chunk__17176_17186 = null;
            var count__17177_17187 = 0;
            var i__17178_17188 = 0;
            while (true) {
              if (i__17178_17188 < count__17177_17187) {
                var vec__17179_17189 = chunk__17176_17186.cljs$core$IIndexed$_nth$arity$2(null, i__17178_17188);
                var k_17190 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17179_17189, 0, null);
                var v_17191 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17179_17189, 1, null);
                m[cljs.core.key__GT_js(k_17190)] = cljs$core$clj__GT_js(v_17191);
                var G__17192 = seq__17175_17185;
                var G__17193 = chunk__17176_17186;
                var G__17194 = count__17177_17187;
                var G__17195 = i__17178_17188 + 1;
                seq__17175_17185 = G__17192;
                chunk__17176_17186 = G__17193;
                count__17177_17187 = G__17194;
                i__17178_17188 = G__17195;
                continue;
              } else {
                var temp__4126__auto___17196 = cljs.core.seq(seq__17175_17185);
                if (temp__4126__auto___17196) {
                  var seq__17175_17197__$1 = temp__4126__auto___17196;
                  if (cljs.core.chunked_seq_QMARK_(seq__17175_17197__$1)) {
                    var c__4907__auto___17198 = cljs.core.chunk_first(seq__17175_17197__$1);
                    var G__17199 = cljs.core.chunk_rest(seq__17175_17197__$1);
                    var G__17200 = c__4907__auto___17198;
                    var G__17201 = cljs.core.count(c__4907__auto___17198);
                    var G__17202 = 0;
                    seq__17175_17185 = G__17199;
                    chunk__17176_17186 = G__17200;
                    count__17177_17187 = G__17201;
                    i__17178_17188 = G__17202;
                    continue;
                  } else {
                    var vec__17180_17203 = cljs.core.first(seq__17175_17197__$1);
                    var k_17204 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17180_17203, 0, null);
                    var v_17205 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17180_17203, 1, null);
                    m[cljs.core.key__GT_js(k_17204)] = cljs$core$clj__GT_js(v_17205);
                    var G__17206 = cljs.core.next(seq__17175_17197__$1);
                    var G__17207 = null;
                    var G__17208 = 0;
                    var G__17209 = 0;
                    seq__17175_17185 = G__17206;
                    chunk__17176_17186 = G__17207;
                    count__17177_17187 = G__17208;
                    i__17178_17188 = G__17209;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__17181_17210 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js, x));
              var chunk__17182_17211 = null;
              var count__17183_17212 = 0;
              var i__17184_17213 = 0;
              while (true) {
                if (i__17184_17213 < count__17183_17212) {
                  var x_17214__$1 = chunk__17182_17211.cljs$core$IIndexed$_nth$arity$2(null, i__17184_17213);
                  arr.push(x_17214__$1);
                  var G__17215 = seq__17181_17210;
                  var G__17216 = chunk__17182_17211;
                  var G__17217 = count__17183_17212;
                  var G__17218 = i__17184_17213 + 1;
                  seq__17181_17210 = G__17215;
                  chunk__17182_17211 = G__17216;
                  count__17183_17212 = G__17217;
                  i__17184_17213 = G__17218;
                  continue;
                } else {
                  var temp__4126__auto___17219 = cljs.core.seq(seq__17181_17210);
                  if (temp__4126__auto___17219) {
                    var seq__17181_17220__$1 = temp__4126__auto___17219;
                    if (cljs.core.chunked_seq_QMARK_(seq__17181_17220__$1)) {
                      var c__4907__auto___17221 = cljs.core.chunk_first(seq__17181_17220__$1);
                      var G__17222 = cljs.core.chunk_rest(seq__17181_17220__$1);
                      var G__17223 = c__4907__auto___17221;
                      var G__17224 = cljs.core.count(c__4907__auto___17221);
                      var G__17225 = 0;
                      seq__17181_17210 = G__17222;
                      chunk__17182_17211 = G__17223;
                      count__17183_17212 = G__17224;
                      i__17184_17213 = G__17225;
                      continue;
                    } else {
                      var x_17226__$1 = cljs.core.first(seq__17181_17220__$1);
                      arr.push(x_17226__$1);
                      var G__17227 = cljs.core.next(seq__17181_17220__$1);
                      var G__17228 = null;
                      var G__17229 = 0;
                      var G__17230 = 0;
                      seq__17181_17210 = G__17227;
                      chunk__17182_17211 = G__17228;
                      count__17183_17212 = G__17229;
                      i__17184_17213 = G__17230;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj17232 = {};
  return obj17232;
}();
cljs.core._js__GT_clj = function cljs$core$_js__GT_clj(x, options) {
  if (function() {
    var and__4110__auto__ = x;
    if (and__4110__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4758__auto__ = x == null ? null : x;
    return function() {
      var or__4122__auto__ = cljs.core._js__GT_clj[function() {
        var G__17236 = x__4758__auto__;
        return goog.typeOf(G__17236);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var cljs$core$js__GT_clj = null;
  var cljs$core$js__GT_clj__1 = function(x) {
    return cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null)], 0));
  };
  var cljs$core$js__GT_clj__2 = function() {
    var G__17293__delegate = function(x, opts) {
      var map__17266 = opts;
      var map__17266__$1 = cljs.core.seq_QMARK_(map__17266) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__17266) : map__17266;
      var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__17266__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
      var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
      var f = function(map__17266, map__17266__$1, keywordize_keys, keyfn) {
        return function cljs$core$js__GT_clj_$_thisfn(x__$1) {
          if (function() {
            var G__17282 = x__$1;
            if (G__17282) {
              var bit__4796__auto__ = null;
              if (cljs.core.truth_(function() {
                var or__4122__auto__ = bit__4796__auto__;
                if (cljs.core.truth_(or__4122__auto__)) {
                  return or__4122__auto__;
                } else {
                  return G__17282.cljs$core$IEncodeClojure$;
                }
              }())) {
                return true;
              } else {
                if (!G__17282.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__17282);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__17282);
            }
          }()) {
            return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
          } else {
            if (cljs.core.seq_QMARK_(x__$1)) {
              return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn, x__$1));
            } else {
              if (cljs.core.coll_QMARK_(x__$1)) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn, x__$1));
              } else {
                if (cljs.core.array_QMARK_(x__$1)) {
                  return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn, x__$1));
                } else {
                  if (cljs.core.type(x__$1) === Object) {
                    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                      var iter__4876__auto__ = function(map__17266, map__17266__$1, keywordize_keys, keyfn) {
                        return function cljs$core$js__GT_clj_$_thisfn_$_iter__17283(s__17284) {
                          return new cljs.core.LazySeq(null, function(map__17266, map__17266__$1, keywordize_keys, keyfn) {
                            return function() {
                              var s__17284__$1 = s__17284;
                              while (true) {
                                var temp__4126__auto__ = cljs.core.seq(s__17284__$1);
                                if (temp__4126__auto__) {
                                  var s__17284__$2 = temp__4126__auto__;
                                  if (cljs.core.chunked_seq_QMARK_(s__17284__$2)) {
                                    var c__4874__auto__ = cljs.core.chunk_first(s__17284__$2);
                                    var size__4875__auto__ = cljs.core.count(c__4874__auto__);
                                    var b__17286 = cljs.core.chunk_buffer(size__4875__auto__);
                                    if (function() {
                                      var i__17285 = 0;
                                      while (true) {
                                        if (i__17285 < size__4875__auto__) {
                                          var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4874__auto__, i__17285);
                                          cljs.core.chunk_append(b__17286, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                            var G__17291 = k;
                                            return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__17291) : keyfn.call(null, G__17291);
                                          }(), cljs$core$js__GT_clj_$_thisfn(x__$1[k])], null));
                                          var G__17294 = i__17285 + 1;
                                          i__17285 = G__17294;
                                          continue;
                                        } else {
                                          return true;
                                        }
                                        break;
                                      }
                                    }()) {
                                      return cljs.core.chunk_cons(cljs.core.chunk(b__17286), cljs$core$js__GT_clj_$_thisfn_$_iter__17283(cljs.core.chunk_rest(s__17284__$2)));
                                    } else {
                                      return cljs.core.chunk_cons(cljs.core.chunk(b__17286), null);
                                    }
                                  } else {
                                    var k = cljs.core.first(s__17284__$2);
                                    return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                      var G__17292 = k;
                                      return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__17292) : keyfn.call(null, G__17292);
                                    }(), cljs$core$js__GT_clj_$_thisfn(x__$1[k])], null), cljs$core$js__GT_clj_$_thisfn_$_iter__17283(cljs.core.rest(s__17284__$2)));
                                  }
                                } else {
                                  return null;
                                }
                                break;
                              }
                            };
                          }(map__17266, map__17266__$1, keywordize_keys, keyfn), null, null);
                        };
                      }(map__17266, map__17266__$1, keywordize_keys, keyfn);
                      return iter__4876__auto__(cljs.core.js_keys(x__$1));
                    }());
                  } else {
                    return x__$1;
                  }
                }
              }
            }
          }
        };
      }(map__17266, map__17266__$1, keywordize_keys, keyfn);
      return f(x);
    };
    var G__17293 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        var G__17295__i = 0, G__17295__a = new Array(arguments.length - 1);
        while (G__17295__i < G__17295__a.length) {
          G__17295__a[G__17295__i] = arguments[G__17295__i + 1];
          ++G__17295__i;
        }
        opts = new cljs.core.IndexedSeq(G__17295__a, 0);
      }
      return G__17293__delegate.call(this, x, opts);
    };
    G__17293.cljs$lang$maxFixedArity = 1;
    G__17293.cljs$lang$applyTo = function(arglist__17296) {
      var x = cljs.core.first(arglist__17296);
      var opts = cljs.core.rest(arglist__17296);
      return G__17293__delegate(x, opts);
    };
    G__17293.cljs$core$IFn$_invoke$arity$variadic = G__17293__delegate;
    return G__17293;
  }();
  cljs$core$js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$js__GT_clj__1.call(this, x);
      default:
        var G__17297 = null;
        if (arguments.length > 1) {
          var G__17298__i = 0, G__17298__a = new Array(arguments.length - 1);
          while (G__17298__i < G__17298__a.length) {
            G__17298__a[G__17298__i] = arguments[G__17298__i + 1];
            ++G__17298__i;
          }
          G__17297 = new cljs.core.IndexedSeq(G__17298__a, 0);
        }
        return cljs$core$js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__17297);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$js__GT_clj.cljs$lang$maxFixedArity = 1;
  cljs$core$js__GT_clj.cljs$lang$applyTo = cljs$core$js__GT_clj__2.cljs$lang$applyTo;
  cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$1 = cljs$core$js__GT_clj__1;
  cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$js__GT_clj;
}();
cljs.core.memoize = function cljs$core$memoize(f) {
  var mem = function() {
    var G__17301 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__17301) : cljs.core.atom.call(null, G__17301);
  }();
  return function(mem) {
    return function() {
      var G__17303__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(function() {
          var G__17302 = mem;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17302) : cljs.core.deref.call(null, G__17302);
        }(), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__17303 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__17304__i = 0, G__17304__a = new Array(arguments.length - 0);
          while (G__17304__i < G__17304__a.length) {
            G__17304__a[G__17304__i] = arguments[G__17304__i + 0];
            ++G__17304__i;
          }
          args = new cljs.core.IndexedSeq(G__17304__a, 0);
        }
        return G__17303__delegate.call(this, args);
      };
      G__17303.cljs$lang$maxFixedArity = 0;
      G__17303.cljs$lang$applyTo = function(arglist__17305) {
        var args = cljs.core.seq(arglist__17305);
        return G__17303__delegate(args);
      };
      G__17303.cljs$core$IFn$_invoke$arity$variadic = G__17303__delegate;
      return G__17303;
    }();
  }(mem);
};
cljs.core.trampoline = function() {
  var cljs$core$trampoline = null;
  var cljs$core$trampoline__1 = function(f) {
    while (true) {
      var ret = function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }();
      if (cljs.core.fn_QMARK_(ret)) {
        var G__17307 = ret;
        f = G__17307;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var cljs$core$trampoline__2 = function() {
    var G__17308__delegate = function(f, args) {
      return cljs$core$trampoline.cljs$core$IFn$_invoke$arity$1(function() {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
      });
    };
    var G__17308 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        var G__17309__i = 0, G__17309__a = new Array(arguments.length - 1);
        while (G__17309__i < G__17309__a.length) {
          G__17309__a[G__17309__i] = arguments[G__17309__i + 1];
          ++G__17309__i;
        }
        args = new cljs.core.IndexedSeq(G__17309__a, 0);
      }
      return G__17308__delegate.call(this, f, args);
    };
    G__17308.cljs$lang$maxFixedArity = 1;
    G__17308.cljs$lang$applyTo = function(arglist__17310) {
      var f = cljs.core.first(arglist__17310);
      var args = cljs.core.rest(arglist__17310);
      return G__17308__delegate(f, args);
    };
    G__17308.cljs$core$IFn$_invoke$arity$variadic = G__17308__delegate;
    return G__17308;
  }();
  cljs$core$trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return cljs$core$trampoline__1.call(this, f);
      default:
        var G__17311 = null;
        if (arguments.length > 1) {
          var G__17312__i = 0, G__17312__a = new Array(arguments.length - 1);
          while (G__17312__i < G__17312__a.length) {
            G__17312__a[G__17312__i] = arguments[G__17312__i + 1];
            ++G__17312__i;
          }
          G__17311 = new cljs.core.IndexedSeq(G__17312__a, 0);
        }
        return cljs$core$trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__17311);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$trampoline.cljs$lang$maxFixedArity = 1;
  cljs$core$trampoline.cljs$lang$applyTo = cljs$core$trampoline__2.cljs$lang$applyTo;
  cljs$core$trampoline.cljs$core$IFn$_invoke$arity$1 = cljs$core$trampoline__1;
  cljs$core$trampoline.cljs$core$IFn$_invoke$arity$variadic = cljs$core$trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return cljs$core$trampoline;
}();
cljs.core.rand = function() {
  var cljs$core$rand = null;
  var cljs$core$rand__0 = function() {
    return cljs$core$rand.cljs$core$IFn$_invoke$arity$1(1);
  };
  var cljs$core$rand__1 = function(n) {
    return function() {
      return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
    }() * n;
  };
  cljs$core$rand = function(n) {
    switch(arguments.length) {
      case 0:
        return cljs$core$rand__0.call(this);
      case 1:
        return cljs$core$rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$rand.cljs$core$IFn$_invoke$arity$0 = cljs$core$rand__0;
  cljs$core$rand.cljs$core$IFn$_invoke$arity$1 = cljs$core$rand__1;
  return cljs$core$rand;
}();
cljs.core.rand_int = function cljs$core$rand_int(n) {
  var G__17315 = function() {
    return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
  }() * n;
  return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__17315) : Math.floor.call(null, G__17315);
};
cljs.core.rand_nth = function cljs$core$rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function cljs$core$group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = function() {
      var G__17317 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17317) : f.call(null, G__17317);
    }();
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function cljs$core$make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function cljs$core$get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__17319 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__17319) : cljs.core.atom.call(null, G__17319);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var cljs$core$swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
  };
  var cljs$core$swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      var G__17320__i = 0, G__17320__a = new Array(arguments.length - 1);
      while (G__17320__i < G__17320__a.length) {
        G__17320__a[G__17320__i] = arguments[G__17320__i + 1];
        ++G__17320__i;
      }
      args = new cljs.core.IndexedSeq(G__17320__a, 0);
    }
    return cljs$core$swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  cljs$core$swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  cljs$core$swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__17321) {
    var f = cljs.core.first(arglist__17321);
    var args = cljs.core.rest(arglist__17321);
    return cljs$core$swap_global_hierarchy_BANG___delegate(f, args);
  };
  cljs$core$swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$swap_global_hierarchy_BANG___delegate;
  return cljs$core$swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var cljs$core$isa_QMARK_ = null;
  var cljs$core$isa_QMARK___2 = function(child, parent) {
    return cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__17386 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17386) : cljs.core.deref.call(null, G__17386);
    }(), child, parent);
  };
  var cljs$core$isa_QMARK___3 = function(h, child, parent) {
    var or__4122__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
    if (or__4122__auto__) {
      return or__4122__auto__;
    } else {
      var or__4122__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__4122__auto____$1) {
        return or__4122__auto____$1;
      } else {
        var and__4110__auto__ = cljs.core.vector_QMARK_(parent);
        if (and__4110__auto__) {
          var and__4110__auto____$1 = cljs.core.vector_QMARK_(child);
          if (and__4110__auto____$1) {
            var and__4110__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
            if (and__4110__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count(parent)) {
                  return ret;
                } else {
                  var G__17411 = cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, function() {
                    var G__17409 = i;
                    return child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__17409) : child.call(null, G__17409);
                  }(), function() {
                    var G__17410 = i;
                    return parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__17410) : parent.call(null, G__17410);
                  }());
                  var G__17412 = i + 1;
                  ret = G__17411;
                  i = G__17412;
                  continue;
                }
                break;
              }
            } else {
              return and__4110__auto____$2;
            }
          } else {
            return and__4110__auto____$1;
          }
        } else {
          return and__4110__auto__;
        }
      }
    }
  };
  cljs$core$isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return cljs$core$isa_QMARK___2.call(this, h, child);
      case 3:
        return cljs$core$isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = cljs$core$isa_QMARK___2;
  cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = cljs$core$isa_QMARK___3;
  return cljs$core$isa_QMARK_;
}();
cljs.core.parents = function() {
  var cljs$core$parents = null;
  var cljs$core$parents__1 = function(tag) {
    return cljs$core$parents.cljs$core$IFn$_invoke$arity$2(function() {
      var G__17416 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17416) : cljs.core.deref.call(null, G__17416);
    }(), tag);
  };
  var cljs$core$parents__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  cljs$core$parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return cljs$core$parents__1.call(this, h);
      case 2:
        return cljs$core$parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$parents.cljs$core$IFn$_invoke$arity$1 = cljs$core$parents__1;
  cljs$core$parents.cljs$core$IFn$_invoke$arity$2 = cljs$core$parents__2;
  return cljs$core$parents;
}();
cljs.core.ancestors = function() {
  var cljs$core$ancestors = null;
  var cljs$core$ancestors__1 = function(tag) {
    return cljs$core$ancestors.cljs$core$IFn$_invoke$arity$2(function() {
      var G__17420 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17420) : cljs.core.deref.call(null, G__17420);
    }(), tag);
  };
  var cljs$core$ancestors__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  cljs$core$ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return cljs$core$ancestors__1.call(this, h);
      case 2:
        return cljs$core$ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$ancestors.cljs$core$IFn$_invoke$arity$1 = cljs$core$ancestors__1;
  cljs$core$ancestors.cljs$core$IFn$_invoke$arity$2 = cljs$core$ancestors__2;
  return cljs$core$ancestors;
}();
cljs.core.descendants = function() {
  var cljs$core$descendants = null;
  var cljs$core$descendants__1 = function(tag) {
    return cljs$core$descendants.cljs$core$IFn$_invoke$arity$2(function() {
      var G__17424 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17424) : cljs.core.deref.call(null, G__17424);
    }(), tag);
  };
  var cljs$core$descendants__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  cljs$core$descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return cljs$core$descendants__1.call(this, h);
      case 2:
        return cljs$core$descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$descendants.cljs$core$IFn$_invoke$arity$1 = cljs$core$descendants__1;
  cljs$core$descendants.cljs$core$IFn$_invoke$arity$2 = cljs$core$descendants__2;
  return cljs$core$descendants;
}();
cljs.core.derive = function() {
  var cljs$core$derive = null;
  var cljs$core$derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace(parent))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs$core$derive, cljs.core.array_seq([tag, parent], 0));
    return null;
  };
  var cljs$core$derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, function() {
              var G__17433 = target;
              return targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__17433) : targets.call(null, G__17433);
            }())));
          };
        }(tp, td, ta), m, cljs.core.cons(source, function() {
          var G__17434 = source;
          return sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__17434) : sources.call(null, G__17434);
        }()));
      };
    }(tp, td, ta);
    var or__4122__auto__ = cljs.core.contains_QMARK_(function() {
      var G__17438 = tag;
      return tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__17438) : tp.call(null, G__17438);
    }(), parent) ? null : function() {
      if (cljs.core.contains_QMARK_(function() {
        var G__17439 = tag;
        return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__17439) : ta.call(null, G__17439);
      }(), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      if (cljs.core.contains_QMARK_(function() {
        var G__17440 = parent;
        return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__17440) : ta.call(null, G__17440);
      }(), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
      "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__4122__auto__)) {
      return or__4122__auto__;
    } else {
      return h;
    }
  };
  cljs$core$derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return cljs$core$derive__2.call(this, h, tag);
      case 3:
        return cljs$core$derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$derive.cljs$core$IFn$_invoke$arity$2 = cljs$core$derive__2;
  cljs$core$derive.cljs$core$IFn$_invoke$arity$3 = cljs$core$derive__3;
  return cljs$core$derive;
}();
cljs.core.underive = function() {
  var cljs$core$underive = null;
  var cljs$core$underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs$core$underive, cljs.core.array_seq([tag, parent], 0));
    return null;
  };
  var cljs$core$underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(function() {
      var G__17447 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__17447) : parentMap.call(null, G__17447);
    }()) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(function() {
      var G__17448 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__17448) : parentMap.call(null, G__17448);
    }(), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
    var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
      return function(p1__17441_SHARP_) {
        return cljs.core.cons(cljs.core.first(p1__17441_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__17441_SHARP_), cljs.core.second(p1__17441_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
    if (cljs.core.contains_QMARK_(function() {
      var G__17449 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__17449) : parentMap.call(null, G__17449);
    }(), parent)) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
        return function(p1__17442_SHARP_, p2__17443_SHARP_) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__17442_SHARP_, p2__17443_SHARP_);
        };
      }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
    } else {
      return h;
    }
  };
  cljs$core$underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return cljs$core$underive__2.call(this, h, tag);
      case 3:
        return cljs$core$underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$underive.cljs$core$IFn$_invoke$arity$2 = cljs$core$underive__2;
  cljs$core$underive.cljs$core$IFn$_invoke$arity$3 = cljs$core$underive__3;
  return cljs$core$underive;
}();
cljs.core.reset_cache = function cljs$core$reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    var G__17452 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17452) : cljs.core.deref.call(null, G__17452);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    var G__17453 = hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17453) : cljs.core.deref.call(null, G__17453);
  });
};
cljs.core.prefers_STAR_ = function cljs$core$prefers_STAR_(x, y, prefer_table) {
  var xprefs = function() {
    var G__17469 = prefer_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17469) : cljs.core.deref.call(null, G__17469);
  }().call(null, x);
  var or__4122__auto__ = cljs.core.truth_(function() {
    var and__4110__auto__ = xprefs;
    if (cljs.core.truth_(and__4110__auto__)) {
      var G__17471 = y;
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__17471) : xprefs.call(null, G__17471);
    } else {
      return and__4110__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__4122__auto__)) {
    return or__4122__auto__;
  } else {
    var or__4122__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(cljs$core$prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__17472 = cljs.core.rest(ps);
          ps = G__17472;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__4122__auto____$1)) {
      return or__4122__auto____$1;
    } else {
      var or__4122__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__17473 = cljs.core.rest(ps);
            ps = G__17473;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__4122__auto____$2)) {
        return or__4122__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function cljs$core$dominates(x, y, prefer_table) {
  var or__4122__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__4122__auto__)) {
    return or__4122__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__17487) {
    var vec__17488 = p__17487;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17488, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17488, 1, null);
    var e = vec__17488;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__17489 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17489) : cljs.core.deref.call(null, G__17489);
    }(), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__4122__auto__ = be == null;
        if (or__4122__auto__) {
          return or__4122__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, function() {
    var G__17490 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17490) : cljs.core.deref.call(null, G__17490);
  }());
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
      var G__17491 = cached_hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17491) : cljs.core.deref.call(null, G__17491);
    }(), function() {
      var G__17492 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17492) : cljs.core.deref.call(null, G__17492);
    }())) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj17494 = {};
  return obj17494;
}();
cljs.core._reset = function cljs$core$_reset(mf) {
  if (function() {
    var and__4110__auto__ = mf;
    if (and__4110__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4758__auto__ = mf == null ? null : mf;
    return function() {
      var or__4122__auto__ = cljs.core._reset[function() {
        var G__17498 = x__4758__auto__;
        return goog.typeOf(G__17498);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._reset["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function cljs$core$_add_method(mf, dispatch_val, method) {
  if (function() {
    var and__4110__auto__ = mf;
    if (and__4110__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4758__auto__ = mf == null ? null : mf;
    return function() {
      var or__4122__auto__ = cljs.core._add_method[function() {
        var G__17502 = x__4758__auto__;
        return goog.typeOf(G__17502);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._add_method["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function cljs$core$_remove_method(mf, dispatch_val) {
  if (function() {
    var and__4110__auto__ = mf;
    if (and__4110__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4758__auto__ = mf == null ? null : mf;
    return function() {
      var or__4122__auto__ = cljs.core._remove_method[function() {
        var G__17506 = x__4758__auto__;
        return goog.typeOf(G__17506);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._remove_method["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function cljs$core$_prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__4110__auto__ = mf;
    if (and__4110__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4758__auto__ = mf == null ? null : mf;
    return function() {
      var or__4122__auto__ = cljs.core._prefer_method[function() {
        var G__17510 = x__4758__auto__;
        return goog.typeOf(G__17510);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._prefer_method["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function cljs$core$_get_method(mf, dispatch_val) {
  if (function() {
    var and__4110__auto__ = mf;
    if (and__4110__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4758__auto__ = mf == null ? null : mf;
    return function() {
      var or__4122__auto__ = cljs.core._get_method[function() {
        var G__17514 = x__4758__auto__;
        return goog.typeOf(G__17514);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._get_method["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function cljs$core$_methods(mf) {
  if (function() {
    var and__4110__auto__ = mf;
    if (and__4110__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4758__auto__ = mf == null ? null : mf;
    return function() {
      var or__4122__auto__ = cljs.core._methods[function() {
        var G__17518 = x__4758__auto__;
        return goog.typeOf(G__17518);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._methods["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function cljs$core$_prefers(mf) {
  if (function() {
    var and__4110__auto__ = mf;
    if (and__4110__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__4110__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4758__auto__ = mf == null ? null : mf;
    return function() {
      var or__4122__auto__ = cljs.core._prefers[function() {
        var G__17522 = x__4758__auto__;
        return goog.typeOf(G__17522);
      }()];
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        var or__4122__auto____$1 = cljs.core._prefers["_"];
        if (or__4122__auto____$1) {
          return or__4122__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function cljs$core$throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__17524 = this$__$1;
  return goog.getUid(G__17524);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
    var G__17525 = self__.cached_hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17525) : cljs.core.deref.call(null, G__17525);
  }(), function() {
    var G__17526 = self__.hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17526) : cljs.core.deref.call(null, G__17526);
  }())) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4124__auto__ = function() {
    var G__17527 = self__.method_cache;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17527) : cljs.core.deref.call(null, G__17527);
  }().call(null, dispatch_val);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var target_fn = temp__4124__auto__;
    return target_fn;
  } else {
    var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4124__auto____$1)) {
      var target_fn = temp__4124__auto____$1;
      return target_fn;
    } else {
      return function() {
        var G__17528 = self__.method_table;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17528) : cljs.core.deref.call(null, G__17528);
      }().call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__17529 = self__.method_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17529) : cljs.core.deref.call(null, G__17529);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__17530 = self__.prefer_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17530) : cljs.core.deref.call(null, G__17530);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__18371 = null;
  var G__18371__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__18371__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__17531 = a;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__17531) : self__.dispatch_fn.call(null, G__17531);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__17532 = a;
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__17532) : target_fn.call(null, G__17532);
  };
  var G__18371__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__17533 = a;
      var G__17534 = b;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__17533, G__17534) : self__.dispatch_fn.call(null, G__17533, G__17534);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__17535 = a;
    var G__17536 = b;
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__17535, G__17536) : target_fn.call(null, G__17535, G__17536);
  };
  var G__18371__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__17537 = a;
      var G__17538 = b;
      var G__17539 = c;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__17537, G__17538, G__17539) : self__.dispatch_fn.call(null, G__17537, G__17538, G__17539);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__17540 = a;
    var G__17541 = b;
    var G__17542 = c;
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__17540, G__17541, G__17542) : target_fn.call(null, G__17540, G__17541, G__17542);
  };
  var G__18371__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__17543 = a;
      var G__17544 = b;
      var G__17545 = c;
      var G__17546 = d;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__17543, G__17544, G__17545, G__17546) : self__.dispatch_fn.call(null, G__17543, G__17544, G__17545, G__17546);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__17547 = a;
    var G__17548 = b;
    var G__17549 = c;
    var G__17550 = d;
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__17547, G__17548, G__17549, G__17550) : target_fn.call(null, G__17547, G__17548, G__17549, G__17550);
  };
  var G__18371__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__17551 = a;
      var G__17552 = b;
      var G__17553 = c;
      var G__17554 = d;
      var G__17555 = e;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__17551, G__17552, G__17553, G__17554, G__17555) : self__.dispatch_fn.call(null, G__17551, G__17552, G__17553, G__17554, G__17555);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__17556 = a;
    var G__17557 = b;
    var G__17558 = c;
    var G__17559 = d;
    var G__17560 = e;
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__17556, G__17557, G__17558, G__17559, G__17560) : target_fn.call(null, G__17556, G__17557, G__17558, G__17559, G__17560);
  };
  var G__18371__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__17561 = a;
      var G__17562 = b;
      var G__17563 = c;
      var G__17564 = d;
      var G__17565 = e;
      var G__17566 = f;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__17561, G__17562, G__17563, G__17564, G__17565, G__17566) : self__.dispatch_fn.call(null, G__17561, G__17562, G__17563, G__17564, G__17565, G__17566);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__17567 = a;
    var G__17568 = b;
    var G__17569 = c;
    var G__17570 = d;
    var G__17571 = e;
    var G__17572 = f;
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__17567, G__17568, G__17569, G__17570, G__17571, G__17572) : target_fn.call(null, G__17567, G__17568, G__17569, G__17570, G__17571, G__17572);
  };
  var G__18371__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__17573 = a;
      var G__17574 = b;
      var G__17575 = c;
      var G__17576 = d;
      var G__17577 = e;
      var G__17578 = f;
      var G__17579 = g;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__17573, G__17574, G__17575, G__17576, G__17577, G__17578, G__17579) : self__.dispatch_fn.call(null, G__17573, G__17574, G__17575, G__17576, G__17577, G__17578, G__17579);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__17580 = a;
    var G__17581 = b;
    var G__17582 = c;
    var G__17583 = d;
    var G__17584 = e;
    var G__17585 = f;
    var G__17586 = g;
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__17580, G__17581, G__17582, G__17583, G__17584, G__17585, G__17586) : target_fn.call(null, G__17580, G__17581, G__17582, G__17583, G__17584, G__17585, G__17586);
  };
  var G__18371__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__17587 = a;
      var G__17588 = b;
      var G__17589 = c;
      var G__17590 = d;
      var G__17591 = e;
      var G__17592 = f;
      var G__17593 = g;
      var G__17594 = h;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__17587, G__17588, G__17589, G__17590, G__17591, G__17592, G__17593, G__17594) : self__.dispatch_fn.call(null, G__17587, G__17588, G__17589, G__17590, G__17591, G__17592, G__17593, G__17594);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__17595 = a;
    var G__17596 = b;
    var G__17597 = c;
    var G__17598 = d;
    var G__17599 = e;
    var G__17600 = f;
    var G__17601 = g;
    var G__17602 = h;
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__17595, G__17596, G__17597, G__17598, G__17599, G__17600, G__17601, G__17602) : target_fn.call(null, G__17595, G__17596, G__17597, G__17598, G__17599, G__17600, G__17601, G__17602);
  };
  var G__18371__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__17603 = a;
      var G__17604 = b;
      var G__17605 = c;
      var G__17606 = d;
      var G__17607 = e;
      var G__17608 = f;
      var G__17609 = g;
      var G__17610 = h;
      var G__17611 = i;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__17603, G__17604, G__17605, G__17606, G__17607, G__17608, G__17609, G__17610, G__17611) : self__.dispatch_fn.call(null, G__17603, G__17604, G__17605, G__17606, G__17607, G__17608, G__17609, G__17610, G__17611);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__17612 = a;
    var G__17613 = b;
    var G__17614 = c;
    var G__17615 = d;
    var G__17616 = e;
    var G__17617 = f;
    var G__17618 = g;
    var G__17619 = h;
    var G__17620 = i;
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__17612, G__17613, G__17614, G__17615, G__17616, G__17617, G__17618, G__17619, G__17620) : target_fn.call(null, G__17612, G__17613, G__17614, G__17615, G__17616, G__17617, G__17618, G__17619, G__17620);
  };
  var G__18371__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__17621 = a;
      var G__17622 = b;
      var G__17623 = c;
      var G__17624 = d;
      var G__17625 = e;
      var G__17626 = f;
      var G__17627 = g;
      var G__17628 = h;
      var G__17629 = i;
      var G__17630 = j;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__17621, G__17622, G__17623, G__17624, G__17625, G__17626, G__17627, G__17628, G__17629, G__17630) : self__.dispatch_fn.call(null, G__17621, G__17622, G__17623, G__17624, G__17625, G__17626, G__17627, G__17628, G__17629, G__17630);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__17631 = a;
    var G__17632 = b;
    var G__17633 = c;
    var G__17634 = d;
    var G__17635 = e;
    var G__17636 = f;
    var G__17637 = g;
    var G__17638 = h;
    var G__17639 = i;
    var G__17640 = j;
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__17631, G__17632, G__17633, G__17634, G__17635, G__17636, G__17637, G__17638, G__17639, G__17640) : target_fn.call(null, G__17631, G__17632, G__17633, G__17634, G__17635, G__17636, G__17637, G__17638, G__17639, G__17640);
  };
  var G__18371__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__17641 = a;
      var G__17642 = b;
      var G__17643 = c;
      var G__17644 = d;
      var G__17645 = e;
      var G__17646 = f;
      var G__17647 = g;
      var G__17648 = h;
      var G__17649 = i;
      var G__17650 = j;
      var G__17651 = k;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__17641, G__17642, G__17643, G__17644, G__17645, G__17646, G__17647, G__17648, G__17649, G__17650, G__17651) : self__.dispatch_fn.call(null, G__17641, G__17642, G__17643, G__17644, G__17645, G__17646, G__17647, G__17648, G__17649, G__17650, G__17651);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__17652 = a;
    var G__17653 = b;
    var G__17654 = c;
    var G__17655 = d;
    var G__17656 = e;
    var G__17657 = f;
    var G__17658 = g;
    var G__17659 = h;
    var G__17660 = i;
    var G__17661 = j;
    var G__17662 = k;
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__17652, G__17653, G__17654, G__17655, G__17656, G__17657, G__17658, G__17659, G__17660, G__17661, G__17662) : target_fn.call(null, G__17652, G__17653, G__17654, G__17655, G__17656, G__17657, G__17658, G__17659, G__17660, G__17661, G__17662);
  };
  var G__18371__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__17663 = a;
      var G__17664 = b;
      var G__17665 = c;
      var G__17666 = d;
      var G__17667 = e;
      var G__17668 = f;
      var G__17669 = g;
      var G__17670 = h;
      var G__17671 = i;
      var G__17672 = j;
      var G__17673 = k;
      var G__17674 = l;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__17663, G__17664, G__17665, G__17666, G__17667, G__17668, G__17669, G__17670, G__17671, G__17672, G__17673, G__17674) : self__.dispatch_fn.call(null, G__17663, G__17664, G__17665, G__17666, G__17667, G__17668, G__17669, G__17670, G__17671, G__17672, G__17673, G__17674);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__17675 = a;
    var G__17676 = b;
    var G__17677 = c;
    var G__17678 = d;
    var G__17679 = e;
    var G__17680 = f;
    var G__17681 = g;
    var G__17682 = h;
    var G__17683 = i;
    var G__17684 = j;
    var G__17685 = k;
    var G__17686 = l;
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__17675, G__17676, G__17677, G__17678, G__17679, G__17680, G__17681, G__17682, G__17683, G__17684, G__17685, G__17686) : target_fn.call(null, G__17675, G__17676, G__17677, G__17678, G__17679, G__17680, G__17681, G__17682, G__17683, G__17684, G__17685, G__17686);
  };
  var G__18371__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__17687 = a;
      var G__17688 = b;
      var G__17689 = c;
      var G__17690 = d;
      var G__17691 = e;
      var G__17692 = f;
      var G__17693 = g;
      var G__17694 = h;
      var G__17695 = i;
      var G__17696 = j;
      var G__17697 = k;
      var G__17698 = l;
      var G__17699 = m;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__17687, G__17688, G__17689, G__17690, G__17691, G__17692, G__17693, G__17694, G__17695, G__17696, G__17697, G__17698, G__17699) : self__.dispatch_fn.call(null, G__17687, G__17688, G__17689, G__17690, G__17691, G__17692, G__17693, G__17694, G__17695, G__17696, G__17697, G__17698, G__17699);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__17700 = a;
    var G__17701 = b;
    var G__17702 = c;
    var G__17703 = d;
    var G__17704 = e;
    var G__17705 = f;
    var G__17706 = g;
    var G__17707 = h;
    var G__17708 = i;
    var G__17709 = j;
    var G__17710 = k;
    var G__17711 = l;
    var G__17712 = m;
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__17700, G__17701, G__17702, G__17703, G__17704, G__17705, G__17706, G__17707, G__17708, G__17709, G__17710, G__17711, G__17712) : target_fn.call(null, G__17700, G__17701, G__17702, G__17703, G__17704, G__17705, G__17706, G__17707, G__17708, G__17709, G__17710, G__17711, G__17712);
  };
  var G__18371__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__17713 = a;
      var G__17714 = b;
      var G__17715 = c;
      var G__17716 = d;
      var G__17717 = e;
      var G__17718 = f;
      var G__17719 = g;
      var G__17720 = h;
      var G__17721 = i;
      var G__17722 = j;
      var G__17723 = k;
      var G__17724 = l;
      var G__17725 = m;
      var G__17726 = n;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__17713, G__17714, G__17715, G__17716, G__17717, G__17718, G__17719, G__17720, G__17721, G__17722, G__17723, G__17724, G__17725, G__17726) : self__.dispatch_fn.call(null, G__17713, G__17714, G__17715, G__17716, G__17717, G__17718, G__17719, G__17720, G__17721, G__17722, G__17723, G__17724, G__17725, G__17726);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__17727 = a;
    var G__17728 = b;
    var G__17729 = c;
    var G__17730 = d;
    var G__17731 = e;
    var G__17732 = f;
    var G__17733 = g;
    var G__17734 = h;
    var G__17735 = i;
    var G__17736 = j;
    var G__17737 = k;
    var G__17738 = l;
    var G__17739 = m;
    var G__17740 = n;
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__17727, G__17728, G__17729, G__17730, G__17731, G__17732, G__17733, G__17734, G__17735, G__17736, G__17737, G__17738, G__17739, G__17740) : target_fn.call(null, G__17727, G__17728, G__17729, G__17730, G__17731, G__17732, G__17733, G__17734, G__17735, G__17736, G__17737, G__17738, G__17739, G__17740);
  };
  var G__18371__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__17741 = a;
      var G__17742 = b;
      var G__17743 = c;
      var G__17744 = d;
      var G__17745 = e;
      var G__17746 = f;
      var G__17747 = g;
      var G__17748 = h;
      var G__17749 = i;
      var G__17750 = j;
      var G__17751 = k;
      var G__17752 = l;
      var G__17753 = m;
      var G__17754 = n;
      var G__17755 = o;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__17741, G__17742, G__17743, G__17744, G__17745, G__17746, G__17747, G__17748, G__17749, G__17750, G__17751, G__17752, G__17753, G__17754, G__17755) : self__.dispatch_fn.call(null, G__17741, G__17742, G__17743, G__17744, G__17745, G__17746, G__17747, G__17748, G__17749, G__17750, G__17751, G__17752, G__17753, G__17754, G__17755);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__17756 = a;
    var G__17757 = b;
    var G__17758 = c;
    var G__17759 = d;
    var G__17760 = e;
    var G__17761 = f;
    var G__17762 = g;
    var G__17763 = h;
    var G__17764 = i;
    var G__17765 = j;
    var G__17766 = k;
    var G__17767 = l;
    var G__17768 = m;
    var G__17769 = n;
    var G__17770 = o;
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__17756, G__17757, G__17758, G__17759, G__17760, G__17761, G__17762, G__17763, G__17764, G__17765, G__17766, G__17767, G__17768, G__17769, G__17770) : target_fn.call(null, G__17756, G__17757, G__17758, G__17759, G__17760, G__17761, G__17762, G__17763, G__17764, G__17765, G__17766, G__17767, G__17768, G__17769, G__17770);
  };
  var G__18371__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__17771 = a;
      var G__17772 = b;
      var G__17773 = c;
      var G__17774 = d;
      var G__17775 = e;
      var G__17776 = f;
      var G__17777 = g;
      var G__17778 = h;
      var G__17779 = i;
      var G__17780 = j;
      var G__17781 = k;
      var G__17782 = l;
      var G__17783 = m;
      var G__17784 = n;
      var G__17785 = o;
      var G__17786 = p;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__17771, G__17772, G__17773, G__17774, G__17775, G__17776, G__17777, G__17778, G__17779, G__17780, G__17781, G__17782, G__17783, G__17784, G__17785, G__17786) : self__.dispatch_fn.call(null, G__17771, G__17772, G__17773, G__17774, G__17775, G__17776, G__17777, G__17778, G__17779, G__17780, G__17781, G__17782, G__17783, G__17784, G__17785, G__17786);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__17787 = a;
    var G__17788 = b;
    var G__17789 = c;
    var G__17790 = d;
    var G__17791 = e;
    var G__17792 = f;
    var G__17793 = g;
    var G__17794 = h;
    var G__17795 = i;
    var G__17796 = j;
    var G__17797 = k;
    var G__17798 = l;
    var G__17799 = m;
    var G__17800 = n;
    var G__17801 = o;
    var G__17802 = p;
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__17787, G__17788, G__17789, G__17790, G__17791, G__17792, G__17793, G__17794, G__17795, G__17796, G__17797, G__17798, G__17799, G__17800, G__17801, G__17802) : target_fn.call(null, G__17787, G__17788, G__17789, G__17790, G__17791, G__17792, G__17793, G__17794, G__17795, G__17796, G__17797, G__17798, G__17799, G__17800, G__17801, G__17802);
  };
  var G__18371__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__17803 = a;
      var G__17804 = b;
      var G__17805 = c;
      var G__17806 = d;
      var G__17807 = e;
      var G__17808 = f;
      var G__17809 = g;
      var G__17810 = h;
      var G__17811 = i;
      var G__17812 = j;
      var G__17813 = k;
      var G__17814 = l;
      var G__17815 = m;
      var G__17816 = n;
      var G__17817 = o;
      var G__17818 = p;
      var G__17819 = q;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__17803, G__17804, G__17805, G__17806, G__17807, G__17808, G__17809, G__17810, G__17811, G__17812, G__17813, G__17814, G__17815, G__17816, G__17817, G__17818, G__17819) : self__.dispatch_fn.call(null, G__17803, G__17804, G__17805, G__17806, G__17807, G__17808, G__17809, G__17810, G__17811, G__17812, G__17813, G__17814, G__17815, G__17816, G__17817, G__17818, G__17819);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__17820 = a;
    var G__17821 = b;
    var G__17822 = c;
    var G__17823 = d;
    var G__17824 = e;
    var G__17825 = f;
    var G__17826 = g;
    var G__17827 = h;
    var G__17828 = i;
    var G__17829 = j;
    var G__17830 = k;
    var G__17831 = l;
    var G__17832 = m;
    var G__17833 = n;
    var G__17834 = o;
    var G__17835 = p;
    var G__17836 = q;
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__17820, G__17821, G__17822, G__17823, G__17824, G__17825, G__17826, G__17827, G__17828, G__17829, G__17830, G__17831, G__17832, G__17833, G__17834, G__17835, G__17836) : target_fn.call(null, G__17820, G__17821, G__17822, G__17823, G__17824, G__17825, G__17826, G__17827, G__17828, G__17829, G__17830, G__17831, G__17832, G__17833, G__17834, G__17835, G__17836);
  };
  var G__18371__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__17837 = a;
      var G__17838 = b;
      var G__17839 = c;
      var G__17840 = d;
      var G__17841 = e;
      var G__17842 = f;
      var G__17843 = g;
      var G__17844 = h;
      var G__17845 = i;
      var G__17846 = j;
      var G__17847 = k;
      var G__17848 = l;
      var G__17849 = m;
      var G__17850 = n;
      var G__17851 = o;
      var G__17852 = p;
      var G__17853 = q;
      var G__17854 = r;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__17837, G__17838, G__17839, G__17840, G__17841, G__17842, G__17843, G__17844, G__17845, G__17846, G__17847, G__17848, G__17849, G__17850, G__17851, G__17852, G__17853, G__17854) : self__.dispatch_fn.call(null, G__17837, G__17838, G__17839, G__17840, G__17841, G__17842, G__17843, G__17844, G__17845, G__17846, G__17847, G__17848, G__17849, G__17850, G__17851, G__17852, G__17853, G__17854);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__17855 = a;
    var G__17856 = b;
    var G__17857 = c;
    var G__17858 = d;
    var G__17859 = e;
    var G__17860 = f;
    var G__17861 = g;
    var G__17862 = h;
    var G__17863 = i;
    var G__17864 = j;
    var G__17865 = k;
    var G__17866 = l;
    var G__17867 = m;
    var G__17868 = n;
    var G__17869 = o;
    var G__17870 = p;
    var G__17871 = q;
    var G__17872 = r;
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__17855, G__17856, G__17857, G__17858, G__17859, G__17860, G__17861, G__17862, G__17863, G__17864, G__17865, G__17866, G__17867, G__17868, G__17869, G__17870, G__17871, G__17872) : target_fn.call(null, G__17855, G__17856, G__17857, G__17858, G__17859, G__17860, G__17861, G__17862, G__17863, G__17864, G__17865, G__17866, G__17867, G__17868, G__17869, G__17870, G__17871, G__17872);
  };
  var G__18371__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__17873 = a;
      var G__17874 = b;
      var G__17875 = c;
      var G__17876 = d;
      var G__17877 = e;
      var G__17878 = f;
      var G__17879 = g;
      var G__17880 = h;
      var G__17881 = i;
      var G__17882 = j;
      var G__17883 = k;
      var G__17884 = l;
      var G__17885 = m;
      var G__17886 = n;
      var G__17887 = o;
      var G__17888 = p;
      var G__17889 = q;
      var G__17890 = r;
      var G__17891 = s;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__17873, G__17874, G__17875, G__17876, G__17877, G__17878, G__17879, G__17880, G__17881, G__17882, G__17883, G__17884, G__17885, G__17886, G__17887, G__17888, G__17889, G__17890, G__17891) : self__.dispatch_fn.call(null, G__17873, G__17874, G__17875, G__17876, G__17877, G__17878, G__17879, G__17880, G__17881, G__17882, G__17883, G__17884, G__17885, G__17886, G__17887, G__17888, G__17889, 
      G__17890, G__17891);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__17892 = a;
    var G__17893 = b;
    var G__17894 = c;
    var G__17895 = d;
    var G__17896 = e;
    var G__17897 = f;
    var G__17898 = g;
    var G__17899 = h;
    var G__17900 = i;
    var G__17901 = j;
    var G__17902 = k;
    var G__17903 = l;
    var G__17904 = m;
    var G__17905 = n;
    var G__17906 = o;
    var G__17907 = p;
    var G__17908 = q;
    var G__17909 = r;
    var G__17910 = s;
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__17892, G__17893, G__17894, G__17895, G__17896, G__17897, G__17898, G__17899, G__17900, G__17901, G__17902, G__17903, G__17904, G__17905, G__17906, G__17907, G__17908, G__17909, G__17910) : target_fn.call(null, G__17892, G__17893, G__17894, G__17895, G__17896, G__17897, G__17898, G__17899, G__17900, G__17901, G__17902, G__17903, G__17904, G__17905, G__17906, G__17907, G__17908, G__17909, G__17910);
  };
  var G__18371__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__17911 = a;
      var G__17912 = b;
      var G__17913 = c;
      var G__17914 = d;
      var G__17915 = e;
      var G__17916 = f;
      var G__17917 = g;
      var G__17918 = h;
      var G__17919 = i;
      var G__17920 = j;
      var G__17921 = k;
      var G__17922 = l;
      var G__17923 = m;
      var G__17924 = n;
      var G__17925 = o;
      var G__17926 = p;
      var G__17927 = q;
      var G__17928 = r;
      var G__17929 = s;
      var G__17930 = t;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__17911, G__17912, G__17913, G__17914, G__17915, G__17916, G__17917, G__17918, G__17919, G__17920, G__17921, G__17922, G__17923, G__17924, G__17925, G__17926, G__17927, G__17928, G__17929, G__17930) : self__.dispatch_fn.call(null, G__17911, G__17912, G__17913, G__17914, G__17915, G__17916, G__17917, G__17918, G__17919, G__17920, G__17921, G__17922, G__17923, G__17924, G__17925, G__17926, 
      G__17927, G__17928, G__17929, G__17930);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__17931 = a;
    var G__17932 = b;
    var G__17933 = c;
    var G__17934 = d;
    var G__17935 = e;
    var G__17936 = f;
    var G__17937 = g;
    var G__17938 = h;
    var G__17939 = i;
    var G__17940 = j;
    var G__17941 = k;
    var G__17942 = l;
    var G__17943 = m;
    var G__17944 = n;
    var G__17945 = o;
    var G__17946 = p;
    var G__17947 = q;
    var G__17948 = r;
    var G__17949 = s;
    var G__17950 = t;
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__17931, G__17932, G__17933, G__17934, G__17935, G__17936, G__17937, G__17938, G__17939, G__17940, G__17941, G__17942, G__17943, G__17944, G__17945, G__17946, G__17947, G__17948, G__17949, G__17950) : target_fn.call(null, G__17931, G__17932, G__17933, G__17934, G__17935, G__17936, G__17937, G__17938, G__17939, G__17940, G__17941, G__17942, G__17943, G__17944, G__17945, G__17946, G__17947, G__17948, G__17949, 
    G__17950);
  };
  var G__18371__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__18371 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__18371__1.call(this, self__);
      case 2:
        return G__18371__2.call(this, self__, a);
      case 3:
        return G__18371__3.call(this, self__, a, b);
      case 4:
        return G__18371__4.call(this, self__, a, b, c);
      case 5:
        return G__18371__5.call(this, self__, a, b, c, d);
      case 6:
        return G__18371__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__18371__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__18371__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__18371__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__18371__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__18371__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__18371__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__18371__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__18371__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__18371__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__18371__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__18371__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__18371__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__18371__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__18371__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__18371__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__18371__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__18371.cljs$core$IFn$_invoke$arity$1 = G__18371__1;
  G__18371.cljs$core$IFn$_invoke$arity$2 = G__18371__2;
  G__18371.cljs$core$IFn$_invoke$arity$3 = G__18371__3;
  G__18371.cljs$core$IFn$_invoke$arity$4 = G__18371__4;
  G__18371.cljs$core$IFn$_invoke$arity$5 = G__18371__5;
  G__18371.cljs$core$IFn$_invoke$arity$6 = G__18371__6;
  G__18371.cljs$core$IFn$_invoke$arity$7 = G__18371__7;
  G__18371.cljs$core$IFn$_invoke$arity$8 = G__18371__8;
  G__18371.cljs$core$IFn$_invoke$arity$9 = G__18371__9;
  G__18371.cljs$core$IFn$_invoke$arity$10 = G__18371__10;
  G__18371.cljs$core$IFn$_invoke$arity$11 = G__18371__11;
  G__18371.cljs$core$IFn$_invoke$arity$12 = G__18371__12;
  G__18371.cljs$core$IFn$_invoke$arity$13 = G__18371__13;
  G__18371.cljs$core$IFn$_invoke$arity$14 = G__18371__14;
  G__18371.cljs$core$IFn$_invoke$arity$15 = G__18371__15;
  G__18371.cljs$core$IFn$_invoke$arity$16 = G__18371__16;
  G__18371.cljs$core$IFn$_invoke$arity$17 = G__18371__17;
  G__18371.cljs$core$IFn$_invoke$arity$18 = G__18371__18;
  G__18371.cljs$core$IFn$_invoke$arity$19 = G__18371__19;
  G__18371.cljs$core$IFn$_invoke$arity$20 = G__18371__20;
  G__18371.cljs$core$IFn$_invoke$arity$21 = G__18371__21;
  G__18371.cljs$core$IFn$_invoke$arity$22 = G__18371__22;
  return G__18371;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args17523) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args17523)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17951 = a;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__17951) : self__.dispatch_fn.call(null, G__17951);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17952 = a;
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__17952) : target_fn.call(null, G__17952);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17953 = a;
    var G__17954 = b;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__17953, G__17954) : self__.dispatch_fn.call(null, G__17953, G__17954);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17955 = a;
  var G__17956 = b;
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__17955, G__17956) : target_fn.call(null, G__17955, G__17956);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17957 = a;
    var G__17958 = b;
    var G__17959 = c;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__17957, G__17958, G__17959) : self__.dispatch_fn.call(null, G__17957, G__17958, G__17959);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17960 = a;
  var G__17961 = b;
  var G__17962 = c;
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__17960, G__17961, G__17962) : target_fn.call(null, G__17960, G__17961, G__17962);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17963 = a;
    var G__17964 = b;
    var G__17965 = c;
    var G__17966 = d;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__17963, G__17964, G__17965, G__17966) : self__.dispatch_fn.call(null, G__17963, G__17964, G__17965, G__17966);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17967 = a;
  var G__17968 = b;
  var G__17969 = c;
  var G__17970 = d;
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__17967, G__17968, G__17969, G__17970) : target_fn.call(null, G__17967, G__17968, G__17969, G__17970);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17971 = a;
    var G__17972 = b;
    var G__17973 = c;
    var G__17974 = d;
    var G__17975 = e;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__17971, G__17972, G__17973, G__17974, G__17975) : self__.dispatch_fn.call(null, G__17971, G__17972, G__17973, G__17974, G__17975);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17976 = a;
  var G__17977 = b;
  var G__17978 = c;
  var G__17979 = d;
  var G__17980 = e;
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__17976, G__17977, G__17978, G__17979, G__17980) : target_fn.call(null, G__17976, G__17977, G__17978, G__17979, G__17980);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17981 = a;
    var G__17982 = b;
    var G__17983 = c;
    var G__17984 = d;
    var G__17985 = e;
    var G__17986 = f;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__17981, G__17982, G__17983, G__17984, G__17985, G__17986) : self__.dispatch_fn.call(null, G__17981, G__17982, G__17983, G__17984, G__17985, G__17986);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__17987 = a;
  var G__17988 = b;
  var G__17989 = c;
  var G__17990 = d;
  var G__17991 = e;
  var G__17992 = f;
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__17987, G__17988, G__17989, G__17990, G__17991, G__17992) : target_fn.call(null, G__17987, G__17988, G__17989, G__17990, G__17991, G__17992);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__17993 = a;
    var G__17994 = b;
    var G__17995 = c;
    var G__17996 = d;
    var G__17997 = e;
    var G__17998 = f;
    var G__17999 = g;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__17993, G__17994, G__17995, G__17996, G__17997, G__17998, G__17999) : self__.dispatch_fn.call(null, G__17993, G__17994, G__17995, G__17996, G__17997, G__17998, G__17999);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__18000 = a;
  var G__18001 = b;
  var G__18002 = c;
  var G__18003 = d;
  var G__18004 = e;
  var G__18005 = f;
  var G__18006 = g;
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__18000, G__18001, G__18002, G__18003, G__18004, G__18005, G__18006) : target_fn.call(null, G__18000, G__18001, G__18002, G__18003, G__18004, G__18005, G__18006);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__18007 = a;
    var G__18008 = b;
    var G__18009 = c;
    var G__18010 = d;
    var G__18011 = e;
    var G__18012 = f;
    var G__18013 = g;
    var G__18014 = h;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__18007, G__18008, G__18009, G__18010, G__18011, G__18012, G__18013, G__18014) : self__.dispatch_fn.call(null, G__18007, G__18008, G__18009, G__18010, G__18011, G__18012, G__18013, G__18014);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__18015 = a;
  var G__18016 = b;
  var G__18017 = c;
  var G__18018 = d;
  var G__18019 = e;
  var G__18020 = f;
  var G__18021 = g;
  var G__18022 = h;
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__18015, G__18016, G__18017, G__18018, G__18019, G__18020, G__18021, G__18022) : target_fn.call(null, G__18015, G__18016, G__18017, G__18018, G__18019, G__18020, G__18021, G__18022);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__18023 = a;
    var G__18024 = b;
    var G__18025 = c;
    var G__18026 = d;
    var G__18027 = e;
    var G__18028 = f;
    var G__18029 = g;
    var G__18030 = h;
    var G__18031 = i;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__18023, G__18024, G__18025, G__18026, G__18027, G__18028, G__18029, G__18030, G__18031) : self__.dispatch_fn.call(null, G__18023, G__18024, G__18025, G__18026, G__18027, G__18028, G__18029, G__18030, G__18031);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__18032 = a;
  var G__18033 = b;
  var G__18034 = c;
  var G__18035 = d;
  var G__18036 = e;
  var G__18037 = f;
  var G__18038 = g;
  var G__18039 = h;
  var G__18040 = i;
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__18032, G__18033, G__18034, G__18035, G__18036, G__18037, G__18038, G__18039, G__18040) : target_fn.call(null, G__18032, G__18033, G__18034, G__18035, G__18036, G__18037, G__18038, G__18039, G__18040);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__18041 = a;
    var G__18042 = b;
    var G__18043 = c;
    var G__18044 = d;
    var G__18045 = e;
    var G__18046 = f;
    var G__18047 = g;
    var G__18048 = h;
    var G__18049 = i;
    var G__18050 = j;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__18041, G__18042, G__18043, G__18044, G__18045, G__18046, G__18047, G__18048, G__18049, G__18050) : self__.dispatch_fn.call(null, G__18041, G__18042, G__18043, G__18044, G__18045, G__18046, G__18047, G__18048, G__18049, G__18050);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__18051 = a;
  var G__18052 = b;
  var G__18053 = c;
  var G__18054 = d;
  var G__18055 = e;
  var G__18056 = f;
  var G__18057 = g;
  var G__18058 = h;
  var G__18059 = i;
  var G__18060 = j;
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__18051, G__18052, G__18053, G__18054, G__18055, G__18056, G__18057, G__18058, G__18059, G__18060) : target_fn.call(null, G__18051, G__18052, G__18053, G__18054, G__18055, G__18056, G__18057, G__18058, G__18059, G__18060);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__18061 = a;
    var G__18062 = b;
    var G__18063 = c;
    var G__18064 = d;
    var G__18065 = e;
    var G__18066 = f;
    var G__18067 = g;
    var G__18068 = h;
    var G__18069 = i;
    var G__18070 = j;
    var G__18071 = k;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__18061, G__18062, G__18063, G__18064, G__18065, G__18066, G__18067, G__18068, G__18069, G__18070, G__18071) : self__.dispatch_fn.call(null, G__18061, G__18062, G__18063, G__18064, G__18065, G__18066, G__18067, G__18068, G__18069, G__18070, G__18071);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__18072 = a;
  var G__18073 = b;
  var G__18074 = c;
  var G__18075 = d;
  var G__18076 = e;
  var G__18077 = f;
  var G__18078 = g;
  var G__18079 = h;
  var G__18080 = i;
  var G__18081 = j;
  var G__18082 = k;
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__18072, G__18073, G__18074, G__18075, G__18076, G__18077, G__18078, G__18079, G__18080, G__18081, G__18082) : target_fn.call(null, G__18072, G__18073, G__18074, G__18075, G__18076, G__18077, G__18078, G__18079, G__18080, G__18081, G__18082);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__18083 = a;
    var G__18084 = b;
    var G__18085 = c;
    var G__18086 = d;
    var G__18087 = e;
    var G__18088 = f;
    var G__18089 = g;
    var G__18090 = h;
    var G__18091 = i;
    var G__18092 = j;
    var G__18093 = k;
    var G__18094 = l;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__18083, G__18084, G__18085, G__18086, G__18087, G__18088, G__18089, G__18090, G__18091, G__18092, G__18093, G__18094) : self__.dispatch_fn.call(null, G__18083, G__18084, G__18085, G__18086, G__18087, G__18088, G__18089, G__18090, G__18091, G__18092, G__18093, G__18094);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__18095 = a;
  var G__18096 = b;
  var G__18097 = c;
  var G__18098 = d;
  var G__18099 = e;
  var G__18100 = f;
  var G__18101 = g;
  var G__18102 = h;
  var G__18103 = i;
  var G__18104 = j;
  var G__18105 = k;
  var G__18106 = l;
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__18095, G__18096, G__18097, G__18098, G__18099, G__18100, G__18101, G__18102, G__18103, G__18104, G__18105, G__18106) : target_fn.call(null, G__18095, G__18096, G__18097, G__18098, G__18099, G__18100, G__18101, G__18102, G__18103, G__18104, G__18105, G__18106);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__18107 = a;
    var G__18108 = b;
    var G__18109 = c;
    var G__18110 = d;
    var G__18111 = e;
    var G__18112 = f;
    var G__18113 = g;
    var G__18114 = h;
    var G__18115 = i;
    var G__18116 = j;
    var G__18117 = k;
    var G__18118 = l;
    var G__18119 = m;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__18107, G__18108, G__18109, G__18110, G__18111, G__18112, G__18113, G__18114, G__18115, G__18116, G__18117, G__18118, G__18119) : self__.dispatch_fn.call(null, G__18107, G__18108, G__18109, G__18110, G__18111, G__18112, G__18113, G__18114, G__18115, G__18116, G__18117, G__18118, G__18119);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__18120 = a;
  var G__18121 = b;
  var G__18122 = c;
  var G__18123 = d;
  var G__18124 = e;
  var G__18125 = f;
  var G__18126 = g;
  var G__18127 = h;
  var G__18128 = i;
  var G__18129 = j;
  var G__18130 = k;
  var G__18131 = l;
  var G__18132 = m;
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__18120, G__18121, G__18122, G__18123, G__18124, G__18125, G__18126, G__18127, G__18128, G__18129, G__18130, G__18131, G__18132) : target_fn.call(null, G__18120, G__18121, G__18122, G__18123, G__18124, G__18125, G__18126, G__18127, G__18128, G__18129, G__18130, G__18131, G__18132);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__18133 = a;
    var G__18134 = b;
    var G__18135 = c;
    var G__18136 = d;
    var G__18137 = e;
    var G__18138 = f;
    var G__18139 = g;
    var G__18140 = h;
    var G__18141 = i;
    var G__18142 = j;
    var G__18143 = k;
    var G__18144 = l;
    var G__18145 = m;
    var G__18146 = n;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__18133, G__18134, G__18135, G__18136, G__18137, G__18138, G__18139, G__18140, G__18141, G__18142, G__18143, G__18144, G__18145, G__18146) : self__.dispatch_fn.call(null, G__18133, G__18134, G__18135, G__18136, G__18137, G__18138, G__18139, G__18140, G__18141, G__18142, G__18143, G__18144, G__18145, G__18146);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__18147 = a;
  var G__18148 = b;
  var G__18149 = c;
  var G__18150 = d;
  var G__18151 = e;
  var G__18152 = f;
  var G__18153 = g;
  var G__18154 = h;
  var G__18155 = i;
  var G__18156 = j;
  var G__18157 = k;
  var G__18158 = l;
  var G__18159 = m;
  var G__18160 = n;
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__18147, G__18148, G__18149, G__18150, G__18151, G__18152, G__18153, G__18154, G__18155, G__18156, G__18157, G__18158, G__18159, G__18160) : target_fn.call(null, G__18147, G__18148, G__18149, G__18150, G__18151, G__18152, G__18153, G__18154, G__18155, G__18156, G__18157, G__18158, G__18159, G__18160);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__18161 = a;
    var G__18162 = b;
    var G__18163 = c;
    var G__18164 = d;
    var G__18165 = e;
    var G__18166 = f;
    var G__18167 = g;
    var G__18168 = h;
    var G__18169 = i;
    var G__18170 = j;
    var G__18171 = k;
    var G__18172 = l;
    var G__18173 = m;
    var G__18174 = n;
    var G__18175 = o;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__18161, G__18162, G__18163, G__18164, G__18165, G__18166, G__18167, G__18168, G__18169, G__18170, G__18171, G__18172, G__18173, G__18174, G__18175) : self__.dispatch_fn.call(null, G__18161, G__18162, G__18163, G__18164, G__18165, G__18166, G__18167, G__18168, G__18169, G__18170, G__18171, G__18172, G__18173, G__18174, G__18175);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__18176 = a;
  var G__18177 = b;
  var G__18178 = c;
  var G__18179 = d;
  var G__18180 = e;
  var G__18181 = f;
  var G__18182 = g;
  var G__18183 = h;
  var G__18184 = i;
  var G__18185 = j;
  var G__18186 = k;
  var G__18187 = l;
  var G__18188 = m;
  var G__18189 = n;
  var G__18190 = o;
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__18176, G__18177, G__18178, G__18179, G__18180, G__18181, G__18182, G__18183, G__18184, G__18185, G__18186, G__18187, G__18188, G__18189, G__18190) : target_fn.call(null, G__18176, G__18177, G__18178, G__18179, G__18180, G__18181, G__18182, G__18183, G__18184, G__18185, G__18186, G__18187, G__18188, G__18189, G__18190);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__18191 = a;
    var G__18192 = b;
    var G__18193 = c;
    var G__18194 = d;
    var G__18195 = e;
    var G__18196 = f;
    var G__18197 = g;
    var G__18198 = h;
    var G__18199 = i;
    var G__18200 = j;
    var G__18201 = k;
    var G__18202 = l;
    var G__18203 = m;
    var G__18204 = n;
    var G__18205 = o;
    var G__18206 = p;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__18191, G__18192, G__18193, G__18194, G__18195, G__18196, G__18197, G__18198, G__18199, G__18200, G__18201, G__18202, G__18203, G__18204, G__18205, G__18206) : self__.dispatch_fn.call(null, G__18191, G__18192, G__18193, G__18194, G__18195, G__18196, G__18197, G__18198, G__18199, G__18200, G__18201, G__18202, G__18203, G__18204, G__18205, G__18206);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__18207 = a;
  var G__18208 = b;
  var G__18209 = c;
  var G__18210 = d;
  var G__18211 = e;
  var G__18212 = f;
  var G__18213 = g;
  var G__18214 = h;
  var G__18215 = i;
  var G__18216 = j;
  var G__18217 = k;
  var G__18218 = l;
  var G__18219 = m;
  var G__18220 = n;
  var G__18221 = o;
  var G__18222 = p;
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__18207, G__18208, G__18209, G__18210, G__18211, G__18212, G__18213, G__18214, G__18215, G__18216, G__18217, G__18218, G__18219, G__18220, G__18221, G__18222) : target_fn.call(null, G__18207, G__18208, G__18209, G__18210, G__18211, G__18212, G__18213, G__18214, G__18215, G__18216, G__18217, G__18218, G__18219, G__18220, G__18221, G__18222);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__18223 = a;
    var G__18224 = b;
    var G__18225 = c;
    var G__18226 = d;
    var G__18227 = e;
    var G__18228 = f;
    var G__18229 = g;
    var G__18230 = h;
    var G__18231 = i;
    var G__18232 = j;
    var G__18233 = k;
    var G__18234 = l;
    var G__18235 = m;
    var G__18236 = n;
    var G__18237 = o;
    var G__18238 = p;
    var G__18239 = q;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__18223, G__18224, G__18225, G__18226, G__18227, G__18228, G__18229, G__18230, G__18231, G__18232, G__18233, G__18234, G__18235, G__18236, G__18237, G__18238, G__18239) : self__.dispatch_fn.call(null, G__18223, G__18224, G__18225, G__18226, G__18227, G__18228, G__18229, G__18230, G__18231, G__18232, G__18233, G__18234, G__18235, G__18236, G__18237, G__18238, G__18239);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__18240 = a;
  var G__18241 = b;
  var G__18242 = c;
  var G__18243 = d;
  var G__18244 = e;
  var G__18245 = f;
  var G__18246 = g;
  var G__18247 = h;
  var G__18248 = i;
  var G__18249 = j;
  var G__18250 = k;
  var G__18251 = l;
  var G__18252 = m;
  var G__18253 = n;
  var G__18254 = o;
  var G__18255 = p;
  var G__18256 = q;
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__18240, G__18241, G__18242, G__18243, G__18244, G__18245, G__18246, G__18247, G__18248, G__18249, G__18250, G__18251, G__18252, G__18253, G__18254, G__18255, G__18256) : target_fn.call(null, G__18240, G__18241, G__18242, G__18243, G__18244, G__18245, G__18246, G__18247, G__18248, G__18249, G__18250, G__18251, G__18252, G__18253, G__18254, G__18255, G__18256);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__18257 = a;
    var G__18258 = b;
    var G__18259 = c;
    var G__18260 = d;
    var G__18261 = e;
    var G__18262 = f;
    var G__18263 = g;
    var G__18264 = h;
    var G__18265 = i;
    var G__18266 = j;
    var G__18267 = k;
    var G__18268 = l;
    var G__18269 = m;
    var G__18270 = n;
    var G__18271 = o;
    var G__18272 = p;
    var G__18273 = q;
    var G__18274 = r;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__18257, G__18258, G__18259, G__18260, G__18261, G__18262, G__18263, G__18264, G__18265, G__18266, G__18267, G__18268, G__18269, G__18270, G__18271, G__18272, G__18273, G__18274) : self__.dispatch_fn.call(null, G__18257, G__18258, G__18259, G__18260, G__18261, G__18262, G__18263, G__18264, G__18265, G__18266, G__18267, G__18268, G__18269, G__18270, G__18271, G__18272, G__18273, G__18274);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__18275 = a;
  var G__18276 = b;
  var G__18277 = c;
  var G__18278 = d;
  var G__18279 = e;
  var G__18280 = f;
  var G__18281 = g;
  var G__18282 = h;
  var G__18283 = i;
  var G__18284 = j;
  var G__18285 = k;
  var G__18286 = l;
  var G__18287 = m;
  var G__18288 = n;
  var G__18289 = o;
  var G__18290 = p;
  var G__18291 = q;
  var G__18292 = r;
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__18275, G__18276, G__18277, G__18278, G__18279, G__18280, G__18281, G__18282, G__18283, G__18284, G__18285, G__18286, G__18287, G__18288, G__18289, G__18290, G__18291, G__18292) : target_fn.call(null, G__18275, G__18276, G__18277, G__18278, G__18279, G__18280, G__18281, G__18282, G__18283, G__18284, G__18285, G__18286, G__18287, G__18288, G__18289, G__18290, G__18291, G__18292);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__18293 = a;
    var G__18294 = b;
    var G__18295 = c;
    var G__18296 = d;
    var G__18297 = e;
    var G__18298 = f;
    var G__18299 = g;
    var G__18300 = h;
    var G__18301 = i;
    var G__18302 = j;
    var G__18303 = k;
    var G__18304 = l;
    var G__18305 = m;
    var G__18306 = n;
    var G__18307 = o;
    var G__18308 = p;
    var G__18309 = q;
    var G__18310 = r;
    var G__18311 = s;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__18293, G__18294, G__18295, G__18296, G__18297, G__18298, G__18299, G__18300, G__18301, G__18302, G__18303, G__18304, G__18305, G__18306, G__18307, G__18308, G__18309, G__18310, G__18311) : self__.dispatch_fn.call(null, G__18293, G__18294, G__18295, G__18296, G__18297, G__18298, G__18299, G__18300, G__18301, G__18302, G__18303, G__18304, G__18305, G__18306, G__18307, G__18308, G__18309, 
    G__18310, G__18311);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__18312 = a;
  var G__18313 = b;
  var G__18314 = c;
  var G__18315 = d;
  var G__18316 = e;
  var G__18317 = f;
  var G__18318 = g;
  var G__18319 = h;
  var G__18320 = i;
  var G__18321 = j;
  var G__18322 = k;
  var G__18323 = l;
  var G__18324 = m;
  var G__18325 = n;
  var G__18326 = o;
  var G__18327 = p;
  var G__18328 = q;
  var G__18329 = r;
  var G__18330 = s;
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__18312, G__18313, G__18314, G__18315, G__18316, G__18317, G__18318, G__18319, G__18320, G__18321, G__18322, G__18323, G__18324, G__18325, G__18326, G__18327, G__18328, G__18329, G__18330) : target_fn.call(null, G__18312, G__18313, G__18314, G__18315, G__18316, G__18317, G__18318, G__18319, G__18320, G__18321, G__18322, G__18323, G__18324, G__18325, G__18326, G__18327, G__18328, G__18329, G__18330);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__18331 = a;
    var G__18332 = b;
    var G__18333 = c;
    var G__18334 = d;
    var G__18335 = e;
    var G__18336 = f;
    var G__18337 = g;
    var G__18338 = h;
    var G__18339 = i;
    var G__18340 = j;
    var G__18341 = k;
    var G__18342 = l;
    var G__18343 = m;
    var G__18344 = n;
    var G__18345 = o;
    var G__18346 = p;
    var G__18347 = q;
    var G__18348 = r;
    var G__18349 = s;
    var G__18350 = t;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__18331, G__18332, G__18333, G__18334, G__18335, G__18336, G__18337, G__18338, G__18339, G__18340, G__18341, G__18342, G__18343, G__18344, G__18345, G__18346, G__18347, G__18348, G__18349, G__18350) : self__.dispatch_fn.call(null, G__18331, G__18332, G__18333, G__18334, G__18335, G__18336, G__18337, G__18338, G__18339, G__18340, G__18341, G__18342, G__18343, G__18344, G__18345, G__18346, 
    G__18347, G__18348, G__18349, G__18350);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__18351 = a;
  var G__18352 = b;
  var G__18353 = c;
  var G__18354 = d;
  var G__18355 = e;
  var G__18356 = f;
  var G__18357 = g;
  var G__18358 = h;
  var G__18359 = i;
  var G__18360 = j;
  var G__18361 = k;
  var G__18362 = l;
  var G__18363 = m;
  var G__18364 = n;
  var G__18365 = o;
  var G__18366 = p;
  var G__18367 = q;
  var G__18368 = r;
  var G__18369 = s;
  var G__18370 = t;
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__18351, G__18352, G__18353, G__18354, G__18355, G__18356, G__18357, G__18358, G__18359, G__18360, G__18361, G__18362, G__18363, G__18364, G__18365, G__18366, G__18367, G__18368, G__18369, G__18370) : target_fn.call(null, G__18351, G__18352, G__18353, G__18354, G__18355, G__18356, G__18357, G__18358, G__18359, G__18360, G__18361, G__18362, G__18363, G__18364, G__18365, G__18366, G__18367, G__18368, G__18369, 
  G__18370);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function cljs$core$__GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function cljs$core$remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function cljs$core$remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function cljs$core$prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function cljs$core$methods(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function cljs$core$get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function cljs$core$prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 2048;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  var G__18372 = self__.uuid;
  var G__18373 = other.uuid;
  return goog.array.defaultCompare(G__18372, G__18373);
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__18374 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
  return goog.string.hashCode(G__18374);
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4701__auto__, writer__4702__auto__, opt__4703__auto__) {
  return cljs.core._write(writer__4702__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function cljs$core$__GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.pr_writer_ex_info = function cljs$core$pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#ExceptionInfo{:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ExceptionInfo = function cljs$core$ExceptionInfo(message, data, cause) {
  var e = new Error;
  var this$ = this;
  this$.message = message;
  this$.data = data;
  this$.cause = cause;
  this$.name = e.name;
  this$.description = e.description;
  this$.number = e.number;
  this$.fileName = e.fileName;
  this$.lineNumber = e.lineNumber;
  this$.columnNumber = e.columnNumber;
  this$.stack = e.stack;
  return this$;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
  var obj__$1 = this;
  return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  var this$ = this;
  return cljs.core.pr_str_STAR_(this$);
};
cljs.core.ex_info = function() {
  var cljs$core$ex_info = null;
  var cljs$core$ex_info__2 = function(msg, data) {
    return cljs$core$ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
  };
  var cljs$core$ex_info__3 = function(msg, data, cause) {
    return new cljs.core.ExceptionInfo(msg, data, cause);
  };
  cljs$core$ex_info = function(msg, data, cause) {
    switch(arguments.length) {
      case 2:
        return cljs$core$ex_info__2.call(this, msg, data);
      case 3:
        return cljs$core$ex_info__3.call(this, msg, data, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cljs$core$ex_info.cljs$core$IFn$_invoke$arity$2 = cljs$core$ex_info__2;
  cljs$core$ex_info.cljs$core$IFn$_invoke$arity$3 = cljs$core$ex_info__3;
  return cljs$core$ex_info;
}();
cljs.core.ex_data = function cljs$core$ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function cljs$core$ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function cljs$core$ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function cljs$core$comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(function() {
      var G__18382 = x;
      var G__18383 = y;
      return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__18382, G__18383) : pred.call(null, G__18382, G__18383);
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(function() {
        var G__18384 = y;
        var G__18385 = x;
        return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__18384, G__18385) : pred.call(null, G__18384, G__18385);
      }())) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function cljs$core$special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", 
  "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), 
  null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function cljs$core$test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
goog.provide("cljs_unit_test.core");
goog.require("cljs.core");
cljs_unit_test.core.sum_two_numbers = function cljs_unit_test$core$sum_two_numbers(x, y) {
  return x + y;
};
cljs_unit_test.core.set_html_BANG_ = function cljs_unit_test$core$set_html_BANG_(el, content) {
  return el.innerHTML = content;
};
cljs_unit_test.core.init = function cljs_unit_test$core$init() {
  var element = document.getElementById("main");
  var content = [cljs.core.str("2 + 2 \x3d "), cljs.core.str(cljs_unit_test.core.sum_two_numbers.call(null, 2, 2))].join("");
  return cljs_unit_test.core.set_html_BANG_.call(null, element, content);
};
goog.exportSymbol("cljs_unit_test.core.init", cljs_unit_test.core.init);
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function clojure$string$seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function clojure$string$reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace = function clojure$string$replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (match instanceof RegExp) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
clojure.string.replace_first = function clojure$string$replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var clojure$string$join = null;
  var clojure$string$join__1 = function(coll) {
    var sb = new goog.string.StringBuffer;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var G__6069 = sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
        var G__6070 = cljs.core.next.call(null, coll__$1);
        sb = G__6069;
        coll__$1 = G__6070;
        continue;
      } else {
        return sb.toString();
      }
      break;
    }
  };
  var clojure$string$join__2 = function(separator, coll) {
    var sb = new goog.string.StringBuffer;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
        var coll__$2 = cljs.core.next.call(null, coll__$1);
        if (coll__$2 == null) {
        } else {
          sb.append(separator);
        }
        var G__6071 = sb;
        var G__6072 = coll__$2;
        sb = G__6071;
        coll__$1 = G__6072;
        continue;
      } else {
        return sb.toString();
      }
      break;
    }
  };
  clojure$string$join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return clojure$string$join__1.call(this, separator);
      case 2:
        return clojure$string$join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clojure$string$join.cljs$core$IFn$_invoke$arity$1 = clojure$string$join__1;
  clojure$string$join.cljs$core$IFn$_invoke$arity$2 = clojure$string$join__2;
  return clojure$string$join;
}();
clojure.string.upper_case = function clojure$string$upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function clojure$string$lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function clojure$string$capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function clojure$string$pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__6073 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__6073;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function clojure$string$discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function clojure$string$split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__6077 = cljs.core._EQ_;
    var expr__6078 = limit;
    if (cljs.core.truth_(pred__6077.call(null, 1, expr__6078))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__6077.call(null, 2, expr__6078))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var clojure$string$split = null;
  var clojure$string$split__2 = function(s, re) {
    return clojure$string$split.call(null, s, re, 0);
  };
  var clojure$string$split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, [cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1);
        } else {
          var temp__4124__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if (cljs.core.truth_(temp__4124__auto__)) {
            var m = temp__4124__auto__;
            var index = s__$1.indexOf(m);
            var G__6080 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__6081 = limit__$1 - 1;
            var G__6082 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__6080;
            limit__$1 = G__6081;
            parts = G__6082;
            continue;
          } else {
            return cljs.core.conj.call(null, parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  clojure$string$split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return clojure$string$split__2.call(this, s, re);
      case 3:
        return clojure$string$split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clojure$string$split.cljs$core$IFn$_invoke$arity$2 = clojure$string$split__2;
  clojure$string$split.cljs$core$IFn$_invoke$arity$3 = clojure$string$split__3;
  return clojure$string$split;
}();
clojure.string.split_lines = function clojure$string$split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function clojure$string$trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function clojure$string$triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function clojure$string$trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function clojure$string$trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__6083 = index - 1;
        index = G__6083;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function clojure$string$blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function clojure$string$escape(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4124__auto___6084 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4124__auto___6084)) {
        var replacement_6085 = temp__4124__auto___6084;
        buffer.append([cljs.core.str(replacement_6085)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__6086 = index + 1;
      index = G__6086;
      continue;
    }
    break;
  }
};
goog.provide("cemerick.cljs.test");
goog.require("cljs.core");
goog.require("clojure.string");
cemerick.cljs.test._STAR_test_print_fn_STAR_ = null;
cemerick.cljs.test._STAR_entry_point_STAR_ = true;
cemerick.cljs.test._STAR_test_ctx_STAR_ = null;
cemerick.cljs.test.init_test_environment_STAR_ = function cemerick$cljs$test$init_test_environment_STAR_(aux_data) {
  return cljs.core.atom.call(null, cljs.core.merge.call(null, cljs.core.assoc.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "test", "test", 577538877), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0], null), cljs.core.truth_(cemerick.cljs.test._STAR_test_print_fn_STAR_) ? new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", -2097998143), cemerick.cljs.test._STAR_test_print_fn_STAR_], null) : null), new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1505935128), cljs.core.List.EMPTY), aux_data));
};
cemerick.cljs.test.init_test_environment = function cemerick$cljs$test$init_test_environment() {
  var G__5911 = cemerick.cljs.test.init_test_environment_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cemerick.cljs.test", "test-functions", "cemerick.cljs.test/test-functions", -1547551786), cljs.core.List.EMPTY], null));
  cljs.core.swap_BANG_.call(null, G__5911, cljs.core.assoc, new cljs.core.Keyword(null, "async", "async", 1050769601), cemerick.cljs.test.init_test_environment_STAR_.call(null, cljs.core.PersistentArrayMap.EMPTY));
  return G__5911;
};
cemerick.cljs.test.registered_tests = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
cemerick.cljs.test.registered_test_hooks = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
cemerick.cljs.test.registered_fixtures = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
cemerick.cljs.test.register_test_BANG_ = function cemerick$cljs$test$register_test_BANG_(ns, name, fn) {
  return cljs.core.swap_BANG_.call(null, cemerick.cljs.test.registered_tests, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns], null), cljs.core.assoc, name, fn);
};
cemerick.cljs.test.register_test_ns_hook_BANG_ = function cemerick$cljs$test$register_test_ns_hook_BANG_(ns, name) {
  return cljs.core.swap_BANG_.call(null, cemerick.cljs.test.registered_test_hooks, cljs.core.assoc, ns, name);
};
cemerick.cljs.test.TestContext = function(test_env, test_name, __meta, __extmap, __hash) {
  this.test_env = test_env;
  this.test_name = test_name;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4717__auto__, k__4718__auto__) {
  var self__ = this;
  var this__4717__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4717__auto____$1, k__4718__auto__, null);
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4719__auto__, k5913, else__4720__auto__) {
  var self__ = this;
  var this__4719__auto____$1 = this;
  var G__5915 = k5913 instanceof cljs.core.Keyword ? k5913.fqn : null;
  switch(G__5915) {
    case "test-name":
      return self__.test_name;
      break;
    case "test-env":
      return self__.test_env;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k5913, else__4720__auto__);
  }
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4731__auto__, writer__4732__auto__, opts__4733__auto__) {
  var self__ = this;
  var this__4731__auto____$1 = this;
  var pr_pair__4734__auto__ = function(this__4731__auto____$1) {
    return function(keyval__4735__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4732__auto__, cljs.core.pr_writer, "", " ", "", opts__4733__auto__, keyval__4735__auto__);
    };
  }(this__4731__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4732__auto__, pr_pair__4734__auto__, "#cemerick.cljs.test.TestContext{", ", ", "}", opts__4733__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "test-env", "test-env", -540228992), self__.test_env], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "test-name", "test-name", -675595913), self__.test_name], null)], null), self__.__extmap));
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4715__auto__) {
  var self__ = this;
  var this__4715__auto____$1 = this;
  return self__.__meta;
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4711__auto__) {
  var self__ = this;
  var this__4711__auto____$1 = this;
  return new cemerick.cljs.test.TestContext(self__.test_env, self__.test_name, self__.__meta, self__.__extmap, self__.__hash);
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4721__auto__) {
  var self__ = this;
  var this__4721__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4712__auto__) {
  var self__ = this;
  var this__4712__auto____$1 = this;
  var h__4538__auto__ = self__.__hash;
  if (!(h__4538__auto__ == null)) {
    return h__4538__auto__;
  } else {
    var h__4538__auto____$1 = cljs.core.hash_imap.call(null, this__4712__auto____$1);
    self__.__hash = h__4538__auto____$1;
    return h__4538__auto____$1;
  }
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4713__auto__, other__4714__auto__) {
  var self__ = this;
  var this__4713__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4110__auto__ = other__4714__auto__;
    if (cljs.core.truth_(and__4110__auto__)) {
      return this__4713__auto____$1.constructor === other__4714__auto__.constructor && cljs.core.equiv_map.call(null, this__4713__auto____$1, other__4714__auto__);
    } else {
      return and__4110__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4726__auto__, k__4727__auto__) {
  var self__ = this;
  var this__4726__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "test-env", "test-env", -540228992), null, new cljs.core.Keyword(null, "test-name", "test-name", -675595913), null], null), null), k__4727__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4726__auto____$1), self__.__meta), k__4727__auto__);
  } else {
    return new cemerick.cljs.test.TestContext(self__.test_env, self__.test_name, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4727__auto__)), null);
  }
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4724__auto__, k__4725__auto__, G__5912) {
  var self__ = this;
  var this__4724__auto____$1 = this;
  var pred__5916 = cljs.core.keyword_identical_QMARK_;
  var expr__5917 = k__4725__auto__;
  if (cljs.core.truth_(pred__5916.call(null, new cljs.core.Keyword(null, "test-env", "test-env", -540228992), expr__5917))) {
    return new cemerick.cljs.test.TestContext(G__5912, self__.test_name, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__5916.call(null, new cljs.core.Keyword(null, "test-name", "test-name", -675595913), expr__5917))) {
      return new cemerick.cljs.test.TestContext(self__.test_env, G__5912, self__.__meta, self__.__extmap, null);
    } else {
      return new cemerick.cljs.test.TestContext(self__.test_env, self__.test_name, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4725__auto__, G__5912), null);
    }
  }
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4729__auto__) {
  var self__ = this;
  var this__4729__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "test-env", "test-env", -540228992), self__.test_env], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "test-name", "test-name", -675595913), self__.test_name], null)], null), 
  self__.__extmap));
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4716__auto__, G__5912) {
  var self__ = this;
  var this__4716__auto____$1 = this;
  return new cemerick.cljs.test.TestContext(self__.test_env, self__.test_name, G__5912, self__.__extmap, self__.__hash);
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4722__auto__, entry__4723__auto__) {
  var self__ = this;
  var this__4722__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4723__auto__)) {
    return cljs.core._assoc.call(null, this__4722__auto____$1, cljs.core._nth.call(null, entry__4723__auto__, 0), cljs.core._nth.call(null, entry__4723__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4722__auto____$1, entry__4723__auto__);
  }
};
cemerick.cljs.test.TestContext.cljs$lang$type = true;
cemerick.cljs.test.TestContext.cljs$lang$ctorPrSeq = function(this__4751__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cemerick.cljs.test/TestContext");
};
cemerick.cljs.test.TestContext.cljs$lang$ctorPrWriter = function(this__4751__auto__, writer__4752__auto__) {
  return cljs.core._write.call(null, writer__4752__auto__, "cemerick.cljs.test/TestContext");
};
cemerick.cljs.test.__GT_TestContext = function cemerick$cljs$test$__GT_TestContext(test_env, test_name) {
  return new cemerick.cljs.test.TestContext(test_env, test_name, null, null, null);
};
cemerick.cljs.test.map__GT_TestContext = function cemerick$cljs$test$map__GT_TestContext(G__5914) {
  return new cemerick.cljs.test.TestContext((new cljs.core.Keyword(null, "test-env", "test-env", -540228992)).cljs$core$IFn$_invoke$arity$1(G__5914), (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(G__5914), null, cljs.core.dissoc.call(null, G__5914, new cljs.core.Keyword(null, "test-env", "test-env", -540228992), new cljs.core.Keyword(null, "test-name", "test-name", -675595913)), null);
};
cemerick.cljs.test.maybe_deref = function cemerick$cljs$test$maybe_deref(x) {
  if (function() {
    var G__5921 = x;
    if (G__5921) {
      var bit__4796__auto__ = G__5921.cljs$lang$protocol_mask$partition0$ & 32768;
      if (bit__4796__auto__ || G__5921.cljs$core$IDeref$) {
        return true;
      } else {
        if (!G__5921.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__5921);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__5921);
    }
  }()) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cemerick.cljs.test.testing_complete_QMARK_ = function cemerick$cljs$test$testing_complete_QMARK_(test_env) {
  var map__5923 = cemerick.cljs.test.maybe_deref.call(null, test_env);
  var map__5923__$1 = cljs.core.seq_QMARK_.call(null, map__5923) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5923) : map__5923;
  var remaining = cljs.core.get.call(null, map__5923__$1, new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", -1491651312));
  var running = cljs.core.get.call(null, map__5923__$1, new cljs.core.Keyword("cemerick.cljs.test", "running", "cemerick.cljs.test/running", -1954037558));
  var async = cljs.core.get.call(null, map__5923__$1, new cljs.core.Keyword(null, "async", "async", 1050769601));
  var and__4110__auto__ = cljs.core.empty_QMARK_.call(null, remaining);
  if (and__4110__auto__) {
    var and__4110__auto____$1 = cljs.core.empty_QMARK_.call(null, running);
    if (and__4110__auto____$1) {
      var or__4122__auto__ = async == null;
      if (or__4122__auto__) {
        return or__4122__auto__;
      } else {
        return cemerick$cljs$test$testing_complete_QMARK_.call(null, async);
      }
    } else {
      return and__4110__auto____$1;
    }
  } else {
    return and__4110__auto__;
  }
};
cemerick.cljs.test.on_async_progress = function cemerick$cljs$test$on_async_progress(test_env, callback) {
  if (cljs.core.truth_(cemerick.cljs.test.testing_complete_QMARK_.call(null, test_env))) {
    setTimeout(function() {
      return callback.call(null, test_env);
    }, 1);
  } else {
    cljs.core.add_watch.call(null, (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cemerick.cljs.test.maybe_deref.call(null, test_env)), cljs.core.gensym.call(null, "on-progress"), function(key, ref, old, new$) {
      var vec__5926 = cljs.core.map.call(null, function(p1__5924_SHARP_) {
        return cljs.core.select_keys.call(null, p1__5924_SHARP_, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "test", "test", 577538877), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "error", "error", -978969032)], null));
      }, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old, new$], null));
      var oldv = cljs.core.nth.call(null, vec__5926, 0, null);
      var newv = cljs.core.nth.call(null, vec__5926, 1, null);
      var complete_QMARK_ = cemerick.cljs.test.testing_complete_QMARK_.call(null, new$);
      if (cljs.core.truth_(function() {
        var or__4122__auto__ = complete_QMARK_;
        if (cljs.core.truth_(or__4122__auto__)) {
          return or__4122__auto__;
        } else {
          return cljs.core.not_EQ_.call(null, oldv, newv);
        }
      }())) {
        callback.call(null, cemerick.cljs.test.maybe_deref.call(null, test_env));
      } else {
      }
      if (cljs.core.truth_(complete_QMARK_)) {
        return cljs.core.remove_watch.call(null, ref, key);
      } else {
        return null;
      }
    });
  }
  return test_env;
};
goog.exportSymbol("cemerick.cljs.test.on_async_progress", cemerick.cljs.test.on_async_progress);
cemerick.cljs.test.on_testing_complete = function cemerick$cljs$test$on_testing_complete(test_env, callback) {
  return cemerick.cljs.test.on_async_progress.call(null, test_env, function(test_env__$1) {
    if (cljs.core.truth_(cemerick.cljs.test.testing_complete_QMARK_.call(null, test_env__$1))) {
      return callback.call(null, test_env__$1);
    } else {
      return null;
    }
  });
};
goog.exportSymbol("cemerick.cljs.test.on_testing_complete", cemerick.cljs.test.on_testing_complete);
cemerick.cljs.test.testing_vars_str = function cemerick$cljs$test$testing_vars_str(p__5927) {
  var map__5929 = p__5927;
  var map__5929__$1 = cljs.core.seq_QMARK_.call(null, map__5929) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5929) : map__5929;
  var m = map__5929__$1;
  var test_name = cljs.core.get.call(null, map__5929__$1, new cljs.core.Keyword(null, "test-name", "test-name", -675595913));
  var test_env = cljs.core.get.call(null, map__5929__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  var line = cljs.core.get.call(null, map__5929__$1, new cljs.core.Keyword(null, "line", "line", 212345235));
  var file = cljs.core.get.call(null, map__5929__$1, new cljs.core.Keyword(null, "file", "file", -1269645878));
  return[cljs.core.str(cljs.core.pr_str.call(null, function() {
    var or__4122__auto__ = cljs.core.seq.call(null, cljs.core.reverse.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "test-functions", "cemerick.cljs.test/test-functions", -1547551786)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env))));
    if (or__4122__auto__) {
      return or__4122__auto__;
    } else {
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, test_name);
    }
  }())), cljs.core.str(" ("), cljs.core.str(file), cljs.core.str(":"), cljs.core.str(line), cljs.core.str(")")].join("");
};
cemerick.cljs.test.testing_contexts_str = function cemerick$cljs$test$testing_contexts_str(test_env) {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", cljs.core.reverse.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1505935128)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)))));
};
cemerick.cljs.test.inc_report_counter = function cemerick$cljs$test$inc_report_counter(test_env, name) {
  return cljs.core.swap_BANG_.call(null, test_env, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [name], null), cljs.core.fnil.call(null, cljs.core.inc, 0));
};
cemerick.cljs.test.report = function() {
  var method_table__5017__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__5018__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__5019__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__5020__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__5021__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cemerick.cljs.test", "report"), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5021__auto__, method_table__5017__auto__, prefer_table__5018__auto__, method_cache__5019__auto__, cached_hierarchy__5020__auto__);
}();
cemerick.cljs.test.file_and_line = function cemerick$cljs$test$file_and_line(error) {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "file", "file", -1269645878), error.fileName, new cljs.core.Keyword(null, "line", "line", 212345235), error.lineNumber], null);
};
cemerick.cljs.test.do_report = function() {
  var cemerick$cljs$test$do_report = null;
  var cemerick$cljs$test$do_report__1 = function(m) {
    return cemerick.cljs.test.report.call(null, function() {
      var G__5934 = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m) instanceof cljs.core.Keyword ? (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m).fqn : null;
      switch(G__5934) {
        case "error":
          return cljs.core.merge.call(null, cemerick.cljs.test.file_and_line.call(null, (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m)), m);
          break;
        case "fail":
          return cljs.core.merge.call(null, cemerick.cljs.test.file_and_line.call(null, Error()), m);
          break;
        default:
          return m;
      }
    }());
  };
  var cemerick$cljs$test$do_report__2 = function(p__5930, m) {
    var map__5933 = p__5930;
    var map__5933__$1 = cljs.core.seq_QMARK_.call(null, map__5933) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5933) : map__5933;
    var test_ctx = map__5933__$1;
    var test_name = cljs.core.get.call(null, map__5933__$1, new cljs.core.Keyword(null, "test-name", "test-name", -675595913));
    var test_env = cljs.core.get.call(null, map__5933__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
    if (test_ctx instanceof cemerick.cljs.test.TestContext) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null), new cljs.core.Symbol(null, "TestContext", "TestContext", -1631381989, null), new cljs.core.Symbol(null, "test-ctx", "test-ctx", -185362578, null))))].join(""));
    }
    return cemerick$cljs$test$do_report.call(null, cljs.core.merge.call(null, m, test_ctx));
  };
  cemerick$cljs$test$do_report = function(p__5930, m) {
    switch(arguments.length) {
      case 1:
        return cemerick$cljs$test$do_report__1.call(this, p__5930);
      case 2:
        return cemerick$cljs$test$do_report__2.call(this, p__5930, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cemerick$cljs$test$do_report.cljs$core$IFn$_invoke$arity$1 = cemerick$cljs$test$do_report__1;
  cemerick$cljs$test$do_report.cljs$core$IFn$_invoke$arity$2 = cemerick$cljs$test$do_report__2;
  return cemerick$cljs$test$do_report;
}();
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "default", "default", -1987822328), function(p__5936) {
  var map__5937 = p__5936;
  var map__5937__$1 = cljs.core.seq_QMARK_.call(null, map__5937) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5937) : map__5937;
  var m = map__5937__$1;
  var test_env = cljs.core.get.call(null, map__5937__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  var _STAR_print_fn_STAR_5938 = cljs.core._STAR_print_fn_STAR_;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var or__4122__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", -2097998143)).cljs$core$IFn$_invoke$arity$1(test_env);
    if (cljs.core.truth_(or__4122__auto__)) {
      return or__4122__auto__;
    } else {
      return cljs.core._STAR_print_fn_STAR_;
    }
  }();
  try {
    return cljs.core.prn.call(null, m);
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_5938;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "pass", "pass", 1574159993), function(p__5939) {
  var map__5940 = p__5939;
  var map__5940__$1 = cljs.core.seq_QMARK_.call(null, map__5940) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5940) : map__5940;
  var m = map__5940__$1;
  var test_env = cljs.core.get.call(null, map__5940__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  var _STAR_print_fn_STAR_5941 = cljs.core._STAR_print_fn_STAR_;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var or__4122__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", -2097998143)).cljs$core$IFn$_invoke$arity$1(test_env);
    if (cljs.core.truth_(or__4122__auto__)) {
      return or__4122__auto__;
    } else {
      return cljs.core._STAR_print_fn_STAR_;
    }
  }();
  try {
    return cemerick.cljs.test.inc_report_counter.call(null, test_env, new cljs.core.Keyword(null, "pass", "pass", 1574159993));
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_5941;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "fail", "fail", 1706214930), function(p__5942) {
  var map__5943 = p__5942;
  var map__5943__$1 = cljs.core.seq_QMARK_.call(null, map__5943) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5943) : map__5943;
  var m = map__5943__$1;
  var test_env = cljs.core.get.call(null, map__5943__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  var _STAR_print_fn_STAR_5944 = cljs.core._STAR_print_fn_STAR_;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var or__4122__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", -2097998143)).cljs$core$IFn$_invoke$arity$1(test_env);
    if (cljs.core.truth_(or__4122__auto__)) {
      return or__4122__auto__;
    } else {
      return cljs.core._STAR_print_fn_STAR_;
    }
  }();
  try {
    cemerick.cljs.test.inc_report_counter.call(null, test_env, new cljs.core.Keyword(null, "fail", "fail", 1706214930));
    cljs.core.println.call(null, "\nFAIL in", cemerick.cljs.test.testing_vars_str.call(null, m));
    if (cljs.core.seq.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1505935128)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)))) {
      cljs.core.println.call(null, cemerick.cljs.test.testing_contexts_str.call(null, test_env));
    } else {
    }
    var temp__4126__auto___5945 = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
    if (cljs.core.truth_(temp__4126__auto___5945)) {
      var message_5946 = temp__4126__auto___5945;
      cljs.core.println.call(null, message_5946);
    } else {
    }
    cljs.core.println.call(null, "expected:", cljs.core.pr_str.call(null, (new cljs.core.Keyword(null, "expected", "expected", 1583670997)).cljs$core$IFn$_invoke$arity$1(m)));
    return cljs.core.println.call(null, "  actual:", cljs.core.pr_str.call(null, (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m)));
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_5944;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "error", "error", -978969032), function(p__5947) {
  var map__5948 = p__5947;
  var map__5948__$1 = cljs.core.seq_QMARK_.call(null, map__5948) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5948) : map__5948;
  var m = map__5948__$1;
  var test_env = cljs.core.get.call(null, map__5948__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  var _STAR_print_fn_STAR_5949 = cljs.core._STAR_print_fn_STAR_;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var or__4122__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", -2097998143)).cljs$core$IFn$_invoke$arity$1(test_env);
    if (cljs.core.truth_(or__4122__auto__)) {
      return or__4122__auto__;
    } else {
      return cljs.core._STAR_print_fn_STAR_;
    }
  }();
  try {
    cemerick.cljs.test.inc_report_counter.call(null, test_env, new cljs.core.Keyword(null, "error", "error", -978969032));
    cljs.core.println.call(null, "\nERROR in", cemerick.cljs.test.testing_vars_str.call(null, m));
    if (cljs.core.seq.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1505935128)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)))) {
      cljs.core.println.call(null, cemerick.cljs.test.testing_contexts_str.call(null, test_env));
    } else {
    }
    var temp__4126__auto___5950 = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
    if (cljs.core.truth_(temp__4126__auto___5950)) {
      var message_5951 = temp__4126__auto___5950;
      cljs.core.println.call(null, message_5951);
    } else {
    }
    cljs.core.println.call(null, "expected:", cljs.core.pr_str.call(null, (new cljs.core.Keyword(null, "expected", "expected", 1583670997)).cljs$core$IFn$_invoke$arity$1(m)));
    cljs.core.print.call(null, "  actual: ");
    var actual = (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m);
    if (actual instanceof Error) {
      return cljs.core.println.call(null, actual.stack);
    } else {
      return cljs.core.prn.call(null, actual);
    }
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_5949;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "multiple-async-done", "multiple-async-done", 910410709), function(p__5952) {
  var map__5953 = p__5952;
  var map__5953__$1 = cljs.core.seq_QMARK_.call(null, map__5953) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5953) : map__5953;
  var m = map__5953__$1;
  var test_env = cljs.core.get.call(null, map__5953__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  var _STAR_print_fn_STAR_5954 = cljs.core._STAR_print_fn_STAR_;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var or__4122__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", -2097998143)).cljs$core$IFn$_invoke$arity$1(test_env);
    if (cljs.core.truth_(or__4122__auto__)) {
      return or__4122__auto__;
    } else {
      return cljs.core._STAR_print_fn_STAR_;
    }
  }();
  try {
    cemerick.cljs.test.inc_report_counter.call(null, test_env, new cljs.core.Keyword(null, "multiple-async-done", "multiple-async-done", 910410709));
    cljs.core.println.call(null, "\nWARNING in", cemerick.cljs.test.testing_vars_str.call(null, m));
    if (cljs.core.seq.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1505935128)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)))) {
      cljs.core.println.call(null, cemerick.cljs.test.testing_contexts_str.call(null, test_env));
    } else {
    }
    var temp__4126__auto__ = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var message = temp__4126__auto__;
      return cljs.core.println.call(null, message);
    } else {
      return null;
    }
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_5954;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "summary", "summary", 380847952), function(p__5955) {
  var map__5956 = p__5955;
  var map__5956__$1 = cljs.core.seq_QMARK_.call(null, map__5956) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5956) : map__5956;
  var test_env = map__5956__$1;
  var async = cljs.core.get.call(null, map__5956__$1, new cljs.core.Keyword(null, "async", "async", 1050769601));
  var error = cljs.core.get.call(null, map__5956__$1, new cljs.core.Keyword(null, "error", "error", -978969032));
  var fail = cljs.core.get.call(null, map__5956__$1, new cljs.core.Keyword(null, "fail", "fail", 1706214930));
  var pass = cljs.core.get.call(null, map__5956__$1, new cljs.core.Keyword(null, "pass", "pass", 1574159993));
  var test = cljs.core.get.call(null, map__5956__$1, new cljs.core.Keyword(null, "test", "test", 577538877));
  var _STAR_print_fn_STAR_5957 = cljs.core._STAR_print_fn_STAR_;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var or__4122__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", -2097998143)).cljs$core$IFn$_invoke$arity$1(test_env);
    if (cljs.core.truth_(or__4122__auto__)) {
      return or__4122__auto__;
    } else {
      return cljs.core._STAR_print_fn_STAR_;
    }
  }();
  try {
    var pending_count = function() {
      var and__4110__auto__ = cljs.core.not.call(null, cemerick.cljs.test.testing_complete_QMARK_.call(null, test_env));
      if (and__4110__auto__) {
        return cljs.core.apply.call(null, cljs.core._PLUS_, cljs.core.map.call(null, cljs.core.count, cljs.core.juxt.call(null, new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", -1491651312), new cljs.core.Keyword("cemerick.cljs.test", "running", "cemerick.cljs.test/running", -1954037558)).call(null, cljs.core.deref.call(null, async))));
      } else {
        return and__4110__auto__;
      }
    }();
    cljs.core.println.call(null, "\nRan", test, cljs.core.truth_(pending_count) ? "synchronous" : "", "tests containing", pass + fail + error, "assertions.");
    cljs.core.println.call(null, "Testing complete:", fail, "failures,", error, "errors.");
    if (cljs.core.truth_(pending_count)) {
      return cljs.core.println.call(null, "Waiting on", pending_count, [cljs.core.str("asynchronous test"), cljs.core.str(pending_count > 1 ? "s" : null), cljs.core.str(" to complete.")].join(""));
    } else {
      return null;
    }
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_5957;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033), function(p__5958) {
  var map__5959 = p__5958;
  var map__5959__$1 = cljs.core.seq_QMARK_.call(null, map__5959) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5959) : map__5959;
  var m = map__5959__$1;
  var async = cljs.core.get.call(null, map__5959__$1, new cljs.core.Keyword(null, "async", "async", 1050769601));
  var test_env = cljs.core.get.call(null, map__5959__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  var ns = cljs.core.get.call(null, map__5959__$1, new cljs.core.Keyword(null, "ns", "ns", 441598760));
  var _STAR_print_fn_STAR_5960 = cljs.core._STAR_print_fn_STAR_;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var or__4122__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", -2097998143)).cljs$core$IFn$_invoke$arity$1(test_env);
    if (cljs.core.truth_(or__4122__auto__)) {
      return or__4122__auto__;
    } else {
      return cljs.core._STAR_print_fn_STAR_;
    }
  }();
  try {
    return cljs.core.println.call(null, "\nTesting", ns, cljs.core.truth_(async) ? "(async)" : "");
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_5960;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645), function(p__5961) {
  var map__5962 = p__5961;
  var map__5962__$1 = cljs.core.seq_QMARK_.call(null, map__5962) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5962) : map__5962;
  var m = map__5962__$1;
  var test_env = cljs.core.get.call(null, map__5962__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  return null;
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100), function(p__5963) {
  var map__5964 = p__5963;
  var map__5964__$1 = cljs.core.seq_QMARK_.call(null, map__5964) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5964) : map__5964;
  var m = map__5964__$1;
  var test_env = cljs.core.get.call(null, map__5964__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  return null;
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545), function(p__5965) {
  var map__5966 = p__5965;
  var map__5966__$1 = cljs.core.seq_QMARK_.call(null, map__5966) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5966) : map__5966;
  var m = map__5966__$1;
  var test_env = cljs.core.get.call(null, map__5966__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  return null;
});
cemerick.cljs.test.register_fixtures_BANG_ = function() {
  var cemerick$cljs$test$register_fixtures_BANG___delegate = function(ns_sym, fixture_type, fixture_fns) {
    return cljs.core.swap_BANG_.call(null, cemerick.cljs.test.registered_fixtures, cljs.core.update_in, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns_sym, fixture_type], null), cljs.core.constantly.call(null, fixture_fns));
  };
  var cemerick$cljs$test$register_fixtures_BANG_ = function(ns_sym, fixture_type, var_args) {
    var fixture_fns = null;
    if (arguments.length > 2) {
      var G__5967__i = 0, G__5967__a = new Array(arguments.length - 2);
      while (G__5967__i < G__5967__a.length) {
        G__5967__a[G__5967__i] = arguments[G__5967__i + 2];
        ++G__5967__i;
      }
      fixture_fns = new cljs.core.IndexedSeq(G__5967__a, 0);
    }
    return cemerick$cljs$test$register_fixtures_BANG___delegate.call(this, ns_sym, fixture_type, fixture_fns);
  };
  cemerick$cljs$test$register_fixtures_BANG_.cljs$lang$maxFixedArity = 2;
  cemerick$cljs$test$register_fixtures_BANG_.cljs$lang$applyTo = function(arglist__5968) {
    var ns_sym = cljs.core.first(arglist__5968);
    arglist__5968 = cljs.core.next(arglist__5968);
    var fixture_type = cljs.core.first(arglist__5968);
    var fixture_fns = cljs.core.rest(arglist__5968);
    return cemerick$cljs$test$register_fixtures_BANG___delegate(ns_sym, fixture_type, fixture_fns);
  };
  cemerick$cljs$test$register_fixtures_BANG_.cljs$core$IFn$_invoke$arity$variadic = cemerick$cljs$test$register_fixtures_BANG___delegate;
  return cemerick$cljs$test$register_fixtures_BANG_;
}();
cemerick.cljs.test.default_fixture = function cemerick$cljs$test$default_fixture(f) {
  return f.call(null);
};
cemerick.cljs.test.compose_fixtures = function cemerick$cljs$test$compose_fixtures(f1, f2) {
  return function(g) {
    return f1.call(null, function() {
      return f2.call(null, g);
    });
  };
};
cemerick.cljs.test.join_fixtures = function cemerick$cljs$test$join_fixtures(fixtures) {
  return cljs.core.reduce.call(null, cemerick.cljs.test.compose_fixtures, cemerick.cljs.test.default_fixture, fixtures);
};
cemerick.cljs.test.async_test_QMARK_ = function cemerick$cljs$test$async_test_QMARK_(test_fn) {
  return cljs.core.boolean$.call(null, (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, test_fn)));
};
cemerick.cljs.test.test_async_fn = function cemerick$cljs$test$test_async_fn(async_test_env, test_name, test_fn) {
  cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100), new cljs.core.Keyword(null, "var", "var", -769682797), test_fn, new cljs.core.Keyword(null, "test-env", "test-env", -540228992), async_test_env, new cljs.core.Keyword(null, "test-name", "test-name", -675595913), test_name], null));
  cemerick.cljs.test.inc_report_counter.call(null, async_test_env, new cljs.core.Keyword(null, "test", "test", 577538877));
  return test_fn.call(null, new cemerick.cljs.test.TestContext(async_test_env, test_name, null, null, null));
};
cemerick.cljs.test.start_next_async_test = function cemerick$cljs$test$start_next_async_test(async_test_env) {
  var next_test = cljs.core.atom.call(null, function() {
    return null;
  });
  cljs.core.swap_BANG_.call(null, async_test_env, function(next_test) {
    return function(env) {
      var temp__4124__auto__ = function() {
        var and__4110__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "stop", "stop", -2140911342)).cljs$core$IFn$_invoke$arity$1(env));
        if (and__4110__auto__) {
          return cljs.core.first.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", -1491651312)).cljs$core$IFn$_invoke$arity$1(env));
        } else {
          return and__4110__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4124__auto__)) {
        var vec__5970 = temp__4124__auto__;
        var name = cljs.core.nth.call(null, vec__5970, 0, null);
        var testfn = cljs.core.nth.call(null, vec__5970, 1, null);
        cljs.core.reset_BANG_.call(null, next_test, testfn);
        var ns_5971 = cljs.core.namespace.call(null, name);
        if (cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "namespaces", "namespaces", -1444157469)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, async_test_env)), ns_5971)) {
        } else {
          cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033), new cljs.core.Keyword(null, "ns", "ns", 441598760), ns_5971, new cljs.core.Keyword(null, "test-env", "test-env", -540228992), async_test_env, new cljs.core.Keyword(null, "async", "async", 1050769601), true], null));
          cljs.core.alter_meta_BANG_.call(null, async_test_env, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "namespaces", "namespaces", -1444157469)], null), cljs.core.fnil.call(null, cljs.core.conj, cljs.core.PersistentHashSet.EMPTY), ns_5971);
        }
        return cljs.core.update_in.call(null, cljs.core.update_in.call(null, env, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", -1491651312)], null), cljs.core.dissoc, name), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "running", "cemerick.cljs.test/running", -1954037558)], null), cljs.core.assoc, 
        name, new Date);
      } else {
        return env;
      }
    };
  }(next_test));
  setTimeout(function(next_test) {
    return function() {
      return cljs.core.deref.call(null, next_test).call(null);
    };
  }(next_test), 1);
  return async_test_env;
};
cemerick.cljs.test.squelch_internals = function cemerick$cljs$test$squelch_internals(test_env) {
  var G__5976 = test_env;
  cljs.core.swap_BANG_.call(null, G__5976, function(G__5976) {
    return function(p1__5972_SHARP_) {
      return cljs.core.reduce.call(null, function(G__5976) {
        return function(env, p__5977) {
          var vec__5978 = p__5977;
          var k = cljs.core.nth.call(null, vec__5978, 0, null);
          var v = cljs.core.nth.call(null, vec__5978, 1, null);
          if (cljs.core._EQ_.call(null, cljs.core.namespace.call(null, k), cljs.core.namespace.call(null, new cljs.core.Keyword("cemerick.cljs.test", "foo", "cemerick.cljs.test/foo", -1669146357)))) {
            return env;
          } else {
            return cljs.core.assoc.call(null, env, k, v);
          }
        };
      }(G__5976), cljs.core.PersistentArrayMap.EMPTY, p1__5972_SHARP_);
    };
  }(G__5976));
  return G__5976;
};
cemerick.cljs.test.finish_test_entry_point = function cemerick$cljs$test$finish_test_entry_point(entry_point_QMARK_, test_env) {
  if (cljs.core.truth_(entry_point_QMARK_)) {
    if (cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", -1491651312)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)))))) {
      cljs.core.swap_BANG_.call(null, test_env, cljs.core.dissoc, new cljs.core.Keyword(null, "async", "async", 1050769601));
    } else {
      cemerick.cljs.test.start_next_async_test.call(null, (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)));
    }
    return cljs.core.deref.call(null, cemerick.cljs.test.squelch_internals.call(null, test_env));
  } else {
    return test_env;
  }
};
cemerick.cljs.test.schedule_async_test = function cemerick$cljs$test$schedule_async_test(async_test_env, test_name, test_fn) {
  cljs.core.swap_BANG_.call(null, async_test_env, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", -1491651312)], null), cljs.core.fnil.call(null, cljs.core.assoc, cljs.core.sorted_map.call(null)), test_name, cljs.core.with_meta.call(null, function() {
    return cemerick.cljs.test.test_async_fn.call(null, async_test_env, test_name, test_fn);
  }, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1843675177), test_name], null)));
  return async_test_env;
};
cemerick.cljs.test.done_STAR_ = function() {
  var cemerick$cljs$test$done_STAR_ = null;
  var cemerick$cljs$test$done_STAR___1 = function(p__5980) {
    var map__5984 = p__5980;
    var map__5984__$1 = cljs.core.seq_QMARK_.call(null, map__5984) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5984) : map__5984;
    var test_ctx = map__5984__$1;
    var test_name = cljs.core.get.call(null, map__5984__$1, new cljs.core.Keyword(null, "test-name", "test-name", -675595913));
    var async_test_env = cljs.core.get.call(null, map__5984__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
    if (test_ctx instanceof cemerick.cljs.test.TestContext) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null), new cljs.core.Symbol(null, "TestContext", "TestContext", -1631381989, null), new cljs.core.Symbol(null, "test-ctx", "test-ctx", -185362578, null))))].join(""));
    }
    var first_call_QMARK_ = cljs.core.atom.call(null, false);
    cljs.core.swap_BANG_.call(null, async_test_env, function(first_call_QMARK_, map__5984, map__5984__$1, test_ctx, test_name, async_test_env) {
      return function(env) {
        cljs.core.reset_BANG_.call(null, first_call_QMARK_, cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "running", "cemerick.cljs.test/running", -1954037558)).cljs$core$IFn$_invoke$arity$1(env), test_name));
        return cljs.core.update_in.call(null, env, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "running", "cemerick.cljs.test/running", -1954037558)], null), cljs.core.dissoc, test_name);
      };
    }(first_call_QMARK_, map__5984, map__5984__$1, test_ctx, test_name, async_test_env));
    if (cljs.core.truth_(cljs.core.deref.call(null, first_call_QMARK_))) {
      cemerick.cljs.test.do_report.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545), new cljs.core.Keyword(null, "var", "var", -769682797), test_name], null), test_ctx));
      if (cljs.core.truth_(cemerick.cljs.test.testing_complete_QMARK_.call(null, async_test_env))) {
        cemerick.cljs.test.squelch_internals.call(null, async_test_env);
      } else {
        cemerick.cljs.test.start_next_async_test.call(null, async_test_env);
      }
    } else {
      cemerick.cljs.test.do_report.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "multiple-async-done", "multiple-async-done", 910410709), new cljs.core.Keyword(null, "message", "message", -406056002), "`(done)` called multiple times to signal end-of-test"], null), test_ctx));
    }
    return async_test_env;
  };
  var cemerick$cljs$test$done_STAR___2 = function(p__5979, error) {
    var map__5983 = p__5979;
    var map__5983__$1 = cljs.core.seq_QMARK_.call(null, map__5983) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5983) : map__5983;
    var test_ctx = map__5983__$1;
    var test_name = cljs.core.get.call(null, map__5983__$1, new cljs.core.Keyword(null, "test-name", "test-name", -675595913));
    var test_env = cljs.core.get.call(null, map__5983__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
    if (test_ctx instanceof cemerick.cljs.test.TestContext) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null), new cljs.core.Symbol(null, "TestContext", "TestContext", -1631381989, null), new cljs.core.Symbol(null, "test-ctx", "test-ctx", -185362578, null))))].join(""));
    }
    cemerick.cljs.test.do_report.call(null, cemerick.cljs.test.do_report.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "message", "message", -406056002), "Uncaught exception, not in assertion.", new cljs.core.Keyword(null, "expected", "expected", 1583670997), null, new cljs.core.Keyword(null, "actual", "actual", 107306363), 
    error], null), test_ctx)));
    return cemerick$cljs$test$done_STAR_.call(null, test_ctx);
  };
  cemerick$cljs$test$done_STAR_ = function(p__5979, error) {
    switch(arguments.length) {
      case 1:
        return cemerick$cljs$test$done_STAR___1.call(this, p__5979);
      case 2:
        return cemerick$cljs$test$done_STAR___2.call(this, p__5979, error);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cemerick$cljs$test$done_STAR_.cljs$core$IFn$_invoke$arity$1 = cemerick$cljs$test$done_STAR___1;
  cemerick$cljs$test$done_STAR_.cljs$core$IFn$_invoke$arity$2 = cemerick$cljs$test$done_STAR___2;
  return cemerick$cljs$test$done_STAR_;
}();
cemerick.cljs.test.stop = function cemerick$cljs$test$stop(async_test_env) {
  return cljs.core.swap_BANG_.call(null, async_test_env, cljs.core.assoc, new cljs.core.Keyword(null, "stop", "stop", -2140911342), true);
};
cemerick.cljs.test.test_function = function() {
  var cemerick$cljs$test$test_function = null;
  var cemerick$cljs$test$test_function__1 = function(v) {
    return cemerick$cljs$test$test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), v);
  };
  var cemerick$cljs$test$test_function__2 = function(test_env, v) {
    var entry_point_QMARK___5759__auto__ = cemerick.cljs.test._STAR_entry_point_STAR_;
    var _STAR_entry_point_STAR_5988 = cemerick.cljs.test._STAR_entry_point_STAR_;
    cemerick.cljs.test._STAR_entry_point_STAR_ = false;
    try {
      if (cljs.core.fn_QMARK_.call(null, v)) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("test-var must be passed the function to be tested (not a symbol naming it)"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null))))].join(""));
      }
      var map__5989_5991 = cljs.core.meta.call(null, v);
      var map__5989_5992__$1 = cljs.core.seq_QMARK_.call(null, map__5989_5991) ? cljs.core.apply.call(null, cljs.core.hash_map, map__5989_5991) : map__5989_5991;
      var t_5993 = cljs.core.get.call(null, map__5989_5992__$1, new cljs.core.Keyword(null, "test", "test", 577538877));
      var test_name_5994 = cljs.core.get.call(null, map__5989_5992__$1, new cljs.core.Keyword(null, "name", "name", 1843675177));
      var async_QMARK__5995 = cljs.core.get.call(null, map__5989_5992__$1, new cljs.core.Keyword(null, "async", "async", 1050769601));
      if (cljs.core.truth_(t_5993)) {
        if (cljs.core.truth_(async_QMARK__5995)) {
          cemerick.cljs.test.schedule_async_test.call(null, (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)), test_name_5994, t_5993);
        } else {
          try {
            cljs.core.swap_BANG_.call(null, test_env, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "test-functions", "cemerick.cljs.test/test-functions", -1547551786)], null), cljs.core.conj, function() {
              var or__4122__auto__ = test_name_5994;
              if (cljs.core.truth_(or__4122__auto__)) {
                return or__4122__auto__;
              } else {
                return v;
              }
            }());
            cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100), new cljs.core.Keyword(null, "var", "var", -769682797), v, new cljs.core.Keyword(null, "test-env", "test-env", -540228992), test_env, new cljs.core.Keyword(null, "test-name", "test-name", -675595913), test_name_5994], null));
            cemerick.cljs.test.inc_report_counter.call(null, test_env, new cljs.core.Keyword(null, "test", "test", 577538877));
            try {
              t_5993.call(null, new cemerick.cljs.test.TestContext(test_env, test_name_5994, null, null, null));
            } catch (e5990) {
              if (e5990 instanceof Error) {
                var e_5996 = e5990;
                cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "message", "message", -406056002), "Uncaught exception, not in assertion.", new cljs.core.Keyword(null, "test-env", "test-env", -540228992), test_env, new cljs.core.Keyword(null, "test-name", "test-name", -675595913), test_name_5994, new cljs.core.Keyword(null, 
                "expected", "expected", 1583670997), null, new cljs.core.Keyword(null, "actual", "actual", 107306363), e_5996], null));
              } else {
                throw e5990;
              }
            }
            cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545), new cljs.core.Keyword(null, "var", "var", -769682797), v, new cljs.core.Keyword(null, "test-env", "test-env", -540228992), test_env, new cljs.core.Keyword(null, "test-name", "test-name", -675595913), test_name_5994], null));
          } finally {
            cljs.core.swap_BANG_.call(null, test_env, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "test-functions", "cemerick.cljs.test/test-functions", -1547551786)], null), cljs.core.pop);
          }
        }
      } else {
      }
      return cemerick.cljs.test.finish_test_entry_point.call(null, entry_point_QMARK___5759__auto__, test_env);
    } finally {
      cemerick.cljs.test._STAR_entry_point_STAR_ = _STAR_entry_point_STAR_5988;
    }
  };
  cemerick$cljs$test$test_function = function(test_env, v) {
    switch(arguments.length) {
      case 1:
        return cemerick$cljs$test$test_function__1.call(this, test_env);
      case 2:
        return cemerick$cljs$test$test_function__2.call(this, test_env, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cemerick$cljs$test$test_function.cljs$core$IFn$_invoke$arity$1 = cemerick$cljs$test$test_function__1;
  cemerick$cljs$test$test_function.cljs$core$IFn$_invoke$arity$2 = cemerick$cljs$test$test_function__2;
  return cemerick$cljs$test$test_function;
}();
cemerick.cljs.test.test_all_vars = function() {
  var cemerick$cljs$test$test_all_vars = null;
  var cemerick$cljs$test$test_all_vars__1 = function(ns_sym) {
    return cemerick$cljs$test$test_all_vars.call(null, cemerick.cljs.test.init_test_environment.call(null), ns_sym);
  };
  var cemerick$cljs$test$test_all_vars__2 = function(test_env, ns_sym) {
    var entry_point_QMARK___5759__auto__ = cemerick.cljs.test._STAR_entry_point_STAR_;
    var _STAR_entry_point_STAR_6005 = cemerick.cljs.test._STAR_entry_point_STAR_;
    cemerick.cljs.test._STAR_entry_point_STAR_ = false;
    try {
      var tests_6010 = cljs.core.filter.call(null, function(_STAR_entry_point_STAR_6005, entry_point_QMARK___5759__auto__) {
        return function(p1__5997_SHARP_) {
          return(new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, p1__5997_SHARP_));
        };
      }(_STAR_entry_point_STAR_6005, entry_point_QMARK___5759__auto__), cljs.core.vals.call(null, cljs.core.get.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_tests), ns_sym)));
      var once_fixture_fn_6011 = cemerick.cljs.test.join_fixtures.call(null, (new cljs.core.Keyword(null, "once", "once", -262568523)).cljs$core$IFn$_invoke$arity$1(ns_sym.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_fixtures))));
      var each_fixture_fn_6012 = cemerick.cljs.test.join_fixtures.call(null, (new cljs.core.Keyword(null, "each", "each", 940016129)).cljs$core$IFn$_invoke$arity$1(ns_sym.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_fixtures))));
      once_fixture_fn_6011.call(null, function(once_fixture_fn_6011, each_fixture_fn_6012, tests_6010, _STAR_entry_point_STAR_6005, entry_point_QMARK___5759__auto__) {
        return function() {
          var seq__6006 = cljs.core.seq.call(null, cljs.core.remove.call(null, cemerick.cljs.test.async_test_QMARK_, tests_6010));
          var chunk__6007 = null;
          var count__6008 = 0;
          var i__6009 = 0;
          while (true) {
            if (i__6009 < count__6008) {
              var v = cljs.core._nth.call(null, chunk__6007, i__6009);
              each_fixture_fn_6012.call(null, function(seq__6006, chunk__6007, count__6008, i__6009, v, once_fixture_fn_6011, each_fixture_fn_6012, tests_6010, _STAR_entry_point_STAR_6005, entry_point_QMARK___5759__auto__) {
                return function() {
                  return cemerick.cljs.test.test_function.call(null, test_env, v);
                };
              }(seq__6006, chunk__6007, count__6008, i__6009, v, once_fixture_fn_6011, each_fixture_fn_6012, tests_6010, _STAR_entry_point_STAR_6005, entry_point_QMARK___5759__auto__));
              var G__6013 = seq__6006;
              var G__6014 = chunk__6007;
              var G__6015 = count__6008;
              var G__6016 = i__6009 + 1;
              seq__6006 = G__6013;
              chunk__6007 = G__6014;
              count__6008 = G__6015;
              i__6009 = G__6016;
              continue;
            } else {
              var temp__4126__auto__ = cljs.core.seq.call(null, seq__6006);
              if (temp__4126__auto__) {
                var seq__6006__$1 = temp__4126__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__6006__$1)) {
                  var c__4907__auto__ = cljs.core.chunk_first.call(null, seq__6006__$1);
                  var G__6017 = cljs.core.chunk_rest.call(null, seq__6006__$1);
                  var G__6018 = c__4907__auto__;
                  var G__6019 = cljs.core.count.call(null, c__4907__auto__);
                  var G__6020 = 0;
                  seq__6006 = G__6017;
                  chunk__6007 = G__6018;
                  count__6008 = G__6019;
                  i__6009 = G__6020;
                  continue;
                } else {
                  var v = cljs.core.first.call(null, seq__6006__$1);
                  each_fixture_fn_6012.call(null, function(seq__6006, chunk__6007, count__6008, i__6009, v, seq__6006__$1, temp__4126__auto__, once_fixture_fn_6011, each_fixture_fn_6012, tests_6010, _STAR_entry_point_STAR_6005, entry_point_QMARK___5759__auto__) {
                    return function() {
                      return cemerick.cljs.test.test_function.call(null, test_env, v);
                    };
                  }(seq__6006, chunk__6007, count__6008, i__6009, v, seq__6006__$1, temp__4126__auto__, once_fixture_fn_6011, each_fixture_fn_6012, tests_6010, _STAR_entry_point_STAR_6005, entry_point_QMARK___5759__auto__));
                  var G__6021 = cljs.core.next.call(null, seq__6006__$1);
                  var G__6022 = null;
                  var G__6023 = 0;
                  var G__6024 = 0;
                  seq__6006 = G__6021;
                  chunk__6007 = G__6022;
                  count__6008 = G__6023;
                  i__6009 = G__6024;
                  continue;
                }
              } else {
                return null;
              }
            }
            break;
          }
        };
      }(once_fixture_fn_6011, each_fixture_fn_6012, tests_6010, _STAR_entry_point_STAR_6005, entry_point_QMARK___5759__auto__));
      cljs.core.reduce.call(null, function(tests_6010, _STAR_entry_point_STAR_6005, entry_point_QMARK___5759__auto__) {
        return function(p1__5998_SHARP_, p2__5999_SHARP_) {
          return cljs.core.apply.call(null, cemerick.cljs.test.schedule_async_test, p1__5998_SHARP_, p2__5999_SHARP_);
        };
      }(tests_6010, _STAR_entry_point_STAR_6005, entry_point_QMARK___5759__auto__), (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)), cljs.core.map.call(null, cljs.core.comp.call(null, cljs.core.juxt.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "test", "test", 577538877)), cljs.core.meta), cljs.core.filter.call(null, cemerick.cljs.test.async_test_QMARK_, tests_6010)));
      return cemerick.cljs.test.finish_test_entry_point.call(null, entry_point_QMARK___5759__auto__, test_env);
    } finally {
      cemerick.cljs.test._STAR_entry_point_STAR_ = _STAR_entry_point_STAR_6005;
    }
  };
  cemerick$cljs$test$test_all_vars = function(test_env, ns_sym) {
    switch(arguments.length) {
      case 1:
        return cemerick$cljs$test$test_all_vars__1.call(this, test_env);
      case 2:
        return cemerick$cljs$test$test_all_vars__2.call(this, test_env, ns_sym);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cemerick$cljs$test$test_all_vars.cljs$core$IFn$_invoke$arity$1 = cemerick$cljs$test$test_all_vars__1;
  cemerick$cljs$test$test_all_vars.cljs$core$IFn$_invoke$arity$2 = cemerick$cljs$test$test_all_vars__2;
  return cemerick$cljs$test$test_all_vars;
}();
cemerick.cljs.test.test_ns = function() {
  var cemerick$cljs$test$test_ns = null;
  var cemerick$cljs$test$test_ns__1 = function(ns_sym) {
    return cemerick$cljs$test$test_ns.call(null, cemerick.cljs.test.init_test_environment.call(null), ns_sym);
  };
  var cemerick$cljs$test$test_ns__2 = function(test_env, ns_sym) {
    var entry_point_QMARK___5759__auto__ = cemerick.cljs.test._STAR_entry_point_STAR_;
    var _STAR_entry_point_STAR_6026 = cemerick.cljs.test._STAR_entry_point_STAR_;
    cemerick.cljs.test._STAR_entry_point_STAR_ = false;
    try {
      cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033), new cljs.core.Keyword(null, "ns", "ns", 441598760), ns_sym, new cljs.core.Keyword(null, "test-env", "test-env", -540228992), test_env], null));
      var temp__4124__auto___6027 = cljs.core.get.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_test_hooks), ns_sym);
      if (cljs.core.truth_(temp__4124__auto___6027)) {
        var test_hook_6028 = temp__4124__auto___6027;
        test_hook_6028.call(null, test_env);
      } else {
        cemerick.cljs.test.test_all_vars.call(null, test_env, ns_sym);
      }
      cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645), new cljs.core.Keyword(null, "ns", "ns", 441598760), ns_sym, new cljs.core.Keyword(null, "test-env", "test-env", -540228992), test_env], null));
      return cemerick.cljs.test.finish_test_entry_point.call(null, entry_point_QMARK___5759__auto__, test_env);
    } finally {
      cemerick.cljs.test._STAR_entry_point_STAR_ = _STAR_entry_point_STAR_6026;
    }
  };
  cemerick$cljs$test$test_ns = function(test_env, ns_sym) {
    switch(arguments.length) {
      case 1:
        return cemerick$cljs$test$test_ns__1.call(this, test_env);
      case 2:
        return cemerick$cljs$test$test_ns__2.call(this, test_env, ns_sym);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cemerick$cljs$test$test_ns.cljs$core$IFn$_invoke$arity$1 = cemerick$cljs$test$test_ns__1;
  cemerick$cljs$test$test_ns.cljs$core$IFn$_invoke$arity$2 = cemerick$cljs$test$test_ns__2;
  return cemerick$cljs$test$test_ns;
}();
cemerick.cljs.test.print_summary = function cemerick$cljs$test$print_summary(env) {
  return cemerick.cljs.test.do_report.call(null, cljs.core.assoc.call(null, env, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952)));
};
cemerick.cljs.test.async_test_summary = function cemerick$cljs$test$async_test_summary(test_env) {
  var async_test_env = cemerick.cljs.test.maybe_deref.call(null, (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(test_env));
  var tests = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(async_test_env);
  if (tests > 0) {
    return cemerick.cljs.test.print_summary.call(null, cljs.core.merge_with.call(null, cljs.core._PLUS_, test_env, async_test_env));
  } else {
    return null;
  }
};
cemerick.cljs.test.test_summary = function cemerick$cljs$test$test_summary(test_env) {
  var test_env__$1 = cemerick.cljs.test.maybe_deref.call(null, test_env);
  cemerick.cljs.test.print_summary.call(null, test_env__$1);
  return cemerick.cljs.test.on_testing_complete.call(null, test_env__$1, cemerick.cljs.test.async_test_summary);
};
cemerick.cljs.test.run_tests_STAR_ = function() {
  var cemerick$cljs$test$run_tests_STAR___delegate = function(namespaces) {
    var vec__6035 = cljs.core.first.call(null, namespaces) instanceof cljs.core.Atom ? namespaces : cljs.core.cons.call(null, cemerick.cljs.test.init_test_environment.call(null), namespaces);
    var test_env = cljs.core.nth.call(null, vec__6035, 0, null);
    var namespaces__$1 = cljs.core.nthnext.call(null, vec__6035, 1);
    var entry_point_QMARK___5759__auto__ = cemerick.cljs.test._STAR_entry_point_STAR_;
    var _STAR_entry_point_STAR_6036 = cemerick.cljs.test._STAR_entry_point_STAR_;
    cemerick.cljs.test._STAR_entry_point_STAR_ = false;
    try {
      var seq__6037_6041 = cljs.core.seq.call(null, cljs.core.distinct.call(null, namespaces__$1));
      var chunk__6038_6042 = null;
      var count__6039_6043 = 0;
      var i__6040_6044 = 0;
      while (true) {
        if (i__6040_6044 < count__6039_6043) {
          var ns_6045 = cljs.core._nth.call(null, chunk__6038_6042, i__6040_6044);
          cemerick.cljs.test.test_ns.call(null, test_env, ns_6045);
          var G__6046 = seq__6037_6041;
          var G__6047 = chunk__6038_6042;
          var G__6048 = count__6039_6043;
          var G__6049 = i__6040_6044 + 1;
          seq__6037_6041 = G__6046;
          chunk__6038_6042 = G__6047;
          count__6039_6043 = G__6048;
          i__6040_6044 = G__6049;
          continue;
        } else {
          var temp__4126__auto___6050 = cljs.core.seq.call(null, seq__6037_6041);
          if (temp__4126__auto___6050) {
            var seq__6037_6051__$1 = temp__4126__auto___6050;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__6037_6051__$1)) {
              var c__4907__auto___6052 = cljs.core.chunk_first.call(null, seq__6037_6051__$1);
              var G__6053 = cljs.core.chunk_rest.call(null, seq__6037_6051__$1);
              var G__6054 = c__4907__auto___6052;
              var G__6055 = cljs.core.count.call(null, c__4907__auto___6052);
              var G__6056 = 0;
              seq__6037_6041 = G__6053;
              chunk__6038_6042 = G__6054;
              count__6039_6043 = G__6055;
              i__6040_6044 = G__6056;
              continue;
            } else {
              var ns_6057 = cljs.core.first.call(null, seq__6037_6051__$1);
              cemerick.cljs.test.test_ns.call(null, test_env, ns_6057);
              var G__6058 = cljs.core.next.call(null, seq__6037_6051__$1);
              var G__6059 = null;
              var G__6060 = 0;
              var G__6061 = 0;
              seq__6037_6041 = G__6058;
              chunk__6038_6042 = G__6059;
              count__6039_6043 = G__6060;
              i__6040_6044 = G__6061;
              continue;
            }
          } else {
          }
        }
        break;
      }
      cemerick.cljs.test.test_summary.call(null, test_env);
      return cemerick.cljs.test.finish_test_entry_point.call(null, entry_point_QMARK___5759__auto__, test_env);
    } finally {
      cemerick.cljs.test._STAR_entry_point_STAR_ = _STAR_entry_point_STAR_6036;
    }
  };
  var cemerick$cljs$test$run_tests_STAR_ = function(var_args) {
    var namespaces = null;
    if (arguments.length > 0) {
      var G__6062__i = 0, G__6062__a = new Array(arguments.length - 0);
      while (G__6062__i < G__6062__a.length) {
        G__6062__a[G__6062__i] = arguments[G__6062__i + 0];
        ++G__6062__i;
      }
      namespaces = new cljs.core.IndexedSeq(G__6062__a, 0);
    }
    return cemerick$cljs$test$run_tests_STAR___delegate.call(this, namespaces);
  };
  cemerick$cljs$test$run_tests_STAR_.cljs$lang$maxFixedArity = 0;
  cemerick$cljs$test$run_tests_STAR_.cljs$lang$applyTo = function(arglist__6063) {
    var namespaces = cljs.core.seq(arglist__6063);
    return cemerick$cljs$test$run_tests_STAR___delegate(namespaces);
  };
  cemerick$cljs$test$run_tests_STAR_.cljs$core$IFn$_invoke$arity$variadic = cemerick$cljs$test$run_tests_STAR___delegate;
  return cemerick$cljs$test$run_tests_STAR_;
}();
goog.exportSymbol("cemerick.cljs.test.run_tests_STAR_", cemerick.cljs.test.run_tests_STAR_);
cemerick.cljs.test.run_all_tests = function() {
  var cemerick$cljs$test$run_all_tests = null;
  var cemerick$cljs$test$run_all_tests__0 = function() {
    return cljs.core.apply.call(null, cemerick.cljs.test.run_tests_STAR_, cljs.core.keys.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_tests)));
  };
  var cemerick$cljs$test$run_all_tests__1 = function(re) {
    return cljs.core.apply.call(null, cemerick.cljs.test.run_tests_STAR_, cljs.core.filter.call(null, function(p1__6064_SHARP_) {
      return cljs.core.re_matches.call(null, re, cljs.core.name.call(null, p1__6064_SHARP_));
    }, cljs.core.keys.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_tests))));
  };
  cemerick$cljs$test$run_all_tests = function(re) {
    switch(arguments.length) {
      case 0:
        return cemerick$cljs$test$run_all_tests__0.call(this);
      case 1:
        return cemerick$cljs$test$run_all_tests__1.call(this, re);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cemerick$cljs$test$run_all_tests.cljs$core$IFn$_invoke$arity$0 = cemerick$cljs$test$run_all_tests__0;
  cemerick$cljs$test$run_all_tests.cljs$core$IFn$_invoke$arity$1 = cemerick$cljs$test$run_all_tests__1;
  return cemerick$cljs$test$run_all_tests;
}();
goog.exportSymbol("cemerick.cljs.test.run_all_tests", cemerick.cljs.test.run_all_tests);
cemerick.cljs.test.successful_QMARK_ = function cemerick$cljs$test$successful_QMARK_(test_env) {
  var map__6066 = cemerick.cljs.test.maybe_deref.call(null, test_env);
  var map__6066__$1 = cljs.core.seq_QMARK_.call(null, map__6066) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6066) : map__6066;
  var async = cljs.core.get.call(null, map__6066__$1, new cljs.core.Keyword(null, "async", "async", 1050769601));
  var error = cljs.core.get.call(null, map__6066__$1, new cljs.core.Keyword(null, "error", "error", -978969032));
  var fail = cljs.core.get.call(null, map__6066__$1, new cljs.core.Keyword(null, "fail", "fail", 1706214930));
  var and__4110__auto__ = cemerick.cljs.test.testing_complete_QMARK_.call(null, test_env);
  if (cljs.core.truth_(and__4110__auto__)) {
    var and__4110__auto____$1 = function() {
      var or__4122__auto__ = fail;
      if (cljs.core.truth_(or__4122__auto__)) {
        return or__4122__auto__;
      } else {
        return 0;
      }
    }() === 0;
    if (and__4110__auto____$1) {
      var and__4110__auto____$2 = function() {
        var or__4122__auto__ = error;
        if (cljs.core.truth_(or__4122__auto__)) {
          return or__4122__auto__;
        } else {
          return 0;
        }
      }() === 0;
      if (and__4110__auto____$2) {
        var or__4122__auto__ = async == null;
        if (or__4122__auto__) {
          return or__4122__auto__;
        } else {
          return cemerick$cljs$test$successful_QMARK_.call(null, async);
        }
      } else {
        return and__4110__auto____$2;
      }
    } else {
      return and__4110__auto____$1;
    }
  } else {
    return and__4110__auto__;
  }
};
goog.exportSymbol("cemerick.cljs.test.successful_QMARK_", cemerick.cljs.test.successful_QMARK_);
cemerick.cljs.test.set_print_fn_BANG_ = function cemerick$cljs$test$set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
goog.exportSymbol("cemerick.cljs.test.set_print_fn_BANG_", cemerick.cljs.test.set_print_fn_BANG_);
goog.provide("cljs_unit_test.core_test");
goog.require("cljs.core");
goog.require("cljs_unit_test.core");
goog.require("cemerick.cljs.test");
cljs_unit_test.core_test.test_sum_two_numbers = function cljs_unit_test$core_test$test_sum_two_numbers() {
  return cemerick.cljs.test.test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), cljs_unit_test.core_test.test_sum_two_numbers);
};
cljs_unit_test.core_test.test_sum_two_numbers = cljs.core.with_meta.call(null, cljs_unit_test.core_test.test_sum_two_numbers, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 30, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 8, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", "line", 212345235), 8, new cljs.core.Keyword(null, "file", "file", 
-1269645878), "/home/brother/projects/private/clojure/cljs-unit-test/test/cljs/cljs_unit_test/core_test.cljs"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.with_meta.call(null, new cljs.core.Symbol("cljs-unit-test.core-test", "test-sum-two-numbers", "cljs-unit-test.core-test/test-sum-two-numbers", -1500377613, null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 
30, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 8, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", "line", 212345235), 8, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/brother/projects/private/clojure/cljs-unit-test/test/cljs/cljs_unit_test/core_test.cljs"], null)), new cljs.core.Keyword(null, "test", "test", 577538877), function cljs_unit_test$core_test$test_sum_two_numbers_test(test_ctx__5722__auto__) {
  var _test_ctx = test_ctx__5722__auto__;
  var async_QMARK___5637__auto__ = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx)));
  var _STAR_test_ctx_STAR_5893 = cemerick.cljs.test._STAR_test_ctx_STAR_;
  cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___5637__auto__) ? null : _test_ctx;
  try {
    try {
      var _test_ctx_5901__$1 = _test_ctx;
      var async_QMARK___5637__auto___5902__$1 = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx_5901__$1)));
      var _STAR_test_ctx_STAR_5895_5903 = cemerick.cljs.test._STAR_test_ctx_STAR_;
      cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___5637__auto___5902__$1) ? null : _test_ctx_5901__$1;
      try {
        try {
          try {
            var values__5657__auto___5904 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 4), cljs_unit_test.core.sum_two_numbers.call(null, 2, 2));
            var result__5658__auto___5905 = cljs.core.apply.call(null, cljs.core._EQ_, values__5657__auto___5904);
            if (result__5658__auto___5905 instanceof cemerick.cljs.test.TestContext) {
              throw new Error("TestContext provided as [form] in `is` assertion. If using `is` with an explicit test context, use the 3-arg arity.");
            } else {
            }
            if (cljs.core.truth_(result__5658__auto___5905)) {
              cemerick.cljs.test.do_report.call(null, _test_ctx_5901__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol("core", "sum-two-numbers", "core/sum-two-numbers", -1273326994, null), 2, 2), 4), new cljs.core.Keyword(null, 
              "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__5657__auto___5904), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            } else {
              cemerick.cljs.test.do_report.call(null, _test_ctx_5901__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol("core", "sum-two-numbers", "core/sum-two-numbers", -1273326994, null), 2, 2), 4), new cljs.core.Keyword(null, 
              "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__5657__auto___5904)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            }
          } catch (e5897) {
            if (e5897 instanceof Error) {
              var t__5694__auto___5906 = e5897;
              cemerick.cljs.test.do_report.call(null, _test_ctx_5901__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol("core", "sum-two-numbers", "core/sum-two-numbers", -1273326994, null), 2, 2), 4), new cljs.core.Keyword(null, 
              "actual", "actual", 107306363), t__5694__auto___5906, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            } else {
              throw e5897;
            }
          }
        } catch (e5896) {
          if (e5896 instanceof Error) {
            var e__5638__auto___5907 = e5896;
            if (cljs.core.truth_(async_QMARK___5637__auto___5902__$1)) {
              cemerick.cljs.test.done_STAR_.call(null, _test_ctx_5901__$1, e__5638__auto___5907);
            } else {
              throw e__5638__auto___5907;
            }
          } else {
            throw e5896;
          }
        }
      } finally {
        cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_5895_5903;
      }
      var _test_ctx__$1 = _test_ctx;
      var async_QMARK___5637__auto____$1 = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx__$1)));
      var _STAR_test_ctx_STAR_5898 = cemerick.cljs.test._STAR_test_ctx_STAR_;
      cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___5637__auto____$1) ? null : _test_ctx__$1;
      try {
        try {
          try {
            var values__5657__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 5), cljs_unit_test.core.sum_two_numbers.call(null, 0, 5));
            var result__5658__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__5657__auto__);
            if (result__5658__auto__ instanceof cemerick.cljs.test.TestContext) {
              throw new Error("TestContext provided as [form] in `is` assertion. If using `is` with an explicit test context, use the 3-arg arity.");
            } else {
            }
            if (cljs.core.truth_(result__5658__auto__)) {
              cemerick.cljs.test.do_report.call(null, _test_ctx__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol("core", "sum-two-numbers", "core/sum-two-numbers", -1273326994, null), 0, 5), 5), new cljs.core.Keyword(null, 
              "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__5657__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            } else {
              cemerick.cljs.test.do_report.call(null, _test_ctx__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol("core", "sum-two-numbers", "core/sum-two-numbers", -1273326994, null), 0, 5), 5), new cljs.core.Keyword(null, 
              "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__5657__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            }
            return result__5658__auto__;
          } catch (e5900) {
            if (e5900 instanceof Error) {
              var t__5694__auto__ = e5900;
              return cemerick.cljs.test.do_report.call(null, _test_ctx__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol("core", "sum-two-numbers", "core/sum-two-numbers", -1273326994, null), 0, 5), 5), new cljs.core.Keyword(null, 
              "actual", "actual", 107306363), t__5694__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            } else {
              throw e5900;
            }
          }
        } catch (e5899) {
          if (e5899 instanceof Error) {
            var e__5638__auto__ = e5899;
            if (cljs.core.truth_(async_QMARK___5637__auto____$1)) {
              return cemerick.cljs.test.done_STAR_.call(null, _test_ctx__$1, e__5638__auto__);
            } else {
              throw e__5638__auto__;
            }
          } else {
            throw e5899;
          }
        }
      } finally {
        cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_5898;
      }
    } catch (e5894) {
      if (e5894 instanceof Error) {
        var e__5638__auto__ = e5894;
        if (cljs.core.truth_(async_QMARK___5637__auto__)) {
          return cemerick.cljs.test.done_STAR_.call(null, _test_ctx, e__5638__auto__);
        } else {
          throw e__5638__auto__;
        }
      } else {
        throw e5894;
      }
    }
  } finally {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_5893;
  }
}], null)));
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "cljs-unit-test.core-test", "cljs-unit-test.core-test", 1414856091, null), new cljs.core.Symbol("cljs-unit-test.core-test", "test-sum-two-numbers", "cljs-unit-test.core-test/test-sum-two-numbers", -1500377613, null), cljs_unit_test.core_test.test_sum_two_numbers);
